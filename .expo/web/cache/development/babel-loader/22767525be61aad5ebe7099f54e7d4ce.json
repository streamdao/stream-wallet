{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as solanaWeb3 from '@solana/web3.js';\nimport * as Random from 'expo-random';\nimport { ethers } from 'ethers';\nimport { Buffer } from 'buffer';\nimport * as ed25519 from 'ed25519-hd-key';\nimport nacl from 'tweetnacl';\nimport { Account, Connection, PublicKey } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { symbolList1, symbolList2, symbolList3 } from \"../tokensList\";\nimport * as Clipboard from 'expo-clipboard';\nimport * as SecureStore from 'expo-secure-store';\nvar SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\nvar url = 'https://proud-small-pond.solana-mainnet.quiknode.pro/b9308b243fd5cda46faf633bfc52df5a1b2d7abf/';\nvar connection = new Connection(url);\nvar programId = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nvar apiKey = 'fb778058-7d11-4c17-8f03-5212f68ed1c7';\n\nfunction findAssociatedTokenAddress(walletAddress, tokenMintAddress) {\n  return _regeneratorRuntime.async(function findAssociatedTokenAddress$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(PublicKey.findProgramAddress([walletAddress.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), tokenMintAddress.toBuffer()], SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent[0]);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction shortenPublicKey(publicKey, keepStart, keepEnd, sliceEnd) {\n  return publicKey.slice(keepStart, keepEnd) + '...' + publicKey.slice(sliceEnd);\n}\n\nfunction normalizeNumber(number) {\n  var _parseFloat;\n\n  return (_parseFloat = parseFloat(number)) == null ? void 0 : _parseFloat.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nvar DERIVATION_PATH = {\n  deprecated: undefined,\n  bip44: 'bip44',\n  bip44Change: 'bip44Change',\n  bip44Root: 'bip44Root'\n};\n\nfunction getAccountFromSeed(seed, walletIndex) {\n  var dPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var accountIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var derivedSeed = deriveSeed(seed, walletIndex, dPath, accountIndex);\n  return new Account(nacl.sign.keyPair.fromSeed(derivedSeed).secretKey);\n}\n\nvar deriveSeed = function deriveSeed(seed, walletIndex, derivationPath, accountIndex) {\n  var path44Change = \"m/44'/501'/\" + walletIndex + \"'/0'\";\n  return ed25519.derivePath(path44Change, Buffer.from(seed, 'hex')).key;\n};\n\nvar deriveSeed2 = function deriveSeed2(seed, walletIndex, derivationPath, accountIndex) {\n  var path44Change = \"m/44'/501'/\" + walletIndex + \"'/0'\";\n  return ed25519.derivePath(path44Change, Buffer.from(seed, 'hex')).key;\n};\n\nvar copyToClipboard = function copyToClipboard(copied) {\n  return _regeneratorRuntime.async(function copyToClipboard$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          Clipboard.setString(copied);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar generateMnemonic = function generateMnemonic() {\n  var randomBytes, mnemonic;\n  return _regeneratorRuntime.async(function generateMnemonic$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Random.getRandomBytesAsync(32));\n\n        case 2:\n          randomBytes = _context3.sent;\n          mnemonic = ethers.utils.entropyToMnemonic(randomBytes);\n          return _context3.abrupt(\"return\", mnemonic);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mnemonicToSeed = function mnemonicToSeed(mnemonic) {\n  var bip39, seed;\n  return _regeneratorRuntime.async(function mnemonicToSeed$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(import('bip39'));\n\n        case 2:\n          bip39 = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(bip39.mnemonicToSeed(mnemonic));\n\n        case 5:\n          seed = _context4.sent;\n          return _context4.abrupt(\"return\", Buffer.from(seed).toString('hex'));\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar accountFromSeed = function accountFromSeed(seed, walletIndex, derivationPath, accountIndex) {\n  var derivedSeed = deriveSeed(seed, walletIndex, derivationPath, accountIndex);\n  var keyPair = nacl.sign.keyPair.fromSeed(derivedSeed);\n  var acc = new solanaWeb3.Keypair(keyPair);\n  return acc;\n};\n\nvar maskedAddress = function maskedAddress(address) {\n  if (!address) return;\n  return address.slice(0, 8) + \"...\" + address.slice(address.length - 8);\n};\n\nfunction getSubWalletsData(passcode) {\n  var subWallets1, iterate, i, newAccount, publicKey, subWalletName, _programId, ownedTokens, result2;\n\n  return _regeneratorRuntime.async(function getSubWalletsData$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          subWallets1 = [];\n          iterate = true;\n          i = 0;\n\n        case 3:\n          if (!(iterate === true)) {\n            _context5.next = 20;\n            break;\n          }\n\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(getSolanaAccount(i, passcode));\n\n        case 6:\n          newAccount = _context5.sent;\n          publicKey = newAccount.publicKey;\n          subWalletName = 'SubWallet ' + (1 + i);\n          _programId = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n          _context5.next = 12;\n          return _regeneratorRuntime.awrap(connection.getTokenAccountsByOwner(publicKey, {\n            programId: _programId\n          }).catch(function (err) {\n            return console.warn('errorr', err);\n          }));\n\n        case 12:\n          ownedTokens = _context5.sent;\n          _context5.next = 15;\n          return _regeneratorRuntime.awrap(connection.getParsedAccountInfo(publicKey));\n\n        case 15:\n          result2 = _context5.sent;\n\n          if (!result2.value) {\n            iterate = false;\n          } else {\n            subWallets1.push({\n              publicKey: publicKey.toString('hex'),\n              subWalletName: subWalletName\n            });\n          }\n\n          i++;\n          _context5.next = 3;\n          break;\n\n        case 20:\n          return _context5.abrupt(\"return\", subWallets1);\n\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getOwnedTokensData(subWallets, passcode, tokenMap, tokenPairs) {\n  var solPairs, tokensBySubWallet, newAccountArray, _loop, i;\n\n  return _regeneratorRuntime.async(function getOwnedTokensData$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          console.log('hello get owned');\n          solPairs = tokenPairs.find(function (pair) {\n            return pair.symbol = 'SOL';\n          });\n          tokensBySubWallet = [];\n          newAccountArray = [];\n\n          _loop = function _loop(i) {\n            var newAccount, publicKey, ownedTokens, solBalance, realSolBalance, ownedTokensArray, solToken, _priceData, _price, percent_change_24h, _percent_change_30d, _percent_change_60d, _percent_change_90d, volume_24h, market_cap, market_cap_dominance, price_30d, price_60d, price_90d, tokenObject, ownedTokensSymbols, _loop2, _i, filteredOwnedSymbols, ownedSymbolsList, iterate, counter, aboutData, combinedOwnedTokensArray, _loop3, _i2, priceData, finalCombinedOwnedTokensArray, _loop4, _i3;\n\n            return _regeneratorRuntime.async(function _loop$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return _regeneratorRuntime.awrap(getSolanaAccount(i, passcode));\n\n                  case 2:\n                    newAccount = _context7.sent;\n                    publicKey = newAccount.publicKey;\n                    _context7.next = 6;\n                    return _regeneratorRuntime.awrap(connection.getTokenAccountsByOwner(publicKey, {\n                      programId: programId\n                    }).catch(function (err) {\n                      return console.log('errorr', err);\n                    }));\n\n                  case 6:\n                    ownedTokens = _context7.sent;\n                    _context7.next = 9;\n                    return _regeneratorRuntime.awrap(connection.getBalance(publicKey));\n\n                  case 9:\n                    solBalance = _context7.sent;\n                    realSolBalance = solBalance * 0.000000001;\n                    ownedTokensArray = [];\n                    solToken = void 0;\n\n                    if (!(solBalance > 0)) {\n                      _context7.next = 24;\n                      break;\n                    }\n\n                    _context7.next = 16;\n                    return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=SOL\", {\n                      headers: {\n                        'X-CMC_PRO_API_KEY': apiKey,\n                        Accept: 'application/json',\n                        'Accept-Encoding': 'deflate, gzip'\n                      }\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (data) {\n                      var dataArray = Object.values(data.data);\n                      var percent_change_24h = dataArray[0].quote.USD.percent_change_24h;\n                      var percent_change_30d = dataArray[0].quote.USD.percent_change_30d;\n                      var percent_change_60d = dataArray[0].quote.USD.percent_change_60d;\n                      var percent_change_90d = dataArray[0].quote.USD.percent_change_90d;\n                      var _dataArray$0$quote$US = dataArray[0].quote.USD,\n                          price = _dataArray$0$quote$US.price,\n                          volume_24h = _dataArray$0$quote$US.volume_24h,\n                          market_cap = _dataArray$0$quote$US.market_cap,\n                          market_cap_dominance = _dataArray$0$quote$US.market_cap_dominance;\n                      return {\n                        price: price,\n                        percent_change_24h: percent_change_24h,\n                        percent_change_30d: percent_change_30d,\n                        percent_change_60d: percent_change_60d,\n                        percent_change_90d: percent_change_90d,\n                        volume_24h: volume_24h,\n                        market_cap: market_cap,\n                        market_cap_dominance: market_cap_dominance\n                      };\n                    }).catch(function (error) {\n                      return console.warn('hello error', error);\n                    }));\n\n                  case 16:\n                    _priceData = _context7.sent;\n                    _price = _priceData.price, percent_change_24h = _priceData.percent_change_24h, _percent_change_30d = _priceData.percent_change_30d, _percent_change_60d = _priceData.percent_change_60d, _percent_change_90d = _priceData.percent_change_90d, volume_24h = _priceData.volume_24h, market_cap = _priceData.market_cap, market_cap_dominance = _priceData.market_cap_dominance;\n                    price_30d = _price * (1 + _percent_change_30d * 0.01);\n                    price_60d = _price * (1 + _percent_change_60d * 0.01);\n                    price_90d = _price * (1 + _percent_change_90d * 0.01);\n                    tokenObject = {\n                      mint: 'So11111111111111111111111111111111111111112',\n                      amount: realSolBalance,\n                      name: 'Solana',\n                      symbol: 'SOL',\n                      logo: 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n                      extensions: {\n                        discord: 'https://discord.com/invite/pquxPsq',\n                        twitter: 'https://twitter.com/solana',\n                        website: 'https://solana.com/'\n                      },\n                      price: _price,\n                      price_30d: price_30d,\n                      price_60d: price_60d,\n                      price_90d: price_90d,\n                      pairs: solPairs.pairs,\n                      percent_change_24h: percent_change_24h,\n                      percent_change_30d: _percent_change_30d,\n                      percent_change_60d: _percent_change_60d,\n                      percent_change_90d: _percent_change_90d,\n                      volume_24h: volume_24h,\n                      market_cap: market_cap,\n                      description: 'Solana (SOL) is a cryptocurrency launched in 2020. Solana has a current supply of 506,348,680.4303728 with 299,902,995.15039116 in circulation. The last known price of Solana is 146.68289748 USD and is up 1.09 over the last 24 hours. It is currently trading on 161 active market(s) with $2,959,138,044.47 traded over the last 24 hours. More information can be found at https://solana.com.',\n                      market_cap_dominance: market_cap_dominance\n                    };\n                    ownedTokensArray.push(tokenObject);\n                    solToken = tokenObject;\n\n                  case 24:\n                    ownedTokensSymbols = [];\n\n                    _loop2 = function _loop2(_i) {\n                      var result, mint, amount, otherDetails, pairs, mintKey, associatedTokenAddress, associatedTokenAddressHash, _tokenObject;\n\n                      return _regeneratorRuntime.async(function _loop2$(_context6) {\n                        while (1) {\n                          switch (_context6.prev = _context6.next) {\n                            case 0:\n                              _context6.next = 2;\n                              return _regeneratorRuntime.awrap(connection.getParsedAccountInfo(ownedTokens.value[_i].pubkey));\n\n                            case 2:\n                              result = _context6.sent;\n                              mint = result.value.data.parsed.info.mint;\n                              amount = result.value.data.parsed.info.tokenAmount.uiAmount;\n                              _context6.next = 7;\n                              return _regeneratorRuntime.awrap(tokenMap.get(mint));\n\n                            case 7:\n                              otherDetails = _context6.sent;\n\n                              if (!otherDetails) {\n                                _context6.next = 19;\n                                break;\n                              }\n\n                              pairs = tokenPairs.find(function (pair) {\n                                return pair.symbol === otherDetails.symbol;\n                              });\n\n                              if (!pairs) {\n                                pairs = {\n                                  pairs: false\n                                };\n                              }\n\n                              mintKey = new PublicKey(mint);\n                              _context6.next = 14;\n                              return _regeneratorRuntime.awrap(findAssociatedTokenAddress(publicKey, mintKey));\n\n                            case 14:\n                              associatedTokenAddress = _context6.sent;\n                              associatedTokenAddressHash = associatedTokenAddress.toString('hex');\n                              _tokenObject = {\n                                mint: mint,\n                                amount: amount,\n                                name: otherDetails.name,\n                                symbol: otherDetails.symbol,\n                                logo: otherDetails.logoURI,\n                                extensions: otherDetails.extensions,\n                                pairs: pairs.pairs,\n                                associatedTokenAddressHash: associatedTokenAddressHash,\n                                associatedTokenAddress: associatedTokenAddress\n                              };\n                              ownedTokensArray.push(_tokenObject);\n                              ownedTokensSymbols.push(otherDetails.symbol);\n\n                            case 19:\n                            case \"end\":\n                              return _context6.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    };\n\n                    _i = 0;\n\n                  case 27:\n                    if (!(_i < ownedTokens.value.length)) {\n                      _context7.next = 33;\n                      break;\n                    }\n\n                    _context7.next = 30;\n                    return _regeneratorRuntime.awrap(_loop2(_i));\n\n                  case 30:\n                    _i++;\n                    _context7.next = 27;\n                    break;\n\n                  case 33:\n                    filteredOwnedSymbols = ownedTokensSymbols.filter(function (symbol) {\n                      var filter = /\\d+/;\n                      var filteredSymbol = symbol.match(filter);\n                      return filteredSymbol ? false : true;\n                    });\n                    ownedSymbolsList = filteredOwnedSymbols.join();\n                    console.log('ownedSymbolsList: ', ownedSymbolsList);\n                    iterate = true;\n                    counter = 0;\n                    aboutData = [];\n\n                  case 39:\n                    if (!(counter < 10 && iterate)) {\n                      _context7.next = 45;\n                      break;\n                    }\n\n                    console.log('get owned while route for about data' + ' ' + iterate);\n                    _context7.next = 43;\n                    return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=\" + ownedSymbolsList, {\n                      headers: {\n                        'X-CMC_PRO_API_KEY': apiKey,\n                        Accept: 'application/json',\n                        'Accept-Encoding': 'deflate, gzip'\n                      }\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (res) {\n                      console.log('res', res);\n\n                      if (res.status.error_code !== 0) {\n                        if (res.status.error_message.includes('symbol')) {\n                          var problemSymbol = res.status.error_message.split('\\\\')[0].replace('Invalid value for ', '').replace(/['\"]+/g, '').replace(' ', '').replace('symbol', '').replace(':', '').replace('\"', '').toUpperCase();\n                          var index = ownedSymbolsList.indexOf(problemSymbol);\n                          var length = problemSymbol.length + 1;\n                          var newArray = ownedSymbolsList.substr(0, index) + ownedSymbolsList.substr(index + length, ownedSymbolsList.length - 1);\n                          ownedSymbolsList = newArray;\n                          console.log('ownedSymbolsList Fixed: ', ownedSymbolsList);\n                        }\n\n                        counter++;\n                      } else {\n                        iterate = false;\n                        return aboutData.push.apply(aboutData, _toConsumableArray(Object.values(res.data)));\n                      }\n                    }).catch(function (err) {\n                      return console.log('errerere', err);\n                    }));\n\n                  case 43:\n                    _context7.next = 39;\n                    break;\n\n                  case 45:\n                    console.log('aboutData in get owned', aboutData);\n                    combinedOwnedTokensArray = [];\n\n                    _loop3 = function _loop3(_i2) {\n                      var tokenObject = ownedTokensArray[_i2];\n                      var cmcToken = aboutData.find(function (token) {\n                        return token.symbol === tokenObject.symbol;\n                      });\n\n                      var newTokenObject = _objectSpread({\n                        description: cmcToken != null && cmcToken.description ? cmcToken.description : 'No description available'\n                      }, tokenObject);\n\n                      combinedOwnedTokensArray.push(newTokenObject);\n                    };\n\n                    for (_i2 = 0; _i2 < ownedTokensArray.length; _i2++) {\n                      _loop3(_i2);\n                    }\n\n                    console.log('price get owned symbolslist', ownedSymbolsList);\n                    _context7.next = 52;\n                    return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=\" + ownedSymbolsList, {\n                      headers: {\n                        'X-CMC_PRO_API_KEY': apiKey,\n                        Accept: 'application/json',\n                        'Accept-Encoding': 'deflate, gzip'\n                      }\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (res) {\n                      if (res.status.error_code !== 0) {\n                        return {\n                          description: 'No description available for this project.',\n                          logo: 'https://streamwallet.s3.us-east-2.amazonaws.com/Random_Token.png',\n                          name: 'Stream',\n                          extensions: {}\n                        };\n                      } else {\n                        return Object.values(res.data);\n                      }\n                    }).catch(function (err) {\n                      return console.log('errerere', err);\n                    }));\n\n                  case 52:\n                    priceData = _context7.sent;\n                    console.log('price get owned priceData', priceData);\n                    finalCombinedOwnedTokensArray = [];\n\n                    _loop4 = function _loop4(_i3) {\n                      var tokenObject = combinedOwnedTokensArray[_i3];\n                      console.log('tokenObject get owned: ', tokenObject);\n                      var cmcToken = priceData.find(function (token) {\n                        return token.symbol === tokenObject.symbol;\n                      });\n                      console.log('cmcToken get owned: ', cmcToken);\n\n                      if (cmcToken && cmcToken.quote) {\n                        var _cmcToken$quote$USD = cmcToken.quote.USD,\n                            _price2 = _cmcToken$quote$USD.price,\n                            _percent_change_24h = _cmcToken$quote$USD.percent_change_24h,\n                            _percent_change_30d2 = _cmcToken$quote$USD.percent_change_30d,\n                            _percent_change_60d2 = _cmcToken$quote$USD.percent_change_60d,\n                            _percent_change_90d2 = _cmcToken$quote$USD.percent_change_90d,\n                            _volume_24h = _cmcToken$quote$USD.volume_24h,\n                            _market_cap = _cmcToken$quote$USD.market_cap,\n                            _market_cap_dominance = _cmcToken$quote$USD.market_cap_dominance;\n\n                        var newTokenObject = _objectSpread({\n                          price: _price2,\n                          percent_change_24h: _percent_change_24h,\n                          percent_change_30d: _percent_change_30d2,\n                          percent_change_60d: _percent_change_60d2,\n                          percent_change_90d: _percent_change_90d2,\n                          volume_24h: _volume_24h,\n                          market_cap: _market_cap,\n                          market_cap_dominance: _market_cap_dominance,\n                          price_30d: _price2 * (1 + _percent_change_30d2 * 0.01),\n                          price_60d: _price2 * (1 + _percent_change_60d2 * 0.01),\n                          price_90d: _price2 * (1 + _percent_change_90d2 * 0.01)\n                        }, tokenObject);\n\n                        finalCombinedOwnedTokensArray.push(newTokenObject);\n                      } else {\n                        var _newTokenObject = _objectSpread({\n                          price: 0,\n                          percent_change_24h: 0,\n                          percent_change_30d: 0,\n                          percent_change_60d: 0,\n                          percent_change_90d: 0,\n                          volume_24h: 0,\n                          market_cap: 0,\n                          market_cap_dominance: 0,\n                          price_30d: price * (1 + percent_change_30d * 0.01),\n                          price_60d: price * (1 + percent_change_60d * 0.01),\n                          price_90d: price * (1 + percent_change_90d * 0.01)\n                        }, tokenObject);\n\n                        finalCombinedOwnedTokensArray.push(_newTokenObject);\n                      }\n                    };\n\n                    for (_i3 = 1; _i3 < combinedOwnedTokensArray.length; _i3++) {\n                      _loop4(_i3);\n                    }\n\n                    if (solToken) {\n                      finalCombinedOwnedTokensArray.push(solToken);\n                    }\n\n                    console.log('finalCombinedOwnedTokensArray get owned', finalCombinedOwnedTokensArray);\n                    tokensBySubWallet.push(finalCombinedOwnedTokensArray);\n                    newAccountArray.push(newAccount);\n\n                  case 61:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          i = 0;\n\n        case 6:\n          if (!(i < subWallets.length)) {\n            _context8.next = 12;\n            break;\n          }\n\n          _context8.next = 9;\n          return _regeneratorRuntime.awrap(_loop(i));\n\n        case 9:\n          i++;\n          _context8.next = 6;\n          break;\n\n        case 12:\n          return _context8.abrupt(\"return\", {\n            tokensBySubWallet: tokensBySubWallet,\n            newAccount: newAccountArray\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getSolanaAccount(activeSubWallet, passcode) {\n  var mnemonic, bip39, seed, newAccount;\n  return _regeneratorRuntime.async(function getSolanaAccount$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(passcode));\n\n        case 2:\n          mnemonic = _context9.sent;\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(import('bip39'));\n\n        case 5:\n          bip39 = _context9.sent;\n          _context9.next = 8;\n          return _regeneratorRuntime.awrap(bip39.mnemonicToSeed(mnemonic));\n\n        case 8:\n          seed = _context9.sent;\n          newAccount = accountFromSeed(seed, activeSubWallet, DERIVATION_PATH.bip44Change, 0);\n          return _context9.abrupt(\"return\", newAccount);\n\n        case 11:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getOwnedNftsData(activeSubWalletAddress) {\n  var ownedNfts, nftArray, Pubkey, __v, _id, createdAt, listedNfts, unlistedNfts, i, nft, Creators, Description, Items, LicenseTitle, License_URL, Mint, Preview_URL, Properties, PubKey, Standard, Title, _v, _id2, adminReported, collectionKey, _createdAt, isNFTPRO, jsonURL, liked, listed, nft_colletion, nsfw, reported, tags, updatedAt, verfied, newObject;\n\n  return _regeneratorRuntime.async(function getOwnedNftsData$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.all.art/v1/wallet/\" + activeSubWalletAddress).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            return data;\n          }).catch(function (eerror) {\n            return console.log('error', eerror);\n          }));\n\n        case 2:\n          ownedNfts = _context10.sent;\n          nftArray = [];\n          Pubkey = ownedNfts.Pubkey, __v = ownedNfts.__v, _id = ownedNfts._id, createdAt = ownedNfts.createdAt, listedNfts = ownedNfts.listedNfts, unlistedNfts = ownedNfts.unlistedNfts;\n\n          for (i = 0; i < unlistedNfts.length; i++) {\n            nft = unlistedNfts[i];\n            Creators = nft.Creators, Description = nft.Description, Items = nft.Items, LicenseTitle = nft.LicenseTitle, License_URL = nft.License_URL, Mint = nft.Mint, Preview_URL = nft.Preview_URL, Properties = nft.Properties, PubKey = nft.PubKey, Standard = nft.Standard, Title = nft.Title, _v = nft.__v, _id2 = nft._id, adminReported = nft.adminReported, collectionKey = nft.collectionKey, _createdAt = nft.createdAt, isNFTPRO = nft.isNFTPRO, jsonURL = nft.jsonURL, liked = nft.liked, listed = nft.listed, nft_colletion = nft.nft_colletion, nsfw = nft.nsfw, reported = nft.reported, tags = nft.tags, updatedAt = nft.updatedAt, verfied = nft.verfied;\n            newObject = {\n              Creators: Creators,\n              Description: Description,\n              Items: Items,\n              LicenseTitle: LicenseTitle,\n              License_URL: License_URL,\n              Mint: Mint,\n              Preview_URL: Preview_URL,\n              Properties: Properties,\n              PubKey: PubKey,\n              Standard: Standard,\n              Title: Title,\n              __v: _v,\n              _id: _id2,\n              adminReported: adminReported,\n              collectionKey: collectionKey,\n              createdAt: _createdAt,\n              isNFTPRO: isNFTPRO,\n              jsonURL: jsonURL,\n              liked: liked,\n              listed: listed,\n              nft_colletion: nft_colletion,\n              nsfw: nsfw,\n              reported: reported,\n              tags: tags,\n              updatedAt: updatedAt,\n              verfied: verfied\n            };\n            nftArray.push(newObject);\n          }\n\n          return _context10.abrupt(\"return\", nftArray);\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getActiveSubWalletTokens(activeSubWallet, passcode, tokenMap, tokenPairs) {\n  var newAccount, solPairs, publicKey, ownedTokens, solBalance, realSolBalance, ownedTokensArray, solToken, _priceData2, _price3, percent_change_24h, _percent_change_30d3, _percent_change_60d3, _percent_change_90d3, volume_24h, market_cap, market_cap_dominance, price_30d, price_60d, price_90d, tokenObject, ownedTokensSymbols, _loop5, i, filteredOwnedSymbols, ownedSymbolsList, iterate, counter, aboutData, combinedOwnedTokensArray, _loop6, _i4, priceData, finalCombinedOwnedTokensArray, _loop7, _i5;\n\n  return _regeneratorRuntime.async(function getActiveSubWalletTokens$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(getSolanaAccount(activeSubWallet, passcode));\n\n        case 2:\n          newAccount = _context12.sent;\n          solPairs = tokenPairs.find(function (pair) {\n            return pair.symbol = 'SOL';\n          });\n          publicKey = newAccount.publicKey;\n          _context12.next = 7;\n          return _regeneratorRuntime.awrap(connection.getTokenAccountsByOwner(publicKey, {\n            programId: programId\n          }).catch(function (err) {\n            return console.log('error', err);\n          }));\n\n        case 7:\n          ownedTokens = _context12.sent;\n          _context12.next = 10;\n          return _regeneratorRuntime.awrap(connection.getBalance(publicKey));\n\n        case 10:\n          solBalance = _context12.sent;\n          realSolBalance = solBalance * 0.000000001;\n          console.log('realSolBalance: ', realSolBalance);\n          ownedTokensArray = [];\n\n          if (!(solBalance > 0)) {\n            _context12.next = 25;\n            break;\n          }\n\n          _context12.next = 17;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=SOL\", {\n            headers: {\n              'X-CMC_PRO_API_KEY': apiKey,\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            var dataArray = Object.values(data.data);\n            var percent_change_24h = dataArray[0].quote.USD.percent_change_24h;\n            var percent_change_30d = dataArray[0].quote.USD.percent_change_30d;\n            var percent_change_60d = dataArray[0].quote.USD.percent_change_60d;\n            var percent_change_90d = dataArray[0].quote.USD.percent_change_90d;\n            var _dataArray$0$quote$US2 = dataArray[0].quote.USD,\n                price = _dataArray$0$quote$US2.price,\n                volume_24h = _dataArray$0$quote$US2.volume_24h,\n                market_cap = _dataArray$0$quote$US2.market_cap,\n                market_cap_dominance = _dataArray$0$quote$US2.market_cap_dominance;\n            return {\n              price: price,\n              percent_change_24h: percent_change_24h,\n              percent_change_30d: percent_change_30d,\n              percent_change_60d: percent_change_60d,\n              percent_change_90d: percent_change_90d,\n              volume_24h: volume_24h,\n              market_cap: market_cap,\n              market_cap_dominance: market_cap_dominance\n            };\n          }).catch(function (error) {\n            return console.log('hello error', error);\n          }));\n\n        case 17:\n          _priceData2 = _context12.sent;\n          _price3 = _priceData2.price, percent_change_24h = _priceData2.percent_change_24h, _percent_change_30d3 = _priceData2.percent_change_30d, _percent_change_60d3 = _priceData2.percent_change_60d, _percent_change_90d3 = _priceData2.percent_change_90d, volume_24h = _priceData2.volume_24h, market_cap = _priceData2.market_cap, market_cap_dominance = _priceData2.market_cap_dominance;\n          price_30d = _price3 * (1 + _percent_change_30d3 * 0.01);\n          price_60d = _price3 * (1 + _percent_change_60d3 * 0.01);\n          price_90d = _price3 * (1 + _percent_change_90d3 * 0.01);\n          tokenObject = {\n            mint: 'So11111111111111111111111111111111111111112',\n            amount: realSolBalance,\n            name: 'Solana',\n            symbol: 'SOL',\n            logo: 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n            extensions: {\n              discord: 'https://discord.com/invite/pquxPsq',\n              twitter: 'https://twitter.com/solana',\n              website: 'https://solana.com/'\n            },\n            price: _price3,\n            price_30d: price_30d,\n            price_60d: price_60d,\n            price_90d: price_90d,\n            pairs: solPairs.pairs,\n            percent_change_24h: percent_change_24h,\n            percent_change_30d: _percent_change_30d3,\n            percent_change_60d: _percent_change_60d3,\n            percent_change_90d: _percent_change_90d3,\n            volume_24h: volume_24h,\n            market_cap: market_cap,\n            description: 'Solana (SOL) is a cryptocurrency launched in 2020. Solana has a current supply of 506,348,680.4303728 with 299,902,995.15039116 in circulation. The last known price of Solana is 146.68289748 USD and is up 1.09 over the last 24 hours. It is currently trading on 161 active market(s) with $2,959,138,044.47 traded over the last 24 hours. More information can be found at https://solana.com.',\n            market_cap_dominance: market_cap_dominance\n          };\n          ownedTokensArray.push(tokenObject);\n          solToken = tokenObject;\n\n        case 25:\n          ownedTokensSymbols = [];\n\n          _loop5 = function _loop5(i) {\n            var result, mint, amount, otherDetails, pairs, mintKey, associatedTokenAddress, associatedTokenAddressHash, _tokenObject2;\n\n            return _regeneratorRuntime.async(function _loop5$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return _regeneratorRuntime.awrap(connection.getParsedAccountInfo(ownedTokens.value[i].pubkey));\n\n                  case 2:\n                    result = _context11.sent;\n                    mint = result.value.data.parsed.info.mint;\n                    amount = result.value.data.parsed.info.tokenAmount.uiAmount;\n                    _context11.next = 7;\n                    return _regeneratorRuntime.awrap(tokenMap.get(mint));\n\n                  case 7:\n                    otherDetails = _context11.sent;\n\n                    if (!otherDetails) {\n                      _context11.next = 19;\n                      break;\n                    }\n\n                    pairs = tokenPairs.find(function (pair) {\n                      return pair.symbol === otherDetails.symbol;\n                    });\n\n                    if (!pairs) {\n                      pairs = {\n                        pairs: false\n                      };\n                    }\n\n                    mintKey = new PublicKey(mint);\n                    _context11.next = 14;\n                    return _regeneratorRuntime.awrap(findAssociatedTokenAddress(publicKey, mintKey).catch(function (err) {\n                      return console.log('error', err);\n                    }));\n\n                  case 14:\n                    associatedTokenAddress = _context11.sent;\n                    associatedTokenAddressHash = associatedTokenAddress.toString('hex');\n                    _tokenObject2 = {\n                      mint: mint,\n                      amount: amount,\n                      name: otherDetails.name,\n                      symbol: otherDetails.symbol,\n                      logo: otherDetails.logoURI,\n                      extensions: otherDetails.extensions,\n                      pairs: pairs.pairs,\n                      associatedTokenAddressHash: associatedTokenAddressHash,\n                      associatedTokenAddress: associatedTokenAddress\n                    };\n                    ownedTokensArray.push(_tokenObject2);\n                    ownedTokensSymbols.push(otherDetails.symbol.toUpperCase());\n\n                  case 19:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          i = 0;\n\n        case 28:\n          if (!(i < ownedTokens.value.length)) {\n            _context12.next = 34;\n            break;\n          }\n\n          _context12.next = 31;\n          return _regeneratorRuntime.awrap(_loop5(i));\n\n        case 31:\n          i++;\n          _context12.next = 28;\n          break;\n\n        case 34:\n          filteredOwnedSymbols = ownedTokensSymbols.filter(function (symbol) {\n            var filter = /\\d+/;\n            var filteredSymbol = symbol.match(filter);\n            return filteredSymbol ? false : true;\n          });\n          ownedSymbolsList = filteredOwnedSymbols.join();\n          iterate = true;\n          counter = 0;\n          aboutData = [];\n\n        case 39:\n          if (!(counter < 10 && iterate)) {\n            _context12.next = 44;\n            break;\n          }\n\n          _context12.next = 42;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=\" + ownedSymbolsList, {\n            headers: {\n              'X-CMC_PRO_API_KEY': apiKey,\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (res) {\n            if (res.status.error_code !== 0) {\n              if (res.status.error_message.includes('symbol')) {\n                var problemSymbol = res.status.error_message.split('\\\\')[0].replace('Invalid value for ', '').replace(/['\"]+/g, '').replace(' ', '').replace('symbol', '').replace(':', '').replace('\"', '').toUpperCase();\n                var index = ownedSymbolsList.indexOf(problemSymbol);\n                var length = problemSymbol.length + 1;\n                var newArray = ownedSymbolsList.substr(0, index) + ownedSymbolsList.substr(index + length, ownedSymbolsList.length - 1);\n                ownedSymbolsList = newArray;\n                console.log('ownedSymbolsList Fixed: ', ownedSymbolsList);\n              }\n\n              counter++;\n            } else {\n              iterate = false;\n              return aboutData.push.apply(aboutData, _toConsumableArray(Object.values(res.data)));\n            }\n          }).catch(function (err) {\n            return console.log('errerere', err);\n          }));\n\n        case 42:\n          _context12.next = 39;\n          break;\n\n        case 44:\n          combinedOwnedTokensArray = [];\n\n          _loop6 = function _loop6(_i4) {\n            var tokenObject = ownedTokensArray[_i4];\n            var cmcToken = aboutData.find(function (token) {\n              return token.symbol === tokenObject.symbol;\n            });\n\n            var newTokenObject = _objectSpread({\n              description: cmcToken != null && cmcToken.description ? cmcToken.description : 'No description available'\n            }, tokenObject);\n\n            combinedOwnedTokensArray.push(newTokenObject);\n          };\n\n          for (_i4 = 0; _i4 < ownedTokensArray.length; _i4++) {\n            _loop6(_i4);\n          }\n\n          _context12.next = 49;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=\" + ownedSymbolsList, {\n            headers: {\n              'X-CMC_PRO_API_KEY': apiKey,\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (res) {\n            if (res.status.error_code !== 0) {\n              return {\n                description: 'No description available for this project.',\n                logo: 'https://streamwallet.s3.us-east-2.amazonaws.com/Random_Token.png',\n                name: 'unknown',\n                extensions: {}\n              };\n            } else {\n              return Object.values(res.data);\n            }\n          }).catch(function (err) {\n            return console.log('errerere', err);\n          }));\n\n        case 49:\n          priceData = _context12.sent;\n          finalCombinedOwnedTokensArray = [];\n\n          _loop7 = function _loop7(_i5) {\n            var tokenObject = combinedOwnedTokensArray[_i5];\n            var cmcToken = priceData.find(function (token) {\n              return token.symbol === tokenObject.symbol;\n            });\n\n            if (cmcToken && cmcToken.quote) {\n              var _cmcToken$quote$USD2 = cmcToken.quote.USD,\n                  _price4 = _cmcToken$quote$USD2.price,\n                  _percent_change_24h2 = _cmcToken$quote$USD2.percent_change_24h,\n                  _percent_change_30d4 = _cmcToken$quote$USD2.percent_change_30d,\n                  _percent_change_60d4 = _cmcToken$quote$USD2.percent_change_60d,\n                  _percent_change_90d4 = _cmcToken$quote$USD2.percent_change_90d,\n                  _volume_24h2 = _cmcToken$quote$USD2.volume_24h,\n                  _market_cap2 = _cmcToken$quote$USD2.market_cap,\n                  _market_cap_dominance2 = _cmcToken$quote$USD2.market_cap_dominance;\n\n              var newTokenObject = _objectSpread({\n                price: _price4,\n                percent_change_24h: _percent_change_24h2,\n                percent_change_30d: _percent_change_30d4,\n                percent_change_60d: _percent_change_60d4,\n                percent_change_90d: _percent_change_90d4,\n                volume_24h: _volume_24h2,\n                market_cap: _market_cap2,\n                market_cap_dominance: _market_cap_dominance2,\n                price_30d: _price4 * (1 + _percent_change_30d4 * 0.01),\n                price_60d: _price4 * (1 + _percent_change_60d4 * 0.01),\n                price_90d: _price4 * (1 + _percent_change_90d4 * 0.01)\n              }, tokenObject);\n\n              finalCombinedOwnedTokensArray.push(newTokenObject);\n            } else {\n              var _newTokenObject2 = _objectSpread({\n                price: 0,\n                percent_change_24h: 0,\n                percent_change_30d: 0,\n                percent_change_60d: 0,\n                percent_change_90d: 0,\n                volume_24h: 0,\n                market_cap: 0,\n                market_cap_dominance: 0,\n                price_30d: 0,\n                price_60d: 0,\n                price_90d: 0\n              }, tokenObject);\n\n              finalCombinedOwnedTokensArray.push(_newTokenObject2);\n            }\n          };\n\n          for (_i5 = 1; _i5 < combinedOwnedTokensArray.length; _i5++) {\n            _loop7(_i5);\n          }\n\n          if (solToken) {\n            finalCombinedOwnedTokensArray.push(solToken);\n          }\n\n          return _context12.abrupt(\"return\", finalCombinedOwnedTokensArray);\n\n        case 55:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getAllTokensData(tokenMapSymbols) {\n  var tokenPairs, symbolsList, combinedSymbolList, coinMarketCapTokens1, coinMarketCapTokens2, coinMarketCapTokens3, combinedCmcTokensArray, combinedArray, i, cmToken, name, logo, symbol, description, _cmToken$urls, twitter, discord, website, mint, mintObject, newObject, coinMarketCapPrices1, coinMarketCapPrices2, coinMarketCapPrices3, combinedPricesArray, combinedArrayWithPrices, _loop8, _i6;\n\n  return _regeneratorRuntime.async(function getAllTokensData$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(getTokenPairs());\n\n        case 2:\n          tokenPairs = _context13.sent;\n          _context13.next = 5;\n          return _regeneratorRuntime.awrap(getCleanTokenList());\n\n        case 5:\n          symbolsList = _context13.sent;\n          combinedSymbolList = symbolsList.join();\n          _context13.next = 9;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=\" + symbolList1, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log('data: ', data);\n            return Object.values(data.data);\n          }).catch(function (err) {\n            return console.log('error', err);\n          }));\n\n        case 9:\n          coinMarketCapTokens1 = _context13.sent;\n          _context13.next = 12;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=\" + symbolList2, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log('data: ', data);\n            return Object.values(data.data);\n          }).catch(function (err) {\n            return console.log('error', err);\n          }));\n\n        case 12:\n          coinMarketCapTokens2 = _context13.sent;\n          _context13.next = 15;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=\" + symbolList3, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log('data: ', data);\n            return Object.values(data.data);\n          }).catch(function (err) {\n            return console.log('error', err);\n          }));\n\n        case 15:\n          coinMarketCapTokens3 = _context13.sent;\n          combinedCmcTokensArray = [].concat(_toConsumableArray(coinMarketCapTokens1), _toConsumableArray(coinMarketCapTokens2), _toConsumableArray(coinMarketCapTokens3));\n          console.log('combinedCmcTokensArray: ', combinedCmcTokensArray);\n          combinedArray = [];\n\n          for (i = 0; i < combinedCmcTokensArray.length; i++) {\n            cmToken = combinedCmcTokensArray[i];\n            name = cmToken.name, logo = cmToken.logo, symbol = cmToken.symbol, description = cmToken.description, _cmToken$urls = cmToken.urls, twitter = _cmToken$urls.twitter, discord = _cmToken$urls.discord, website = _cmToken$urls.website;\n            mint = void 0;\n\n            if (symbol === 'USDC') {\n              mint = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v';\n            } else {\n              mintObject = tokenMapSymbols.get(symbol);\n              mint = mintObject == null ? void 0 : mintObject.address;\n            }\n\n            newObject = {\n              name: name,\n              mint: mint,\n              logo: logo,\n              symbol: symbol,\n              description: description,\n              extensions: {\n                twitter: twitter,\n                discord: discord,\n                website: website\n              },\n              pairs: []\n            };\n            combinedArray.push(newObject);\n          }\n\n          _context13.next = 22;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=\" + symbolList1, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            return Object.values(data.data);\n          }));\n\n        case 22:\n          coinMarketCapPrices1 = _context13.sent;\n          _context13.next = 25;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=\" + symbolList2, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            return Object.values(data.data);\n          }));\n\n        case 25:\n          coinMarketCapPrices2 = _context13.sent;\n          _context13.next = 28;\n          return _regeneratorRuntime.awrap(fetch(\"https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=\" + symbolList3, {\n            headers: {\n              'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n              Accept: 'application/json',\n              'Accept-Encoding': 'deflate, gzip'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            return Object.values(data.data);\n          }));\n\n        case 28:\n          coinMarketCapPrices3 = _context13.sent;\n          combinedPricesArray = [].concat(_toConsumableArray(coinMarketCapPrices1), _toConsumableArray(coinMarketCapPrices2), _toConsumableArray(coinMarketCapPrices3));\n          combinedArrayWithPrices = [];\n\n          _loop8 = function _loop8(_i6) {\n            var element = combinedArray[_i6];\n            var prices = combinedPricesArray.find(function (priceSet) {\n              return priceSet.symbol === element.symbol;\n            });\n            var _prices$quote$USD = prices.quote.USD,\n                percent_change_24h = _prices$quote$USD.percent_change_24h,\n                market_cap = _prices$quote$USD.market_cap,\n                market_cap_dominance = _prices$quote$USD.market_cap_dominance,\n                percent_change_30d = _prices$quote$USD.percent_change_30d,\n                percent_change_60d = _prices$quote$USD.percent_change_60d,\n                percent_change_90d = _prices$quote$USD.percent_change_90d,\n                price = _prices$quote$USD.price,\n                volume_24h = _prices$quote$USD.volume_24h;\n            var price_30d = price * (1 + percent_change_30d * 0.01);\n            var price_60d = price * (1 + percent_change_60d * 0.01);\n            var price_90d = price * (1 + percent_change_90d * 0.01);\n\n            var newObject = _objectSpread(_objectSpread({}, element), {}, {\n              percent_change_24h: percent_change_24h,\n              market_cap: market_cap,\n              market_cap_dominance: market_cap_dominance,\n              percent_change_30d: percent_change_30d,\n              percent_change_60d: percent_change_60d,\n              percent_change_90d: percent_change_90d,\n              price_30d: price_30d,\n              price_60d: price_60d,\n              price_90d: price_90d,\n              price: price,\n              volume_24h: volume_24h\n            });\n\n            combinedArrayWithPrices.push(newObject);\n          };\n\n          for (_i6 = 0; _i6 < combinedArray.length; _i6++) {\n            _loop8(_i6);\n          }\n\n          return _context13.abrupt(\"return\", combinedArrayWithPrices);\n\n        case 34:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getTokenPairs() {\n  return fetch('https://serum-api.bonfida.com/pairs').then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    var removedPools = res.data.filter(function (value) {\n      return !['-', 'LQID', 'ODOP', 'xCOPE', 'CCAI', 'PLEB', 'BVOL', 'POOL', 'BTC/SRM', 'FTT/SRM', 'YFI/SRM', 'SUSHI/SRM', 'ETH/SRM', 'RAY/SRM', 'RAY/ETH', 'MSRM'].some(function (el) {\n        return value.includes(el);\n      });\n    });\n    var symbolsArray = [];\n\n    for (var i = 0; i < removedPools.length; i++) {\n      var el = removedPools[i];\n      var splitArray = el.split('/');\n      symbolsArray.push.apply(symbolsArray, _toConsumableArray(splitArray));\n    }\n\n    var dedupedSymbols = _toConsumableArray(new Set(symbolsArray));\n\n    var cleanArray = [];\n\n    for (var _i7 = 0; _i7 < dedupedSymbols.length; _i7++) {\n      var _el = dedupedSymbols[_i7];\n\n      if (_el.length < 15) {\n        cleanArray.push(_el);\n      }\n    }\n\n    var finishedArray = [];\n\n    var _loop9 = function _loop9(_i8) {\n      var el = cleanArray[_i8];\n      var pairs = removedPools.filter(function (str) {\n        return str.indexOf(el) >= 0;\n      });\n      var pairsArray = [];\n\n      for (var _i9 = 0; _i9 < pairs.length; _i9++) {\n        var el2 = pairs[_i9];\n        var removeSymbol = el2.replace(el, '');\n        var removeSlash = removeSymbol.replace('/', '');\n        var side = void 0;\n        removeSlash === el2.slice(0, removeSlash.length) ? side = 'buy' : side = 'sell';\n        var newPair = {\n          pair: el2,\n          symbol: removeSlash,\n          side: side\n        };\n        pairsArray.push(newPair);\n      }\n\n      var finishedObject = {\n        symbol: el,\n        pairs: pairsArray\n      };\n      finishedArray.push(finishedObject);\n    };\n\n    for (var _i8 = 0; _i8 < cleanArray.length; _i8++) {\n      _loop9(_i8);\n    }\n\n    return finishedArray;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nfunction getCleanTokenList() {\n  return fetch('https://serum-api.bonfida.com/pairs').then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    var removedDashes = res.data.filter(function (str) {\n      return str.indexOf('-') === -1;\n    });\n    var removedToken = removedDashes.filter(function (str) {\n      return str.indexOf('LQID') === -1;\n    });\n    var removedToken2 = removedToken.filter(function (str) {\n      return str.indexOf('ODOP') === -1;\n    });\n    var removedToken3 = removedToken2.filter(function (str) {\n      return str.indexOf('xCOPE') === -1;\n    });\n    var removedToken4 = removedToken3.filter(function (str) {\n      return str.indexOf('CCAI') === -1;\n    });\n    var removedToken5 = removedToken4.filter(function (str) {\n      return str.indexOf('PLEB') === -1;\n    });\n    var removedToken6 = removedToken5.filter(function (str) {\n      return str.indexOf('FIDID') === -1;\n    });\n    var removedPools = removedToken6.filter(function (str) {\n      return str.indexOf('POOL') === -1;\n    });\n    var symbolsArray = [];\n\n    for (var i = 0; i < removedPools.length; i++) {\n      var el = removedPools[i];\n      var splitArray = el.split('/');\n      symbolsArray.push.apply(symbolsArray, _toConsumableArray(splitArray));\n    }\n\n    var dedupedSymbols = _toConsumableArray(new Set(symbolsArray));\n\n    var cleanArray = [];\n\n    for (var _i10 = 0; _i10 < dedupedSymbols.length; _i10++) {\n      var _el2 = dedupedSymbols[_i10];\n\n      if (_el2.length < 15) {\n        cleanArray.push(_el2);\n      }\n    }\n\n    return cleanArray;\n  }).catch(function (err) {\n    return console.warn(err);\n  });\n}\n\nfunction getTokenPair(symbol) {\n  return fetch('https://serum-api.bonfida.com/pairs').then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    var removedDashes = res.data.filter(function (str) {\n      return str.indexOf('-') === -1;\n    });\n    var removedToken = removedDashes.filter(function (str) {\n      return str.indexOf('LIQD') === -1;\n    });\n    var removedPools = removedToken.filter(function (str) {\n      return str.indexOf('POOL') === -1;\n    });\n    var finishedArray = [];\n    var pairs = removedPools.filter(function (str) {\n      return str.indexOf(symbol) >= 0;\n    });\n    var pairsArray = [];\n\n    for (var i = 0; i < pairs.length; i++) {\n      var el2 = pairs[i];\n      var removeSymbol = el2.replace(symbol, '');\n      var removeSlash = removeSymbol.replace('/', '');\n      var side = void 0;\n      removeSlash === el2.slice(0, removeSlash.length) ? side = 'buy' : side = 'sell';\n      var newPair = {\n        pair: el2,\n        symbol: removeSlash,\n        side: side\n      };\n      pairsArray.push(newPair);\n    }\n\n    return pairsArray;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nexport { generateMnemonic, mnemonicToSeed, accountFromSeed, maskedAddress, deriveSeed, deriveSeed2, findAssociatedTokenAddress, getAccountFromSeed, DERIVATION_PATH, normalizeNumber, shortenPublicKey, copyToClipboard, getSubWalletsData, getOwnedTokensData, getAllTokensData, getActiveSubWalletTokens, getOwnedNftsData };","map":{"version":3,"names":["solanaWeb3","Random","ethers","Buffer","ed25519","nacl","Account","Connection","PublicKey","TOKEN_PROGRAM_ID","symbolList1","symbolList2","symbolList3","Clipboard","SecureStore","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","url","connection","programId","apiKey","findAssociatedTokenAddress","walletAddress","tokenMintAddress","findProgramAddress","toBuffer","shortenPublicKey","publicKey","keepStart","keepEnd","sliceEnd","slice","normalizeNumber","number","parseFloat","toFixed","toString","replace","DERIVATION_PATH","deprecated","undefined","bip44","bip44Change","bip44Root","getAccountFromSeed","seed","walletIndex","dPath","accountIndex","derivedSeed","deriveSeed","sign","keyPair","fromSeed","secretKey","derivationPath","path44Change","derivePath","from","key","deriveSeed2","copyToClipboard","copied","setString","generateMnemonic","getRandomBytesAsync","randomBytes","mnemonic","utils","entropyToMnemonic","mnemonicToSeed","bip39","accountFromSeed","acc","Keypair","maskedAddress","address","length","getSubWalletsData","passcode","subWallets1","iterate","i","getSolanaAccount","newAccount","subWalletName","getTokenAccountsByOwner","catch","err","console","warn","ownedTokens","getParsedAccountInfo","result2","value","push","getOwnedTokensData","subWallets","tokenMap","tokenPairs","log","solPairs","find","pair","symbol","tokensBySubWallet","newAccountArray","getBalance","solBalance","realSolBalance","ownedTokensArray","solToken","fetch","headers","Accept","then","response","json","data","dataArray","Object","values","percent_change_24h","quote","USD","percent_change_30d","percent_change_60d","percent_change_90d","price","volume_24h","market_cap","market_cap_dominance","error","priceData","price_30d","price_60d","price_90d","tokenObject","mint","amount","name","logo","extensions","discord","twitter","website","pairs","description","ownedTokensSymbols","pubkey","result","parsed","info","tokenAmount","uiAmount","get","otherDetails","mintKey","associatedTokenAddress","associatedTokenAddressHash","logoURI","filteredOwnedSymbols","filter","filteredSymbol","match","ownedSymbolsList","join","counter","aboutData","res","status","error_code","error_message","includes","problemSymbol","split","toUpperCase","index","indexOf","newArray","substr","combinedOwnedTokensArray","cmcToken","token","newTokenObject","finalCombinedOwnedTokensArray","activeSubWallet","getItemAsync","getOwnedNftsData","activeSubWalletAddress","eerror","ownedNfts","nftArray","Pubkey","__v","_id","createdAt","listedNfts","unlistedNfts","nft","Creators","Description","Items","LicenseTitle","License_URL","Mint","Preview_URL","Properties","PubKey","Standard","Title","adminReported","collectionKey","isNFTPRO","jsonURL","liked","listed","nft_colletion","nsfw","reported","tags","updatedAt","verfied","newObject","getActiveSubWalletTokens","getAllTokensData","tokenMapSymbols","getTokenPairs","getCleanTokenList","symbolsList","combinedSymbolList","coinMarketCapTokens1","coinMarketCapTokens2","coinMarketCapTokens3","combinedCmcTokensArray","combinedArray","cmToken","urls","mintObject","coinMarketCapPrices1","coinMarketCapPrices2","coinMarketCapPrices3","combinedPricesArray","combinedArrayWithPrices","element","prices","priceSet","removedPools","some","el","symbolsArray","splitArray","dedupedSymbols","Set","cleanArray","finishedArray","str","pairsArray","el2","removeSymbol","removeSlash","side","newPair","finishedObject","removedDashes","removedToken","removedToken2","removedToken3","removedToken4","removedToken5","removedToken6","getTokenPair"],"sources":["/workspace/stream-wallet/utils/index.ts"],"sourcesContent":["/* eslint-disable no-case-declarations */\nimport * as solanaWeb3 from '@solana/web3.js';\nimport * as Random from 'expo-random';\nimport { ethers } from 'ethers';\nimport { Buffer } from 'buffer';\nimport * as ed25519 from 'ed25519-hd-key';\nimport nacl from 'tweetnacl';\nimport { Account, Connection, PublicKey, Keypair } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { derivePath } from 'ed25519-hd-key';\nimport * as bip32 from 'bip32';\nimport { Alert } from 'react-native';\nimport {\n\tfullSymbolsList,\n\tsymbolList1,\n\tsymbolList2,\n\tsymbolList3,\n} from '../tokensList';\nimport * as Clipboard from 'expo-clipboard'; // <-- might have to change to '@react-native-community/clipboard' when not using expo but '@react-native-community/clipboard' will not work on Android with expo.\nimport * as SecureStore from 'expo-secure-store';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\nimport SnackBar from 'react-native-snackbar';\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID: PublicKey = new PublicKey(\n\t'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n// const url =\n// \t'https://solana--mainnet.datahub.figment.io/apikey/5d2d7ea54a347197ccc56fd24ecc2ac5';\nconst url =\n\t'https://proud-small-pond.solana-mainnet.quiknode.pro/b9308b243fd5cda46faf633bfc52df5a1b2d7abf/';\nconst connection = new Connection(url);\nconst programId = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n// const apiKey = 'f7353e06-2e44-4912-9fff-05929a5681a7';\nconst apiKey = 'fb778058-7d11-4c17-8f03-5212f68ed1c7';\n\nasync function findAssociatedTokenAddress(\n\twalletAddress: PublicKey,\n\ttokenMintAddress: PublicKey,\n): Promise<PublicKey> {\n\t//console.log('here');\n\treturn (\n\t\tawait PublicKey.findProgramAddress(\n\t\t\t[\n\t\t\t\twalletAddress.toBuffer(),\n\t\t\t\tTOKEN_PROGRAM_ID.toBuffer(),\n\t\t\t\ttokenMintAddress.toBuffer(),\n\t\t\t],\n\t\t\tSPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n\t\t)\n\t)[0];\n}\n\nfunction shortenPublicKey(\n\tpublicKey: string,\n\tkeepStart: number,\n\tkeepEnd: number,\n\tsliceEnd: number,\n) {\n\treturn (\n\t\tpublicKey.slice(keepStart, keepEnd) + '...' + publicKey.slice(sliceEnd)\n\t);\n}\n\nfunction normalizeNumber(number: number) {\n\treturn parseFloat(number)\n\t\t?.toFixed(2)\n\t\t.toString()\n\t\t.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst DERIVATION_PATH = {\n\tdeprecated: undefined,\n\tbip44: 'bip44',\n\tbip44Change: 'bip44Change',\n\tbip44Root: 'bip44Root', // Ledger only.\n};\n\nfunction getAccountFromSeed(\n\tseed,\n\twalletIndex,\n\tdPath = undefined,\n\taccountIndex = 0,\n) {\n\tconst derivedSeed = deriveSeed(seed, walletIndex, dPath, accountIndex);\n\treturn new Account(nacl.sign.keyPair.fromSeed(derivedSeed).secretKey);\n}\n\nconst deriveSeed = (\n\tseed: string,\n\twalletIndex: number,\n\tderivationPath: string,\n\taccountIndex: number,\n): Buffer | undefined => {\n\tconst path44Change = `m/44'/501'/${walletIndex}'/0'`;\n\treturn ed25519.derivePath(path44Change, Buffer.from(seed, 'hex')).key;\n};\n\nconst deriveSeed2 = (\n\tseed: string,\n\twalletIndex: number,\n\tderivationPath: string,\n\taccountIndex: number,\n): Buffer | undefined => {\n\tconst path44Change = `m/44'/501'/${walletIndex}'/0'`;\n\treturn ed25519.derivePath(path44Change, Buffer.from(seed, 'hex')).key;\n};\n\n// export const DERIVATION_PATH = {\n// \tbip44Change: 'bip44Change',\n// };\n\nconst copyToClipboard = async (copied: string) => {\n\tClipboard.setString(copied);\n\t// Alert.alert('Address Copied!', copied, [\n\t// \t{ text: 'Okay', style: 'destructive' },\n\t// ]);\n};\n\nconst generateMnemonic = async () => {\n\tconst randomBytes = await Random.getRandomBytesAsync(32);\n\tconst mnemonic = ethers.utils.entropyToMnemonic(randomBytes);\n\treturn mnemonic;\n};\n\nconst mnemonicToSeed = async (mnemonic: string) => {\n\tconst bip39 = await import('bip39');\n\tconst seed = await bip39.mnemonicToSeed(mnemonic);\n\treturn Buffer.from(seed).toString('hex');\n};\n\nconst accountFromSeed = (\n\tseed: string,\n\twalletIndex: number,\n\tderivationPath: string,\n\taccountIndex: 0,\n) => {\n\tconst derivedSeed = deriveSeed(\n\t\tseed,\n\t\twalletIndex,\n\t\tderivationPath,\n\t\taccountIndex,\n\t);\n\tconst keyPair = nacl.sign.keyPair.fromSeed(derivedSeed);\n\n\tconst acc = new solanaWeb3.Keypair(keyPair);\n\treturn acc;\n};\n\nconst maskedAddress = (address: string) => {\n\tif (!address) return;\n\treturn `${address.slice(0, 8)}...${address.slice(address.length - 8)}`;\n};\n\nasync function getSubWalletsData(passcode: string) {\n\tconst subWallets1 = [];\n\tlet iterate = true;\n\tlet i = 0;\n\n\twhile (iterate === true) {\n\t\tconst newAccount = await getSolanaAccount(i, passcode);\n\n\t\tconst { publicKey } = newAccount;\n\t\tconst subWalletName = 'SubWallet ' + (1 + i); //this needs to get the name from user input or a default name\n\t\tconst programId = new PublicKey(\n\t\t\t'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n\t\t);\n\t\tconst ownedTokens = await connection\n\t\t\t.getTokenAccountsByOwner(publicKey, { programId })\n\t\t\t.catch((err) => console.warn('errorr', err));\n\t\tconst result2 = await connection.getParsedAccountInfo(publicKey);\n\n\t\tif (!result2.value) {\n\t\t\titerate = false;\n\t\t} else {\n\t\t\tsubWallets1.push({\n\t\t\t\tpublicKey: publicKey.toString('hex'),\n\t\t\t\tsubWalletName: subWalletName,\n\t\t\t});\n\t\t}\n\t\ti++;\n\t}\n\treturn subWallets1;\n}\n\n//gets owned tokens, adds sol to it, adds detail to all the coins, then sets to state\nasync function getOwnedTokensData(\n\tsubWallets: any,\n\tpasscode: string,\n\ttokenMap: any,\n\ttokenPairs: any,\n) {\n\tconsole.log('hello get owned');\n\t// const tokenPairs = await getTokenPairs();\n\tconst solPairs = tokenPairs.find((pair: object) => (pair.symbol = 'SOL'));\n\n\tconst tokensBySubWallet = [];\n\tconst newAccountArray = [];\n\tfor (let i = 0; i < subWallets.length; i++) {\n\t\tconst newAccount = await getSolanaAccount(i, passcode);\n\n\t\tconst { publicKey } = newAccount;\n\n\t\tconst ownedTokens = await connection\n\t\t\t.getTokenAccountsByOwner(publicKey, { programId })\n\t\t\t.catch((err) => console.log('errorr', err));\n\n\t\tconst solBalance = await connection.getBalance(publicKey);\n\t\tconst realSolBalance = solBalance * 0.000000001;\n\n\t\tconst ownedTokensArray = [];\n\t\tlet solToken;\n\t\tif (solBalance > 0) {\n\t\t\tconst priceData = await fetch(\n\t\t\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=SOL`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst dataArray = Object.values(data.data);\n\t\t\t\t\tconst percent_change_24h =\n\t\t\t\t\t\tdataArray[0].quote.USD.percent_change_24h;\n\t\t\t\t\tconst percent_change_30d =\n\t\t\t\t\t\tdataArray[0].quote.USD.percent_change_30d;\n\t\t\t\t\tconst percent_change_60d =\n\t\t\t\t\t\tdataArray[0].quote.USD.percent_change_60d;\n\t\t\t\t\tconst percent_change_90d =\n\t\t\t\t\t\tdataArray[0].quote.USD.percent_change_90d;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tprice,\n\t\t\t\t\t\tvolume_24h,\n\t\t\t\t\t\tmarket_cap,\n\t\t\t\t\t\tmarket_cap_dominance,\n\t\t\t\t\t} = dataArray[0].quote.USD;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprice,\n\t\t\t\t\t\tpercent_change_24h,\n\t\t\t\t\t\tpercent_change_30d,\n\t\t\t\t\t\tpercent_change_60d,\n\t\t\t\t\t\tpercent_change_90d,\n\t\t\t\t\t\tvolume_24h,\n\t\t\t\t\t\tmarket_cap,\n\t\t\t\t\t\tmarket_cap_dominance,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.warn('hello error', error));\n\n\t\t\tconst {\n\t\t\t\tprice,\n\t\t\t\tpercent_change_24h,\n\t\t\t\tpercent_change_30d,\n\t\t\t\tpercent_change_60d,\n\t\t\t\tpercent_change_90d,\n\t\t\t\tvolume_24h,\n\t\t\t\tmarket_cap,\n\t\t\t\tmarket_cap_dominance,\n\t\t\t} = priceData;\n\t\t\tconst price_30d = price * (1 + percent_change_30d * 0.01);\n\t\t\tconst price_60d = price * (1 + percent_change_60d * 0.01);\n\t\t\tconst price_90d = price * (1 + percent_change_90d * 0.01);\n\t\t\tconst tokenObject = {\n\t\t\t\tmint: 'So11111111111111111111111111111111111111112',\n\t\t\t\tamount: realSolBalance,\n\t\t\t\tname: 'Solana',\n\t\t\t\tsymbol: 'SOL',\n\t\t\t\tlogo: 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n\t\t\t\textensions: {\n\t\t\t\t\tdiscord: 'https://discord.com/invite/pquxPsq',\n\t\t\t\t\ttwitter: 'https://twitter.com/solana',\n\t\t\t\t\twebsite: 'https://solana.com/',\n\t\t\t\t},\n\t\t\t\tprice,\n\t\t\t\tprice_30d,\n\t\t\t\tprice_60d,\n\t\t\t\tprice_90d,\n\t\t\t\tpairs: solPairs.pairs,\n\t\t\t\tpercent_change_24h,\n\t\t\t\tpercent_change_30d,\n\t\t\t\tpercent_change_60d,\n\t\t\t\tpercent_change_90d,\n\t\t\t\tvolume_24h,\n\t\t\t\tmarket_cap,\n\t\t\t\tdescription:\n\t\t\t\t\t'Solana (SOL) is a cryptocurrency launched in 2020. Solana has a current supply of 506,348,680.4303728 with 299,902,995.15039116 in circulation. The last known price of Solana is 146.68289748 USD and is up 1.09 over the last 24 hours. It is currently trading on 161 active market(s) with $2,959,138,044.47 traded over the last 24 hours. More information can be found at https://solana.com.',\n\t\t\t\tmarket_cap_dominance,\n\t\t\t};\n\t\t\townedTokensArray.push(tokenObject);\n\t\t\tsolToken = tokenObject;\n\t\t}\n\t\tconst ownedTokensSymbols = [];\n\t\tfor (let i = 0; i < ownedTokens.value.length; i++) {\n\t\t\tconst result = await connection.getParsedAccountInfo(\n\t\t\t\townedTokens.value[i].pubkey,\n\t\t\t);\n\n\t\t\tconst mint = result.value.data.parsed.info.mint;\n\t\t\tconst amount = result.value.data.parsed.info.tokenAmount.uiAmount;\n\t\t\tconst otherDetails = await tokenMap.get(mint);\n\t\t\tif (otherDetails) {\n\t\t\t\tlet pairs = tokenPairs.find(\n\t\t\t\t\t(pair: object) => pair.symbol === otherDetails.symbol,\n\t\t\t\t);\n\n\t\t\t\tif (!pairs) {\n\t\t\t\t\tpairs = { pairs: false };\n\t\t\t\t}\n\n\t\t\t\tconst mintKey = new PublicKey(mint);\n\n\t\t\t\tconst associatedTokenAddress = await findAssociatedTokenAddress(\n\t\t\t\t\tpublicKey,\n\t\t\t\t\tmintKey,\n\t\t\t\t);\n\n\t\t\t\tconst associatedTokenAddressHash =\n\t\t\t\t\tassociatedTokenAddress.toString('hex');\n\t\t\t\tconst tokenObject = {\n\t\t\t\t\tmint,\n\t\t\t\t\tamount,\n\t\t\t\t\tname: otherDetails.name,\n\t\t\t\t\tsymbol: otherDetails.symbol,\n\t\t\t\t\tlogo: otherDetails.logoURI,\n\t\t\t\t\textensions: otherDetails.extensions,\n\t\t\t\t\tpairs: pairs.pairs,\n\t\t\t\t\tassociatedTokenAddressHash,\n\t\t\t\t\tassociatedTokenAddress,\n\t\t\t\t};\n\t\t\t\townedTokensArray.push(tokenObject);\n\t\t\t\townedTokensSymbols.push(otherDetails.symbol);\n\t\t\t}\n\t\t}\n\n\t\tconst filteredOwnedSymbols = ownedTokensSymbols.filter((symbol) => {\n\t\t\tconst filter = /\\d+/;\n\t\t\tconst filteredSymbol = symbol.match(filter);\n\t\t\treturn filteredSymbol ? false : true;\n\t\t});\n\t\tlet ownedSymbolsList = filteredOwnedSymbols.join();\n\t\tconsole.log('ownedSymbolsList: ', ownedSymbolsList);\n\n\t\tlet iterate = true;\n\t\tlet counter = 0;\n\t\tconst aboutData: Array<object> = [];\n\n\t\twhile (counter < 10 && iterate) {\n\t\t\tconsole.log('get owned while route for about data' + ' ' + iterate);\n\t\t\tawait fetch(\n\t\t\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=${ownedSymbolsList}`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log('res', res);\n\t\t\t\t\tif (res.status.error_code !== 0) {\n\t\t\t\t\t\tif (res.status.error_message.includes('symbol')) {\n\t\t\t\t\t\t\t//remove the symbol causing the error\n\t\t\t\t\t\t\tconst problemSymbol = res.status.error_message\n\t\t\t\t\t\t\t\t.split('\\\\')[0]\n\t\t\t\t\t\t\t\t.replace('Invalid value for ', '')\n\t\t\t\t\t\t\t\t.replace(/['\"]+/g, '')\n\t\t\t\t\t\t\t\t.replace(' ', '')\n\t\t\t\t\t\t\t\t.replace('symbol', '')\n\t\t\t\t\t\t\t\t.replace(':', '')\n\t\t\t\t\t\t\t\t.replace('\"', '')\n\t\t\t\t\t\t\t\t.toUpperCase();\n\t\t\t\t\t\t\tconst index =\n\t\t\t\t\t\t\t\townedSymbolsList.indexOf(problemSymbol);\n\t\t\t\t\t\t\tconst length = problemSymbol.length + 1;\n\t\t\t\t\t\t\tconst newArray =\n\t\t\t\t\t\t\t\townedSymbolsList.substr(0, index) +\n\t\t\t\t\t\t\t\townedSymbolsList.substr(\n\t\t\t\t\t\t\t\t\tindex + length,\n\t\t\t\t\t\t\t\t\townedSymbolsList.length - 1,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\townedSymbolsList = newArray;\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'ownedSymbolsList Fixed: ',\n\t\t\t\t\t\t\t\townedSymbolsList,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\titerate = false;\n\t\t\t\t\t\treturn aboutData.push(...Object.values(res.data));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => console.log('errerere', err));\n\t\t}\n\n\t\tconsole.log('aboutData in get owned', aboutData);\n\n\t\tconst combinedOwnedTokensArray = [];\n\t\tfor (let i = 0; i < ownedTokensArray.length; i++) {\n\t\t\tconst tokenObject = ownedTokensArray[i];\n\t\t\tconst cmcToken = aboutData.find(\n\t\t\t\t(token: object) => token.symbol === tokenObject.symbol,\n\t\t\t);\n\t\t\tconst newTokenObject = {\n\t\t\t\tdescription: cmcToken?.description\n\t\t\t\t\t? cmcToken.description\n\t\t\t\t\t: 'No description available',\n\t\t\t\t...tokenObject,\n\t\t\t};\n\t\t\tcombinedOwnedTokensArray.push(newTokenObject);\n\t\t}\n\t\tconsole.log('price get owned symbolslist', ownedSymbolsList);\n\t\tconst priceData = await fetch(\n\t\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${ownedSymbolsList}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status.error_code !== 0) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'No description available for this project.',\n\t\t\t\t\t\tlogo: 'https://streamwallet.s3.us-east-2.amazonaws.com/Random_Token.png',\n\t\t\t\t\t\tname: 'Stream',\n\t\t\t\t\t\textensions: {},\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn Object.values(res.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log('errerere', err));\n\n\t\tconsole.log('price get owned priceData', priceData);\n\t\tconst finalCombinedOwnedTokensArray = [];\n\n\t\tfor (let i = 1; i < combinedOwnedTokensArray.length; i++) {\n\t\t\tconst tokenObject = combinedOwnedTokensArray[i];\n\t\t\tconsole.log('tokenObject get owned: ', tokenObject);\n\t\t\tconst cmcToken = priceData.find(\n\t\t\t\t(token: object) => token.symbol === tokenObject.symbol,\n\t\t\t);\n\t\t\tconsole.log('cmcToken get owned: ', cmcToken);\n\t\t\tif (cmcToken && cmcToken.quote) {\n\t\t\t\tconst {\n\t\t\t\t\tprice,\n\t\t\t\t\tpercent_change_24h,\n\t\t\t\t\tpercent_change_30d,\n\t\t\t\t\tpercent_change_60d,\n\t\t\t\t\tpercent_change_90d,\n\t\t\t\t\tvolume_24h,\n\t\t\t\t\tmarket_cap,\n\t\t\t\t\tmarket_cap_dominance,\n\t\t\t\t} = cmcToken.quote.USD;\n\t\t\t\tconst newTokenObject = {\n\t\t\t\t\tprice,\n\t\t\t\t\tpercent_change_24h,\n\t\t\t\t\tpercent_change_30d,\n\t\t\t\t\tpercent_change_60d,\n\t\t\t\t\tpercent_change_90d,\n\t\t\t\t\tvolume_24h,\n\t\t\t\t\tmarket_cap,\n\t\t\t\t\tmarket_cap_dominance,\n\t\t\t\t\tprice_30d: price * (1 + percent_change_30d * 0.01),\n\t\t\t\t\tprice_60d: price * (1 + percent_change_60d * 0.01),\n\t\t\t\t\tprice_90d: price * (1 + percent_change_90d * 0.01),\n\t\t\t\t\t...tokenObject,\n\t\t\t\t};\n\t\t\t\tfinalCombinedOwnedTokensArray.push(newTokenObject);\n\t\t\t} else {\n\t\t\t\tconst newTokenObject = {\n\t\t\t\t\tprice: 0,\n\t\t\t\t\tpercent_change_24h: 0,\n\t\t\t\t\tpercent_change_30d: 0,\n\t\t\t\t\tpercent_change_60d: 0,\n\t\t\t\t\tpercent_change_90d: 0,\n\t\t\t\t\tvolume_24h: 0,\n\t\t\t\t\tmarket_cap: 0,\n\t\t\t\t\tmarket_cap_dominance: 0,\n\t\t\t\t\tprice_30d: price * (1 + percent_change_30d * 0.01),\n\t\t\t\t\tprice_60d: price * (1 + percent_change_60d * 0.01),\n\t\t\t\t\tprice_90d: price * (1 + percent_change_90d * 0.01),\n\t\t\t\t\t...tokenObject,\n\t\t\t\t};\n\t\t\t\tfinalCombinedOwnedTokensArray.push(newTokenObject);\n\t\t\t}\n\t\t}\n\t\tif (solToken) {\n\t\t\tfinalCombinedOwnedTokensArray.push(solToken);\n\t\t}\n\n\t\tconsole.log(\n\t\t\t'finalCombinedOwnedTokensArray get owned',\n\t\t\tfinalCombinedOwnedTokensArray,\n\t\t);\n\n\t\ttokensBySubWallet.push(finalCombinedOwnedTokensArray);\n\t\tnewAccountArray.push(newAccount);\n\t}\n\treturn {\n\t\ttokensBySubWallet: tokensBySubWallet,\n\t\tnewAccount: newAccountArray,\n\t};\n}\n\nasync function getSolanaAccount(activeSubWallet: number, passcode: string) {\n\tlet mnemonic = await SecureStore.getItemAsync(passcode);\n\tconst bip39 = await import('bip39');\n\tconst seed = await bip39.mnemonicToSeed(mnemonic); //returns 64 byte array\n\n\tconst newAccount = accountFromSeed(\n\t\tseed,\n\t\tactiveSubWallet,\n\t\tDERIVATION_PATH.bip44Change,\n\t\t0,\n\t);\n\n\treturn newAccount;\n}\n\nasync function getOwnedNftsData(activeSubWalletAddress: string) {\n\tconst ownedNfts = await fetch(\n\t\t`https://api.all.art/v1/wallet/${activeSubWalletAddress}`,\n\t)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\treturn data;\n\t\t})\n\t\t.catch((eerror) => console.log('error', eerror));\n\n\tconst nftArray = [];\n\tconst { Pubkey, __v, _id, createdAt, listedNfts, unlistedNfts } = ownedNfts;\n\n\tfor (let i = 0; i < unlistedNfts.length; i++) {\n\t\tconst nft = unlistedNfts[i];\n\n\t\tconst {\n\t\t\tCreators,\n\t\t\tDescription,\n\t\t\tItems,\n\t\t\tLicenseTitle,\n\t\t\tLicense_URL,\n\t\t\tMint,\n\t\t\tPreview_URL,\n\t\t\tProperties,\n\t\t\tPubKey,\n\t\t\tStandard,\n\t\t\tTitle,\n\t\t\t__v,\n\t\t\t_id,\n\t\t\tadminReported,\n\t\t\tcollectionKey,\n\t\t\tcreatedAt,\n\t\t\tisNFTPRO,\n\t\t\tjsonURL,\n\t\t\tliked,\n\t\t\tlisted,\n\t\t\tnft_colletion,\n\t\t\tnsfw,\n\t\t\treported,\n\t\t\ttags,\n\t\t\tupdatedAt,\n\t\t\tverfied,\n\t\t} = nft;\n\n\t\tconst newObject = {\n\t\t\tCreators,\n\t\t\tDescription,\n\t\t\tItems,\n\t\t\tLicenseTitle,\n\t\t\tLicense_URL,\n\t\t\tMint,\n\t\t\tPreview_URL,\n\t\t\tProperties,\n\t\t\tPubKey,\n\t\t\tStandard,\n\t\t\tTitle,\n\t\t\t__v,\n\t\t\t_id,\n\t\t\tadminReported,\n\t\t\tcollectionKey,\n\t\t\tcreatedAt,\n\t\t\tisNFTPRO,\n\t\t\tjsonURL,\n\t\t\tliked,\n\t\t\tlisted,\n\t\t\tnft_colletion,\n\t\t\tnsfw,\n\t\t\treported,\n\t\t\ttags,\n\t\t\tupdatedAt,\n\t\t\tverfied,\n\t\t};\n\n\t\tnftArray.push(newObject);\n\t}\n\treturn nftArray;\n\n\t// for (let [key, value] of Object.entries(ownedNFTs)) {\n\t// \tconsole.log(`${key}: ${value}`);\n\t// }\n\t// for (const name of Object.getOwnPropertyNames(ownedNFTs)) {\n\t// \tconst value = ownedNFTs[name];\n\t// \tconsole.log(`${String(name)}: ${value}`);\n\t// }\n\n\t// for (let i = 0; i < ownedNFTs.length; i++) {\n\n\t// \tconst nft = ownedNFTs[i];\n\n\t// \tconst {\n\t// \t\tTitle,\n\t// \t\tid,\n\t// \t} = nft;\n\t// \tconst newObject = {\n\t// \t\tTitle,\n\t// \t\tid,\n\t// \t};\n\t// \tnftArray.push(newObject);\n\t// }\n\t//console.log('NFT test: ', nftArray)\n}\n\nasync function getActiveSubWalletTokens(\n\tactiveSubWallet: number,\n\tpasscode: string,\n\ttokenMap: any,\n\ttokenPairs: any,\n) {\n\tconst newAccount = await getSolanaAccount(activeSubWallet, passcode);\n\t// const tokenPairs = await getTokenPairs();\n\tconst solPairs = tokenPairs.find((pair: object) => (pair.symbol = 'SOL'));\n\n\tconst { publicKey } = newAccount;\n\n\tconst ownedTokens = await connection\n\t\t.getTokenAccountsByOwner(publicKey, { programId })\n\t\t.catch((err) => console.log('error', err));\n\n\tconst solBalance = await connection.getBalance(publicKey);\n\tconst realSolBalance = solBalance * 0.000000001;\n\tconsole.log('realSolBalance: ', realSolBalance);\n\n\tconst ownedTokensArray = [];\n\tlet solToken;\n\tif (solBalance > 0) {\n\t\tconst priceData = await fetch(\n\t\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=SOL`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst dataArray = Object.values(data.data);\n\t\t\t\tconst percent_change_24h =\n\t\t\t\t\tdataArray[0].quote.USD.percent_change_24h;\n\t\t\t\tconst percent_change_30d =\n\t\t\t\t\tdataArray[0].quote.USD.percent_change_30d;\n\t\t\t\tconst percent_change_60d =\n\t\t\t\t\tdataArray[0].quote.USD.percent_change_60d;\n\t\t\t\tconst percent_change_90d =\n\t\t\t\t\tdataArray[0].quote.USD.percent_change_90d;\n\t\t\t\tconst { price, volume_24h, market_cap, market_cap_dominance } =\n\t\t\t\t\tdataArray[0].quote.USD;\n\t\t\t\treturn {\n\t\t\t\t\tprice,\n\t\t\t\t\tpercent_change_24h,\n\t\t\t\t\tpercent_change_30d,\n\t\t\t\t\tpercent_change_60d,\n\t\t\t\t\tpercent_change_90d,\n\t\t\t\t\tvolume_24h,\n\t\t\t\t\tmarket_cap,\n\t\t\t\t\tmarket_cap_dominance,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((error) => console.log('hello error', error));\n\n\t\tconst {\n\t\t\tprice,\n\t\t\tpercent_change_24h,\n\t\t\tpercent_change_30d,\n\t\t\tpercent_change_60d,\n\t\t\tpercent_change_90d,\n\t\t\tvolume_24h,\n\t\t\tmarket_cap,\n\t\t\tmarket_cap_dominance,\n\t\t} = priceData;\n\t\tconst price_30d = price * (1 + percent_change_30d * 0.01);\n\t\tconst price_60d = price * (1 + percent_change_60d * 0.01);\n\t\tconst price_90d = price * (1 + percent_change_90d * 0.01);\n\t\tconst tokenObject = {\n\t\t\tmint: 'So11111111111111111111111111111111111111112',\n\t\t\tamount: realSolBalance,\n\t\t\tname: 'Solana',\n\t\t\tsymbol: 'SOL',\n\t\t\tlogo: 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n\t\t\textensions: {\n\t\t\t\tdiscord: 'https://discord.com/invite/pquxPsq',\n\t\t\t\ttwitter: 'https://twitter.com/solana',\n\t\t\t\twebsite: 'https://solana.com/',\n\t\t\t},\n\t\t\tprice,\n\t\t\tprice_30d,\n\t\t\tprice_60d,\n\t\t\tprice_90d,\n\t\t\tpairs: solPairs.pairs,\n\t\t\tpercent_change_24h,\n\t\t\tpercent_change_30d,\n\t\t\tpercent_change_60d,\n\t\t\tpercent_change_90d,\n\t\t\tvolume_24h,\n\t\t\tmarket_cap,\n\t\t\tdescription:\n\t\t\t\t'Solana (SOL) is a cryptocurrency launched in 2020. Solana has a current supply of 506,348,680.4303728 with 299,902,995.15039116 in circulation. The last known price of Solana is 146.68289748 USD and is up 1.09 over the last 24 hours. It is currently trading on 161 active market(s) with $2,959,138,044.47 traded over the last 24 hours. More information can be found at https://solana.com.',\n\t\t\tmarket_cap_dominance,\n\t\t};\n\t\townedTokensArray.push(tokenObject);\n\t\tsolToken = tokenObject;\n\t}\n\tlet ownedTokensSymbols = [];\n\tfor (let i = 0; i < ownedTokens.value.length; i++) {\n\t\tconst result = await connection.getParsedAccountInfo(\n\t\t\townedTokens.value[i].pubkey,\n\t\t);\n\n\t\tconst mint = result.value.data.parsed.info.mint;\n\t\tconst amount = result.value.data.parsed.info.tokenAmount.uiAmount;\n\t\tconst otherDetails = await tokenMap.get(mint);\n\t\tif (otherDetails) {\n\t\t\tlet pairs = tokenPairs.find(\n\t\t\t\t(pair: object) => pair.symbol === otherDetails.symbol,\n\t\t\t);\n\n\t\t\tif (!pairs) {\n\t\t\t\tpairs = { pairs: false };\n\t\t\t}\n\n\t\t\tconst mintKey = new PublicKey(mint);\n\n\t\t\tconst associatedTokenAddress = await findAssociatedTokenAddress(\n\t\t\t\tpublicKey,\n\t\t\t\tmintKey,\n\t\t\t).catch((err) => console.log('error', err));\n\n\t\t\tconst associatedTokenAddressHash =\n\t\t\t\tassociatedTokenAddress.toString('hex');\n\t\t\tconst tokenObject = {\n\t\t\t\tmint,\n\t\t\t\tamount,\n\t\t\t\tname: otherDetails.name,\n\t\t\t\tsymbol: otherDetails.symbol,\n\t\t\t\tlogo: otherDetails.logoURI,\n\t\t\t\textensions: otherDetails.extensions,\n\t\t\t\tpairs: pairs.pairs,\n\t\t\t\tassociatedTokenAddressHash,\n\t\t\t\tassociatedTokenAddress,\n\t\t\t};\n\t\t\townedTokensArray.push(tokenObject);\n\t\t\townedTokensSymbols.push(otherDetails.symbol.toUpperCase());\n\t\t}\n\t}\n\n\tconst filteredOwnedSymbols = ownedTokensSymbols.filter((symbol) => {\n\t\tconst filter = /\\d+/;\n\t\tconst filteredSymbol = symbol.match(filter);\n\t\treturn filteredSymbol ? false : true;\n\t});\n\tlet ownedSymbolsList = filteredOwnedSymbols.join();\n\n\tlet iterate = true;\n\tlet counter = 0;\n\tconst aboutData: Array<object> = [];\n\n\twhile (counter < 10 && iterate) {\n\t\tawait fetch(\n\t\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=${ownedSymbolsList}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status.error_code !== 0) {\n\t\t\t\t\tif (res.status.error_message.includes('symbol')) {\n\t\t\t\t\t\t//remove the symbol causing the error\n\t\t\t\t\t\tconst problemSymbol = res.status.error_message\n\t\t\t\t\t\t\t.split('\\\\')[0]\n\t\t\t\t\t\t\t.replace('Invalid value for ', '')\n\t\t\t\t\t\t\t.replace(/['\"]+/g, '')\n\t\t\t\t\t\t\t.replace(' ', '')\n\t\t\t\t\t\t\t.replace('symbol', '')\n\t\t\t\t\t\t\t.replace(':', '')\n\t\t\t\t\t\t\t.replace('\"', '')\n\t\t\t\t\t\t\t.toUpperCase();\n\t\t\t\t\t\tconst index = ownedSymbolsList.indexOf(problemSymbol);\n\t\t\t\t\t\tconst length = problemSymbol.length + 1;\n\t\t\t\t\t\tconst newArray =\n\t\t\t\t\t\t\townedSymbolsList.substr(0, index) +\n\t\t\t\t\t\t\townedSymbolsList.substr(\n\t\t\t\t\t\t\t\tindex + length,\n\t\t\t\t\t\t\t\townedSymbolsList.length - 1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\townedSymbolsList = newArray;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t'ownedSymbolsList Fixed: ',\n\t\t\t\t\t\t\townedSymbolsList,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcounter++;\n\t\t\t\t} else {\n\t\t\t\t\titerate = false;\n\t\t\t\t\treturn aboutData.push(...Object.values(res.data));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log('errerere', err));\n\t}\n\n\tconst combinedOwnedTokensArray = [];\n\tfor (let i = 0; i < ownedTokensArray.length; i++) {\n\t\tconst tokenObject = ownedTokensArray[i];\n\t\tconst cmcToken = aboutData.find(\n\t\t\t(token: object) => token.symbol === tokenObject.symbol,\n\t\t);\n\t\tconst newTokenObject = {\n\t\t\tdescription: cmcToken?.description\n\t\t\t\t? cmcToken.description\n\t\t\t\t: 'No description available',\n\t\t\t...tokenObject,\n\t\t};\n\t\tcombinedOwnedTokensArray.push(newTokenObject);\n\t}\n\tconst priceData = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${ownedSymbolsList}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': apiKey,\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((res) => {\n\t\t\tif (res.status.error_code !== 0) {\n\t\t\t\treturn {\n\t\t\t\t\tdescription: 'No description available for this project.',\n\t\t\t\t\tlogo: 'https://streamwallet.s3.us-east-2.amazonaws.com/Random_Token.png',\n\t\t\t\t\tname: 'unknown',\n\t\t\t\t\textensions: {},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn Object.values(res.data);\n\t\t\t}\n\t\t})\n\t\t.catch((err) => console.log('errerere', err));\n\n\tconst finalCombinedOwnedTokensArray = [];\n\tfor (let i = 1; i < combinedOwnedTokensArray.length; i++) {\n\t\tconst tokenObject = combinedOwnedTokensArray[i];\n\t\tconst cmcToken = priceData.find(\n\t\t\t(token: object) => token.symbol === tokenObject.symbol,\n\t\t);\n\n\t\tif (cmcToken && cmcToken.quote) {\n\t\t\tconst {\n\t\t\t\tprice,\n\t\t\t\tpercent_change_24h,\n\t\t\t\tpercent_change_30d,\n\t\t\t\tpercent_change_60d,\n\t\t\t\tpercent_change_90d,\n\t\t\t\tvolume_24h,\n\t\t\t\tmarket_cap,\n\t\t\t\tmarket_cap_dominance,\n\t\t\t} = cmcToken.quote.USD;\n\t\t\tconst newTokenObject = {\n\t\t\t\tprice,\n\t\t\t\tpercent_change_24h,\n\t\t\t\tpercent_change_30d,\n\t\t\t\tpercent_change_60d,\n\t\t\t\tpercent_change_90d,\n\t\t\t\tvolume_24h,\n\t\t\t\tmarket_cap,\n\t\t\t\tmarket_cap_dominance,\n\t\t\t\tprice_30d: price * (1 + percent_change_30d * 0.01),\n\t\t\t\tprice_60d: price * (1 + percent_change_60d * 0.01),\n\t\t\t\tprice_90d: price * (1 + percent_change_90d * 0.01),\n\t\t\t\t...tokenObject,\n\t\t\t};\n\t\t\tfinalCombinedOwnedTokensArray.push(newTokenObject);\n\t\t} else {\n\t\t\tconst newTokenObject = {\n\t\t\t\tprice: 0,\n\t\t\t\tpercent_change_24h: 0,\n\t\t\t\tpercent_change_30d: 0,\n\t\t\t\tpercent_change_60d: 0,\n\t\t\t\tpercent_change_90d: 0,\n\t\t\t\tvolume_24h: 0,\n\t\t\t\tmarket_cap: 0,\n\t\t\t\tmarket_cap_dominance: 0,\n\t\t\t\tprice_30d: 0,\n\t\t\t\tprice_60d: 0,\n\t\t\t\tprice_90d: 0,\n\t\t\t\t...tokenObject,\n\t\t\t};\n\n\t\t\tfinalCombinedOwnedTokensArray.push(newTokenObject);\n\t\t}\n\t}\n\tif (solToken) {\n\t\tfinalCombinedOwnedTokensArray.push(solToken);\n\t}\n\n\treturn finalCombinedOwnedTokensArray;\n}\n\nasync function getAllTokensData(tokenMapSymbols: any) {\n\tconst tokenPairs = await getTokenPairs();\n\n\tconst symbolsList = await getCleanTokenList();\n\n\tconst combinedSymbolList = symbolsList.join();\n\tconst coinMarketCapTokens1 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=${symbolList1}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\tconsole.log('data: ', data);\n\t\t\treturn Object.values(data.data);\n\t\t})\n\t\t.catch((err) => console.log('error', err));\n\n\tconst coinMarketCapTokens2 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=${symbolList2}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\tconsole.log('data: ', data);\n\t\t\treturn Object.values(data.data);\n\t\t})\n\t\t.catch((err) => console.log('error', err));\n\n\tconst coinMarketCapTokens3 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/info?symbol=${symbolList3}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\tconsole.log('data: ', data);\n\t\t\treturn Object.values(data.data);\n\t\t})\n\t\t.catch((err) => console.log('error', err));\n\n\t//combine token pairs and Coinmarketcap data\n\t//console.log('CMC Data: ', coinMarketCapTokens)\n\n\tconst combinedCmcTokensArray = [\n\t\t...coinMarketCapTokens1,\n\t\t...coinMarketCapTokens2,\n\t\t...coinMarketCapTokens3,\n\t];\n\tconsole.log('combinedCmcTokensArray: ', combinedCmcTokensArray);\n\n\tconst combinedArray = [];\n\tfor (let i = 0; i < combinedCmcTokensArray.length; i++) {\n\t\tconst cmToken = combinedCmcTokensArray[i];\n\n\t\tconst {\n\t\t\tname,\n\t\t\tlogo,\n\t\t\tsymbol,\n\t\t\tdescription,\n\t\t\turls: { twitter, discord, website },\n\t\t} = cmToken;\n\n\t\tlet mint;\n\t\tif (symbol === 'USDC') {\n\t\t\tmint = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v';\n\t\t} else {\n\t\t\tconst mintObject = tokenMapSymbols.get(symbol);\n\t\t\tmint = mintObject?.address;\n\t\t}\n\n\t\tconst newObject = {\n\t\t\tname,\n\t\t\tmint,\n\t\t\tlogo,\n\t\t\tsymbol,\n\t\t\tdescription,\n\t\t\textensions: {\n\t\t\t\ttwitter,\n\t\t\t\tdiscord,\n\t\t\t\twebsite,\n\t\t\t},\n\t\t\tpairs: [],\n\t\t};\n\n\t\tcombinedArray.push(newObject);\n\t}\n\n\t// console.log('combeind array', combinedArray);\n\n\t//get and combine prices now too\n\tconst coinMarketCapPrices1 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${symbolList1}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\treturn Object.values(data.data);\n\t\t});\n\n\tconst coinMarketCapPrices2 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${symbolList2}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\treturn Object.values(data.data);\n\t\t});\n\n\tconst coinMarketCapPrices3 = await fetch(\n\t\t`https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${symbolList3}`,\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'X-CMC_PRO_API_KEY': 'f7353e06-2e44-4912-9fff-05929a5681a7',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Accept-Encoding': 'deflate, gzip',\n\t\t\t},\n\t\t},\n\t)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\treturn Object.values(data.data);\n\t\t});\n\n\tconst combinedPricesArray = [\n\t\t...coinMarketCapPrices1,\n\t\t...coinMarketCapPrices2,\n\t\t...coinMarketCapPrices3,\n\t];\n\n\tconst combinedArrayWithPrices = [];\n\tfor (let i = 0; i < combinedArray.length; i++) {\n\t\tconst element = combinedArray[i];\n\t\tconst prices = combinedPricesArray.find(\n\t\t\t(priceSet) => priceSet.symbol === element.symbol,\n\t\t);\n\n\t\tconst {\n\t\t\tpercent_change_24h,\n\t\t\tmarket_cap,\n\t\t\tmarket_cap_dominance,\n\t\t\tpercent_change_30d,\n\t\t\tpercent_change_60d,\n\t\t\tpercent_change_90d,\n\t\t\tprice,\n\t\t\tvolume_24h,\n\t\t} = prices.quote.USD;\n\n\t\tconst price_30d = price * (1 + percent_change_30d * 0.01);\n\t\tconst price_60d = price * (1 + percent_change_60d * 0.01);\n\t\tconst price_90d = price * (1 + percent_change_90d * 0.01);\n\n\t\tconst newObject = {\n\t\t\t...element,\n\t\t\tpercent_change_24h,\n\t\t\tmarket_cap,\n\t\t\tmarket_cap_dominance,\n\t\t\tpercent_change_30d,\n\t\t\tpercent_change_60d,\n\t\t\tpercent_change_90d,\n\t\t\tprice_30d,\n\t\t\tprice_60d,\n\t\t\tprice_90d,\n\t\t\tprice,\n\t\t\tvolume_24h,\n\t\t};\n\t\tcombinedArrayWithPrices.push(newObject);\n\t}\n\treturn combinedArrayWithPrices;\n\n\t//now add market address\n}\n\nfunction getTokenPairs() {\n\t//get a clean list of all symbols in bonfida (remove all the perps ones), dedupe them, then grab their symbols, then grab their pairs, then list if it's buy side or sell side for each one\n\n\t//then make two big calls to coinmarketcap - one for data, the other for price\n\t//then combine all of those results based on symbol name 🎉\n\treturn fetch('https://serum-api.bonfida.com/pairs')\n\t\t.then((res) => res.json())\n\t\t.then((res) => {\n\t\t\tconst removedPools = res.data.filter(\n\t\t\t\t(value) =>\n\t\t\t\t\t![\n\t\t\t\t\t\t'-',\n\t\t\t\t\t\t'LQID',\n\t\t\t\t\t\t'ODOP',\n\t\t\t\t\t\t'xCOPE',\n\t\t\t\t\t\t'CCAI',\n\t\t\t\t\t\t'PLEB',\n\t\t\t\t\t\t'BVOL',\n\t\t\t\t\t\t'POOL',\n\t\t\t\t\t\t'BTC/SRM',\n\t\t\t\t\t\t'FTT/SRM',\n\t\t\t\t\t\t'YFI/SRM',\n\t\t\t\t\t\t'SUSHI/SRM',\n\t\t\t\t\t\t'ETH/SRM',\n\t\t\t\t\t\t'RAY/SRM',\n\t\t\t\t\t\t'RAY/ETH',\n\t\t\t\t\t\t'MSRM',\n\t\t\t\t\t].some((el) => value.includes(el)),\n\t\t\t);\n\n\t\t\t//split the pairs into separate symbols\n\t\t\tconst symbolsArray = [];\n\t\t\tfor (let i = 0; i < removedPools.length; i++) {\n\t\t\t\tconst el = removedPools[i];\n\t\t\t\tconst splitArray = el.split('/');\n\t\t\t\tsymbolsArray.push(...splitArray);\n\t\t\t}\n\n\t\t\t//dedupe symbols\n\t\t\tconst dedupedSymbols = [...new Set(symbolsArray)];\n\n\t\t\t//remove random hashes\n\t\t\tconst cleanArray = [];\n\t\t\tfor (let i = 0; i < dedupedSymbols.length; i++) {\n\t\t\t\tconst el = dedupedSymbols[i];\n\t\t\t\tif (el.length < 15) {\n\t\t\t\t\tcleanArray.push(el);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst finishedArray = [];\n\t\t\tfor (let i = 0; i < cleanArray.length; i++) {\n\t\t\t\tconst el = cleanArray[i];\n\n\t\t\t\t//find matching pairs\n\t\t\t\tconst pairs = removedPools.filter(\n\t\t\t\t\t(str: string) => str.indexOf(el) >= 0,\n\t\t\t\t);\n\t\t\t\tconst pairsArray = [];\n\t\t\t\tfor (let i = 0; i < pairs.length; i++) {\n\t\t\t\t\tconst el2 = pairs[i];\n\n\t\t\t\t\t//take away the name and slash\n\t\t\t\t\tconst removeSymbol = el2.replace(el, '');\n\t\t\t\t\tconst removeSlash = removeSymbol.replace('/', '');\n\n\t\t\t\t\t//deduce whether sell or buy side\n\t\t\t\t\tlet side;\n\t\t\t\t\tremoveSlash === el2.slice(0, removeSlash.length)\n\t\t\t\t\t\t? (side = 'buy')\n\t\t\t\t\t\t: (side = 'sell');\n\n\t\t\t\t\t//construct array object\n\t\t\t\t\tconst newPair = {\n\t\t\t\t\t\tpair: el2,\n\t\t\t\t\t\tsymbol: removeSlash,\n\t\t\t\t\t\tside: side,\n\t\t\t\t\t};\n\n\t\t\t\t\tpairsArray.push(newPair);\n\t\t\t\t}\n\n\t\t\t\tconst finishedObject = {\n\t\t\t\t\tsymbol: el,\n\t\t\t\t\tpairs: pairsArray,\n\t\t\t\t};\n\n\t\t\t\tfinishedArray.push(finishedObject);\n\t\t\t}\n\t\t\treturn finishedArray;\n\t\t})\n\t\t.catch((err) => console.log(err));\n}\n\nfunction getCleanTokenList() {\n\treturn fetch('https://serum-api.bonfida.com/pairs')\n\t\t.then((res) => res.json())\n\t\t.then((res) => {\n\t\t\t//remove pools and dashes\n\t\t\tconst removedDashes = res.data.filter(\n\t\t\t\t(str: string) => str.indexOf('-') === -1,\n\t\t\t);\n\t\t\tconst removedToken = removedDashes.filter(\n\t\t\t\t(str: string) => str.indexOf('LQID') === -1,\n\t\t\t);\n\t\t\tconst removedToken2 = removedToken.filter(\n\t\t\t\t(str: string) => str.indexOf('ODOP') === -1,\n\t\t\t);\n\t\t\tconst removedToken3 = removedToken2.filter(\n\t\t\t\t(str: string) => str.indexOf('xCOPE') === -1,\n\t\t\t);\n\t\t\tconst removedToken4 = removedToken3.filter(\n\t\t\t\t(str: string) => str.indexOf('CCAI') === -1,\n\t\t\t);\n\t\t\tconst removedToken5 = removedToken4.filter(\n\t\t\t\t(str: string) => str.indexOf('PLEB') === -1,\n\t\t\t);\n\t\t\tconst removedToken6 = removedToken5.filter(\n\t\t\t\t(str: string) => str.indexOf('FIDID') === -1,\n\t\t\t);\n\t\t\tconst removedPools = removedToken6.filter(\n\t\t\t\t(str: string) => str.indexOf('POOL') === -1,\n\t\t\t);\n\n\t\t\t//split the pairs into separate symbols\n\t\t\tconst symbolsArray = [];\n\t\t\tfor (let i = 0; i < removedPools.length; i++) {\n\t\t\t\tconst el = removedPools[i];\n\t\t\t\tconst splitArray = el.split('/');\n\t\t\t\tsymbolsArray.push(...splitArray);\n\t\t\t}\n\n\t\t\t//dedupe symbols\n\t\t\tconst dedupedSymbols = [...new Set(symbolsArray)];\n\n\t\t\t//remove random hashes\n\t\t\tconst cleanArray = [];\n\t\t\tfor (let i = 0; i < dedupedSymbols.length; i++) {\n\t\t\t\tconst el = dedupedSymbols[i];\n\t\t\t\tif (el.length < 15) {\n\t\t\t\t\tcleanArray.push(el);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cleanArray;\n\t\t})\n\t\t.catch((err) => console.warn(err));\n}\n\nfunction getTokenPair(symbol: string) {\n\t//are we still using this?\n\treturn fetch('https://serum-api.bonfida.com/pairs')\n\t\t.then((res) => res.json())\n\t\t.then((res) => {\n\t\t\t//remove pools and dashes\n\t\t\tconst removedDashes = res.data.filter(\n\t\t\t\t(str: string) => str.indexOf('-') === -1,\n\t\t\t);\n\t\t\tconst removedToken = removedDashes.filter(\n\t\t\t\t(str: string) => str.indexOf('LIQD') === -1,\n\t\t\t);\n\t\t\tconst removedPools = removedToken.filter(\n\t\t\t\t(str: string) => str.indexOf('POOL') === -1,\n\t\t\t);\n\n\t\t\t//clean this up to take the inputted token\n\t\t\tconst finishedArray = [];\n\n\t\t\t//find matching pairs\n\t\t\tconst pairs = removedPools.filter(\n\t\t\t\t(str: string) => str.indexOf(symbol) >= 0,\n\t\t\t);\n\t\t\tconst pairsArray = [];\n\t\t\tfor (let i = 0; i < pairs.length; i++) {\n\t\t\t\tconst el2 = pairs[i];\n\n\t\t\t\t//take away the name and slash\n\t\t\t\tconst removeSymbol = el2.replace(symbol, '');\n\t\t\t\tconst removeSlash = removeSymbol.replace('/', '');\n\n\t\t\t\t//deduce whether sell or buy side\n\t\t\t\tlet side;\n\t\t\t\tremoveSlash === el2.slice(0, removeSlash.length)\n\t\t\t\t\t? (side = 'buy')\n\t\t\t\t\t: (side = 'sell');\n\n\t\t\t\t//construct array object\n\t\t\t\tconst newPair = {\n\t\t\t\t\tpair: el2,\n\t\t\t\t\tsymbol: removeSlash,\n\t\t\t\t\tside: side,\n\t\t\t\t};\n\n\t\t\t\tpairsArray.push(newPair);\n\t\t\t}\n\n\t\t\treturn pairsArray;\n\t\t})\n\t\t.catch((err) => console.log(err));\n}\n\nexport {\n\tgenerateMnemonic,\n\tmnemonicToSeed,\n\taccountFromSeed,\n\tmaskedAddress,\n\tderiveSeed,\n\tderiveSeed2,\n\tfindAssociatedTokenAddress,\n\tgetAccountFromSeed,\n\tDERIVATION_PATH,\n\tnormalizeNumber,\n\tshortenPublicKey,\n\tcopyToClipboard,\n\tgetSubWalletsData,\n\tgetOwnedTokensData,\n\tgetAllTokensData,\n\tgetActiveSubWalletTokens,\n\tgetOwnedNftsData,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}