{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Background, DashboardLoading } from \"../components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AreaChart, Path } from 'react-native-svg-charts';\nimport { Defs, LinearGradient, Stop } from 'react-native-svg';\nimport * as shape from 'd3-shape';\nimport { SubPageHeader } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport { TokenListProvider } from '@solana/spl-token-registry';\nimport { normalizeNumber, shortenPublicKey, copyToClipboard, getSubWalletsData, getOwnedTokensData, getAllTokensData, getActiveSubWalletTokens, getOwnedNftsData } from \"../utils\";\nimport TokenCard from \"../components/TokenCard\";\nimport { useStoreState, useStoreActions } from \"../hooks/storeHooks\";\nimport NFTcard from \"../components/NFTcard\";\nimport { Snackbar } from 'react-native-paper';\nimport { useContext } from 'react';\nimport AppContext from \"../components/AppContext\";\n\nvar DashboardScreen2 = function DashboardScreen2(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chartData = _useState4[0],\n      setChartData = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      account = _useState8[0],\n      setAccount = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      connection = _useState10[0],\n      setConnection = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      tokens = _useState12[0],\n      setTokens = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var tokenMap = useStoreState(function (state) {\n    return state.tokenMap;\n  });\n\n  var _useState15 = useState(new Map()),\n      _useState16 = _slicedToArray(_useState15, 2),\n      tokenMapSymbols = _useState16[0],\n      setTokenMapSymbols = _useState16[1];\n\n  var passcode = useStoreState(function (state) {\n    return state.passcode;\n  });\n  var allTokens = useStoreState(function (state) {\n    return state.allTokens;\n  });\n  var setAllTokens = useStoreActions(function (actions) {\n    return actions.setAllTokens;\n  });\n  var ownedTokens = useStoreState(function (state) {\n    return state.ownedTokens;\n  });\n  var setOwnedTokens = useStoreActions(function (actions) {\n    return actions.setOwnedTokens;\n  });\n  var setFirstLoadedTokens = useStoreActions(function (actions) {\n    return actions.setFirstLoadedTokens;\n  });\n  var selectedWallet = useStoreState(function (state) {\n    return state.selectedWallet;\n  }, function (prev, next) {\n    return prev.selectedWallet === next.selectedWallet;\n  });\n  var setSelectedWallet = useStoreActions(function (actions) {\n    return actions.setSelectedWallet;\n  });\n  var subWallets = useStoreState(function (state) {\n    return state.subWallets;\n  });\n  var setSubWallets = useStoreActions(function (actions) {\n    return actions.setSubWallets;\n  });\n  var subWalletNftsArray = useStoreState(function (state) {\n    return state.subWalletNftsArray;\n  });\n  var setSubWalletNftsArray = useStoreActions(function (actions) {\n    return actions.setSubWalletNftsArray;\n  });\n  var subWalletTokensArray = useStoreState(function (state) {\n    return state.subWalletTokensArray;\n  });\n  var setSubWalletTokensArray = useStoreActions(function (actions) {\n    return actions.setSubWalletTokensArray;\n  });\n  var tokenPairs = useStoreState(function (state) {\n    return state.tokenPairs;\n  });\n\n  var _useState17 = useState(tokens),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sortedTokens = _useState18[0],\n      setSortedTokens = _useState18[1];\n\n  var activeSubWallet = useStoreState(function (state) {\n    return state.activeSubWallet;\n  }, function (prev, next) {\n    return prev.activeSubWallet === next.activeSubWallet;\n  });\n  var setActiveSubWallet = useStoreActions(function (actions) {\n    return actions.setActiveSubWallet;\n  });\n  var previousActiveSubWallet = useRef(0);\n  var myContext = useContext(AppContext);\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      ownedTokensHasRendered = _useState20[0],\n      setOwnedTokensHasRendered = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      snackIsVisible = _useState22[0],\n      setSnackIsVisible = _useState22[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setSnackIsVisible(true);\n  };\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setSnackIsVisible(false);\n  };\n\n  function sortTokens(tokens) {\n    var sortedTokens = tokens.sort(function (a, b) {\n      return b.price * b.amount - a.price * a.amount;\n    });\n    setSortedTokens(sortedTokens);\n  }\n\n  useEffect(function () {\n    if (tokens) {\n      sortTokens(tokens);\n    }\n  }, [tokens]);\n\n  var Line = function Line(_ref2) {\n    var line = _ref2.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'black',\n      fill: 'none'\n    });\n  };\n\n  var Gradient = function Gradient() {\n    return React.createElement(Defs, {\n      key: 'defs'\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y: '0%',\n      x2: '0%',\n      y2: '100%'\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(222, 249, 119)',\n      stopOpacity: 0.9\n    }), React.createElement(Stop, {\n      offset: '100%',\n      stopColor: 'rgb(201, 249, 119)',\n      stopOpacity: 0\n    })));\n  };\n\n  function getSubWallets() {\n    var result;\n    return _regeneratorRuntime.async(function getSubWallets$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getSubWalletsData(passcode));\n\n          case 2:\n            result = _context.sent;\n            setSubWallets(result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getActiveSubWalletOwnedTokens() {\n    var tokens, todayArray, d30Array, d60Array, d90Array, sumToday, i, sum30, _i, sum60, _i2, sum90, _i3, today;\n\n    return _regeneratorRuntime.async(function getActiveSubWalletOwnedTokens$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getActiveSubWalletTokens(activeSubWallet, passcode, tokenMap, tokenPairs));\n\n          case 2:\n            tokens = _context2.sent;\n            setFirstLoadedTokens(tokens);\n            setTokens(tokens);\n            todayArray = [];\n            d30Array = [];\n            d60Array = [];\n            d90Array = [];\n            tokens.forEach(function (token) {\n              todayArray.push(token.price * token.amount);\n              d30Array.push(token.price_30d * token.amount);\n              d60Array.push(token.price_60d * token.amount);\n              d90Array.push(token.price_90d * token.amount);\n            });\n            sumToday = 0;\n\n            for (i = 0; i < todayArray.length; i++) {\n              sumToday += todayArray[i];\n            }\n\n            sum30 = 0;\n\n            for (_i = 0; _i < d30Array.length; _i++) {\n              sum30 += d30Array[_i];\n            }\n\n            sum60 = 0;\n\n            for (_i2 = 0; _i2 < d60Array.length; _i2++) {\n              sum60 += d60Array[_i2];\n            }\n\n            sum90 = 0;\n\n            for (_i3 = 0; _i3 < d90Array.length; _i3++) {\n              sum90 += d90Array[_i3];\n            }\n\n            today = setChartData([sum90, sum60, sum30, sumToday]);\n            setLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getOwnedTokens() {\n    var result;\n    return _regeneratorRuntime.async(function getOwnedTokens$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getOwnedTokensData(subWallets, passcode, tokenMap, tokenPairs));\n\n          case 2:\n            result = _context3.sent;\n            setSubWalletTokensArray(result.tokensBySubWallet);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getAllTokens() {\n    var result;\n    return _regeneratorRuntime.async(function getAllTokens$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(getAllTokensData(tokenMapSymbols, tokenPairs));\n\n          case 2:\n            result = _context4.sent;\n            setAllTokens(result);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getOwnedNfts() {\n    var result;\n    return _regeneratorRuntime.async(function getOwnedNfts$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(getOwnedNftsData(subWallets[activeSubWallet].publicKey));\n\n          case 2:\n            result = _context5.sent;\n            setSubWalletNftsArray(result);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function populateDashboard() {\n    var todayTotal;\n    var percentChangeFixed;\n\n    if (tokens && tokens.length > 0) {\n      var totals = tokens == null ? void 0 : tokens.map(function (item) {\n        return item.amount * item.price;\n      });\n      todayTotal = totals == null ? void 0 : totals.reduce(function (prev, current) {\n        return prev + current;\n      });\n      var yesterdayTotals = tokens == null ? void 0 : tokens.map(function (item) {\n        var change = item.percent_change_24h * 0.01;\n        var multiplier = 1 - change;\n        var total = item.amount * item.price;\n        var yesterday = total * multiplier;\n        return yesterday;\n      });\n      var yesterdayTotal = yesterdayTotals == null ? void 0 : yesterdayTotals.reduce(function (prev, current) {\n        return prev + current;\n      });\n      var percentChange1 = (todayTotal - yesterdayTotal) / todayTotal * 100;\n      percentChangeFixed = percentChange1.toFixed(1);\n    }\n\n    return {\n      totalBalance: normalizeNumber(todayTotal),\n      percentChange: percentChangeFixed\n    };\n  }\n\n  function getSOL(tokens) {\n    var sol = tokens.find(function (token) {\n      if (token.symbol === 'SOL') {\n        return token;\n      }\n    });\n    return sol;\n  }\n\n  useEffect(function () {\n    if (subWalletTokensArray) {\n      if (subWalletTokensArray[activeSubWallet]) {\n        setOwnedTokens(subWalletTokensArray[activeSubWallet]);\n      }\n    }\n  }, [subWalletTokensArray, activeSubWallet]);\n  useEffect(function () {\n    if (tokens) {\n      getAllTokens();\n    }\n\n    if (!subWallets) {\n      getSubWallets();\n    }\n\n    getOwnedNfts();\n  }, [tokens]);\n  useEffect(function () {\n    if (tokenMap && !tokens) {\n      console.warn('hit selected wallet');\n      getActiveSubWalletOwnedTokens();\n    }\n  }, [tokenMap]);\n  useEffect(function () {\n    if (tokenMap && subWallets && tokens && !ownedTokensHasRendered) {\n      getOwnedTokens();\n      setOwnedTokensHasRendered(true);\n    }\n  }, [tokenMap, subWallets, tokens]);\n  useEffect(function () {\n    new TokenListProvider().resolve().then(function (tokens) {\n      var tokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n      setTokenMapSymbols(tokenList == null ? void 0 : tokenList.reduce(function (map, item) {\n        map.set(item.symbol, item);\n        return map;\n      }, new Map()));\n    });\n  }, []);\n  useEffect(function () {\n    if (previousActiveSubWallet.current !== myContext.globalActiveWallet) {\n      populateDashboard();\n      getActiveSubWalletOwnedTokens();\n      previousActiveSubWallet.current = myContext.globalActiveWallet;\n    }\n  }, [myContext.globalActiveWallet]);\n\n  if (!loading && tokens.length === 0 && account) {\n    return React.createElement(Background, null, React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false\n    }, React.createElement(SubPageHeader, {\n      backButton: false\n    }, \"Dashboard\"), React.createElement(View, {\n      style: {\n        borderWidth: 1,\n        borderRadius: 18,\n        padding: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.black_one\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/icons/wallet_green.png\"),\n      style: {\n        width: 40,\n        height: 40,\n        borderRadius: 100,\n        marginRight: 16\n      }\n    }), React.createElement(View, null, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_Bold), {}, {\n        color: 'white',\n        paddingRight: 16\n      })\n    }, \"Send tokens to your wallet to get started\"), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Caption_M_SemiBold), {}, {\n        color: theme.colors.black_six\n      })\n    }, \"Start by copying your Wallet Address\"), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Caption_M_SemiBold), {}, {\n        color: theme.colors.black_six\n      })\n    }, \"(\", shortenPublicKey(subWallets[activeSubWallet].publicKey.toString('hex'), 0, 8, -8), \")\")))), React.createElement(View, {\n      style: {\n        borderTopColor: theme.colors.black_six,\n        borderTopWidth: 1,\n        marginVertical: 16\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row'\n      },\n      onPress: function onPress() {\n        copyToClipboard(subWallets[activeSubWallet].publicKey.toString('hex'));\n        onToggleSnackBar();\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_Bold), {}, {\n        color: '#1a374d',\n        marginRight: 4\n      })\n    }, \"Copy Wallet Address\"))), React.createElement(View, {\n      style: {\n        borderTopColor: theme.colors.black_six,\n        borderTopWidth: 1,\n        marginVertical: 16\n      }\n    }), React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        padding: 24\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/icons/chart_logo_small.png\"),\n      style: {\n        width: 40,\n        height: 40,\n        marginBottom: 16\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: theme.colors.black_four\n      }\n    }, \"No tokens belong to this address.\"))), React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        marginBottom: 8,\n        marginHorizontal: -8\n      }\n    }, React.createElement(Snackbar, {\n      visible: snackIsVisible,\n      onDismiss: onDismissSnackBar,\n      theme: {\n        colors: {\n          accent: '#FFFFFF'\n        }\n      },\n      action: {\n        label: '',\n        onPress: function onPress() {\n          return _regeneratorRuntime.async(function onPress$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  setSnackIsVisible(false);\n\n                case 1:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        icon: function icon() {\n          return React.createElement(Image, {\n            source: require(\"../assets/icons/close_white.png\"),\n            style: {\n              width: 14,\n              height: 14,\n              marginRight: 4,\n              marginLeft: 85,\n              marginVertical: 4\n            }\n          });\n        }\n      },\n      style: {\n        borderRadius: 18,\n        height: 56,\n        alignSelf: 'stretch',\n        backgroundColor: '#1E2122',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: '#FFFFFF'\n      }, theme.fonts.Nunito_Sans.Caption_M_SemiBold)\n    }, \"Address Copied!\"))));\n  }\n\n  if (loading) {\n    return React.createElement(Background, null, React.createElement(SubPageHeader, {\n      backButton: false\n    }, \"Dashboard\"), React.createElement(View, {\n      style: {\n        borderWidth: 1,\n        borderRadius: 18,\n        borderColor: theme.colors.border,\n        padding: 16\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 140,\n        height: 20,\n        borderRadius: 4,\n        backgroundColor: theme.colors.black_seven,\n        marginBottom: 24\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 70,\n        height: 32,\n        borderRadius: 4,\n        backgroundColor: theme.colors.black_seven,\n        marginRight: 16\n      }\n    }), React.createElement(View, {\n      style: {\n        width: 85,\n        height: 20,\n        borderRadius: 4,\n        backgroundColor: theme.colors.black_seven\n      }\n    })), React.createElement(View, {\n      style: {\n        marginVertical: 48\n      }\n    }, React.createElement(ActivityIndicator, null))), React.createElement(View, {\n      style: {\n        marginTop: 24,\n        marginBottom: 8\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        marginBottom: 8\n      }, theme.fonts.Azeret_Mono.Body_M_SemiBold)\n    }, \"Portfolio\"), React.createElement(DashboardLoading, null)));\n  }\n\n  var SOL = getSOL(tokens);\n  return React.createElement(Background, null, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(SubPageHeader, {\n    backButton: false\n  }, \"Dashboard\"), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: 'white',\n      borderRadius: 18,\n      padding: 16\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      marginVertical: 8\n    }, theme.fonts.Azeret_Mono.Body_M_SemiBold)\n  }, \"Portfolio Value\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'flex-end'\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Header_L_Semibold), {}, {\n      marginRight: 4\n    })\n  }, populateDashboard().totalBalance), populateDashboard().percentChange > 0 ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 2\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/icons/Upward_Big.jpg\"),\n    style: {\n      width: 24,\n      height: 24\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      color: theme.colors.success_one\n    }, theme.fonts.Nunito_Sans.Caption_M_SemiBold)\n  }, populateDashboard().percentChange, \"% Today\")) : React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 2\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/icons/Downward_Big.jpg\"),\n    style: {\n      width: 24,\n      height: 24\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      color: theme.colors.error_one\n    }, theme.fonts.Nunito_Sans.Caption_M_SemiBold)\n  }, populateDashboard().percentChange, \"% Today\"))), React.createElement(AreaChart, {\n    style: {\n      height: 200\n    },\n    data: chartData,\n    showGrid: false,\n    animate: true,\n    contentInset: {\n      top: 30,\n      bottom: 30\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    }\n  }, React.createElement(Gradient, null), React.createElement(Line, null))), React.createElement(View, {\n    style: {}\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Azeret_Mono.Body_M_SemiBold), {}, {\n      marginTop: 28,\n      marginBottom: 14,\n      alignItems: 'center',\n      paddingTop: 4,\n      paddingBottom: 1\n    })\n  }, \"My NFTs\"), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 28,\n      marginBottom: 14\n    },\n    onPress: function onPress() {\n      return navigation.navigate('NFT Wallet');\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_Bold), {}, {\n      color: theme.colors.black_four\n    })\n  }, \"See All\"))), React.createElement(View, null, React.createElement(FlatList, {\n    horizontal: true,\n    data: subWalletNftsArray,\n    renderItem: function renderItem(nft) {\n      return React.createElement(NFTcard, {\n        nft: nft,\n        fullCard: false,\n        onPress: function onPress() {\n          return navigation.navigate('NFT Details', nft.index);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.address;\n    }\n  }))), React.createElement(View, {\n    style: {}\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Azeret_Mono.Body_M_SemiBold), {}, {\n      marginBottom: 14\n    })\n  }, \"My Tokens\"), tokens ? React.createElement(FlatList, {\n    data: sortedTokens,\n    renderItem: function renderItem(token) {\n      return React.createElement(TokenCard, {\n        token: token,\n        onPress: function onPress() {\n          return navigation.navigate('Token Details', token.item);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.address;\n    }\n  }) : null)));\n};\n\nvar styles = StyleSheet.create({\n  loaderLabel: {\n    fontFamily: 'AzeretMono_SemiBold',\n    color: 'white',\n    fontSize: 12\n  }\n});\nexport default memo(DashboardScreen2);","map":{"version":3,"sources":["/workspace/stream-pay/screens/DashboardScreen2.tsx"],"names":["React","memo","useState","useEffect","useRef","Background","DashboardLoading","AreaChart","Path","Defs","LinearGradient","Stop","shape","SubPageHeader","theme","TokenListProvider","normalizeNumber","shortenPublicKey","copyToClipboard","getSubWalletsData","getOwnedTokensData","getAllTokensData","getActiveSubWalletTokens","getOwnedNftsData","TokenCard","useStoreState","useStoreActions","NFTcard","Snackbar","useContext","AppContext","DashboardScreen2","navigation","copied","setCopied","chartData","setChartData","modalVisible","setModalVisible","account","setAccount","connection","setConnection","tokens","setTokens","loading","setLoading","tokenMap","state","Map","tokenMapSymbols","setTokenMapSymbols","passcode","allTokens","setAllTokens","actions","ownedTokens","setOwnedTokens","setFirstLoadedTokens","selectedWallet","prev","next","setSelectedWallet","subWallets","setSubWallets","subWalletNftsArray","setSubWalletNftsArray","subWalletTokensArray","setSubWalletTokensArray","tokenPairs","sortedTokens","setSortedTokens","activeSubWallet","setActiveSubWallet","previousActiveSubWallet","myContext","ownedTokensHasRendered","setOwnedTokensHasRendered","snackIsVisible","setSnackIsVisible","onToggleSnackBar","onDismissSnackBar","sortTokens","sort","a","b","price","amount","Line","line","Gradient","getSubWallets","result","getActiveSubWalletOwnedTokens","todayArray","d30Array","d60Array","d90Array","forEach","token","push","price_30d","price_60d","price_90d","sumToday","i","length","sum30","sum60","sum90","today","getOwnedTokens","tokensBySubWallet","getAllTokens","getOwnedNfts","publicKey","populateDashboard","todayTotal","percentChangeFixed","totals","map","item","reduce","current","yesterdayTotals","change","percent_change_24h","multiplier","total","yesterday","yesterdayTotal","percentChange1","toFixed","totalBalance","percentChange","getSOL","sol","find","symbol","console","warn","resolve","then","tokenList","filterByClusterSlug","getList","set","globalActiveWallet","borderWidth","borderRadius","padding","marginBottom","backgroundColor","colors","black_one","flexDirection","justifyContent","require","width","height","marginRight","fonts","Nunito_Sans","Body_M_Bold","color","paddingRight","Caption_M_SemiBold","black_six","toString","borderTopColor","borderTopWidth","marginVertical","alignItems","black_four","marginHorizontal","accent","label","onPress","icon","marginLeft","alignSelf","borderColor","border","black_seven","marginTop","Azeret_Mono","Body_M_SemiBold","SOL","Header_L_Semibold","success_one","error_one","top","bottom","curveNatural","fill","paddingTop","paddingBottom","navigate","nft","index","address","styles","StyleSheet","create","loaderLabel","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect, useCallback, useRef } from 'react';\nimport {\n\tText,\n\tScrollView,\n\tStyleSheet,\n\tAlert,\n\tActivityIndicator,\n} from 'react-native';\nimport { Background, ThemeButton, DashboardLoading } from '../components';\nimport { Button } from 'react-native-paper';\nimport { Navigation } from '../types';\nimport { View, FlatList, Image, TouchableOpacity } from 'react-native';\nimport { AreaChart, Path } from 'react-native-svg-charts';\nimport { Defs, LinearGradient, Stop } from 'react-native-svg';\nimport * as shape from 'd3-shape';\nimport { SubPageHeader } from '../components';\nimport { theme } from '../core/theme';\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\nimport { Account, Connection, PublicKey, Keypair } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { Market } from '@project-serum/serum';\nimport {\n\tfindAssociatedTokenAddress,\n\tgetAccountFromSeed,\n\tDERIVATION_PATH,\n\tnormalizeNumber,\n\tshortenPublicKey,\n\tcopyToClipboard,\n\tgetSubWalletsData,\n\tgetOwnedTokensData,\n\tgetAllTokensData,\n\tsettleFundsData,\n\tgetActiveSubWalletTokens,\n\tgetOwnedNftsData,\n} from '../utils';\nimport { derivePath } from 'ed25519-hd-key';\nimport TokenCard from '../components/TokenCard';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\nimport * as SecureStore from 'expo-secure-store';\nimport Modal from 'react-native-modal';\nimport { Wallet } from '@project-serum/anchor';\nimport { Jupiter } from '@jup-ag/core';\nimport { accountFromSeed, mnemonicToSeed } from '../utils/index';\nimport Storage from '../storage';\nimport { useFocusEffect } from '@react-navigation/core';\nimport NFTcard from '../components/NFTcard';\nimport { Snackbar } from 'react-native-paper';\nimport { useContext } from 'react';\nimport AppContext from '../components/AppContext';\nimport { myNFTsScreen } from '.';\n\ntype Props = {\n\tnavigation: Navigation;\n};\n\nconst DashboardScreen2 = ({ navigation }: Props) => {\n\tconst [copied, setCopied] = useState('');\n\tconst [chartData, setChartData] = useState('');\n\tconst [modalVisible, setModalVisible] = useState(true);\n\tconst [account, setAccount] = useState('');\n\tconst [connection, setConnection] = useState('');\n\tconst [tokens, setTokens] = useState('');\n\tconst [loading, setLoading] = useState(true);\n\tconst tokenMap = useStoreState((state) => state.tokenMap);\n\tconst [tokenMapSymbols, setTokenMapSymbols] = useState<\n\t\tMap<string, TokenInfo>\n\t>(new Map());\n\tconst passcode = useStoreState((state) => state.passcode);\n\tconst allTokens = useStoreState((state) => state.allTokens);\n\tconst setAllTokens = useStoreActions((actions) => actions.setAllTokens);\n\tconst ownedTokens = useStoreState((state) => state.ownedTokens);\n\tconst setOwnedTokens = useStoreActions((actions) => actions.setOwnedTokens);\n\tconst setFirstLoadedTokens = useStoreActions(\n\t\t(actions) => actions.setFirstLoadedTokens,\n\t);\n\tconst selectedWallet = useStoreState(\n\t\t(state) => state.selectedWallet,\n\t\t(prev, next) => prev.selectedWallet === next.selectedWallet,\n\t);\n\tconst setSelectedWallet = useStoreActions(\n\t\t(actions) => actions.setSelectedWallet,\n\t);\n\tconst subWallets = useStoreState((state) => state.subWallets);\n\tconst setSubWallets = useStoreActions((actions) => actions.setSubWallets);\n\tconst subWalletNftsArray = useStoreState(\n\t\t(state) => state.subWalletNftsArray,\n\t);\n\tconst setSubWalletNftsArray = useStoreActions(\n\t\t(actions) => actions.setSubWalletNftsArray,\n\t);\n\tconst subWalletTokensArray = useStoreState(\n\t\t(state) => state.subWalletTokensArray,\n\t);\n\tconst setSubWalletTokensArray = useStoreActions(\n\t\t(actions) => actions.setSubWalletTokensArray,\n\t);\n\tconst tokenPairs = useStoreState((state) => state.tokenPairs);\n\n\tconst [sortedTokens, setSortedTokens] = useState(tokens);\n\tconst activeSubWallet = useStoreState(\n\t\t(state) => state.activeSubWallet,\n\t\t(prev, next) => prev.activeSubWallet === next.activeSubWallet,\n\t);\n\tconst setActiveSubWallet = useStoreActions(\n\t\t(actions) => actions.setActiveSubWallet,\n\t);\n\n\tconst previousActiveSubWallet = useRef(0);\n\n\tconst myContext = useContext(AppContext);\n\n\tconst [ownedTokensHasRendered, setOwnedTokensHasRendered] = useState(false);\n\n\tconst [snackIsVisible, setSnackIsVisible] = useState(false);\n\n\tconst onToggleSnackBar = () => setSnackIsVisible(true);\n\n\tconst onDismissSnackBar = () => setSnackIsVisible(false);\n\n\tfunction sortTokens(tokens) {\n\t\tconst sortedTokens = tokens.sort((a, b) => {\n\t\t\treturn b.price * b.amount - a.price * a.amount;\n\t\t});\n\t\tsetSortedTokens(sortedTokens);\n\t}\n\n\tuseEffect(() => {\n\t\tif (tokens) {\n\t\t\tsortTokens(tokens);\n\t\t}\n\t}, [tokens]);\n\n\t//chart stuff\n\tconst Line = ({ line }) => (\n\t\t<Path key={'line'} d={line} stroke={'black'} fill={'none'} />\n\t);\n\n\tconst Gradient = () => (\n\t\t<Defs key={'defs'}>\n\t\t\t<LinearGradient\n\t\t\t\tid={'gradient'}\n\t\t\t\tx1={'0%'}\n\t\t\t\ty={'0%'}\n\t\t\t\tx2={'0%'}\n\t\t\t\ty2={'100%'}\n\t\t\t>\n\t\t\t\t<Stop\n\t\t\t\t\toffset={'0%'}\n\t\t\t\t\tstopColor={'rgb(222, 249, 119)'}\n\t\t\t\t\tstopOpacity={0.9}\n\t\t\t\t/>\n\t\t\t\t<Stop\n\t\t\t\t\toffset={'100%'}\n\t\t\t\t\tstopColor={'rgb(201, 249, 119)'}\n\t\t\t\t\tstopOpacity={0}\n\t\t\t\t/>\n\t\t\t</LinearGradient>\n\t\t</Defs>\n\t);\n\n\tasync function getSubWallets() {\n\t\tlet result = await getSubWalletsData(passcode);\n\t\tsetSubWallets(result);\n\t}\n\n\tasync function getActiveSubWalletOwnedTokens() {\n\t\tconst tokens = await getActiveSubWalletTokens(\n\t\t\tactiveSubWallet,\n\t\t\tpasscode,\n\t\t\ttokenMap,\n\t\t\ttokenPairs,\n\t\t);\n\t\tsetFirstLoadedTokens(tokens);\n\t\tsetTokens(tokens);\n\t\tlet todayArray = [];\n\t\tlet d30Array = [];\n\t\tlet d60Array = [];\n\t\tlet d90Array = [];\n\t\ttokens.forEach((token) => {\n\t\t\ttodayArray.push(token.price * token.amount);\n\t\t\td30Array.push(token.price_30d * token.amount);\n\t\t\td60Array.push(token.price_60d * token.amount);\n\t\t\td90Array.push(token.price_90d * token.amount);\n\t\t});\n\t\tlet sumToday = 0;\n\t\tfor (let i = 0; i < todayArray.length; i++) {\n\t\t\tsumToday += todayArray[i];\n\t\t}\n\n\t\tlet sum30 = 0;\n\t\tfor (let i = 0; i < d30Array.length; i++) {\n\t\t\tsum30 += d30Array[i];\n\t\t}\n\t\tlet sum60 = 0;\n\t\tfor (let i = 0; i < d60Array.length; i++) {\n\t\t\tsum60 += d60Array[i];\n\t\t}\n\t\tlet sum90 = 0;\n\t\tfor (let i = 0; i < d90Array.length; i++) {\n\t\t\tsum90 += d90Array[i];\n\t\t}\n\n\t\tconst today = setChartData([sum90, sum60, sum30, sumToday]);\n\t\tsetLoading(false);\n\t}\n\n\tasync function getOwnedTokens() {\n\t\tlet result = await getOwnedTokensData(\n\t\t\tsubWallets,\n\t\t\tpasscode,\n\t\t\ttokenMap,\n\t\t\ttokenPairs,\n\t\t);\n\t\tsetSubWalletTokensArray(result.tokensBySubWallet);\n\t\t//deal with setAccount(newAccountArray)\n\t}\n\n\tasync function getAllTokens() {\n\t\tlet result = await getAllTokensData(tokenMapSymbols, tokenPairs);\n\t\tsetAllTokens(result);\n\t}\n\n\tasync function getOwnedNfts() {\n\t\tlet result = await getOwnedNftsData(\n\t\t\tsubWallets[activeSubWallet].publicKey,\n\t\t);\n\t\tsetSubWalletNftsArray(result);\n\t}\n\n\t// async function settleFunds() {\n\t// \tlet result = await settleFundsData(account, Market, connection);\n\n\t// }\n\n\tfunction populateDashboard() {\n\t\t//console.log('popDash')\n\t\tlet todayTotal;\n\t\tlet percentChangeFixed;\n\t\tif (tokens && tokens.length > 0) {\n\t\t\tconst totals = tokens?.map((item) => {\n\t\t\t\treturn item.amount * item.price;\n\t\t\t});\n\n\t\t\ttodayTotal = totals?.reduce((prev, current) => prev + current);\n\t\t\tconst yesterdayTotals = tokens?.map((item) => {\n\t\t\t\tconst change = item.percent_change_24h * 0.01;\n\t\t\t\tlet multiplier = 1 - change;\n\t\t\t\tconst total = item.amount * item.price;\n\t\t\t\tconst yesterday = total * multiplier;\n\n\t\t\t\treturn yesterday;\n\t\t\t});\n\n\t\t\tconst yesterdayTotal = yesterdayTotals?.reduce(\n\t\t\t\t(prev, current) => prev + current,\n\t\t\t);\n\n\t\t\tlet percentChange1 =\n\t\t\t\t((todayTotal - yesterdayTotal) / todayTotal) * 100;\n\t\t\tpercentChangeFixed = percentChange1.toFixed(1);\n\t\t}\n\t\treturn {\n\t\t\ttotalBalance: normalizeNumber(todayTotal),\n\t\t\tpercentChange: percentChangeFixed,\n\t\t};\n\t}\n\n\tfunction getSOL(tokens) {\n\t\tconst sol = tokens.find((token: object) => {\n\t\t\tif (token.symbol === 'SOL') {\n\t\t\t\treturn token;\n\t\t\t}\n\t\t});\n\t\treturn sol;\n\t}\n\n\tuseEffect(() => {\n\t\tif (subWalletTokensArray) {\n\t\t\tif (subWalletTokensArray[activeSubWallet]) {\n\t\t\t\tsetOwnedTokens(subWalletTokensArray[activeSubWallet]);\n\t\t\t}\n\t\t}\n\t}, [subWalletTokensArray, activeSubWallet]);\n\n\tuseEffect(() => {\n\t\tif (tokens) {\n\t\t\tgetAllTokens();\n\t\t}\n\t\tif (!subWallets) {\n\t\t\tgetSubWallets();\n\t\t}\n\t\tgetOwnedNfts();\n\t}, [tokens]);\n\n\tuseEffect(() => {\n\t\tif (tokenMap && !tokens) {\n\t\t\tconsole.warn('hit selected wallet');\n\t\t\tgetActiveSubWalletOwnedTokens();\n\t\t}\n\t}, [tokenMap]);\n\n\tuseEffect(() => {\n\t\tif (tokenMap && subWallets && tokens && !ownedTokensHasRendered) {\n\t\t\tgetOwnedTokens();\n\t\t\tsetOwnedTokensHasRendered(true);\n\t\t}\n\t}, [tokenMap, subWallets, tokens]);\n\n\tuseEffect(() => {\n\t\tnew TokenListProvider().resolve().then((tokens) => {\n\t\t\tconst tokenList = tokens\n\t\t\t\t.filterByClusterSlug('mainnet-beta')\n\t\t\t\t.getList();\n\n\t\t\tsetTokenMapSymbols(\n\t\t\t\ttokenList?.reduce((map, item) => {\n\t\t\t\t\tmap.set(item.symbol, item);\n\t\t\t\t\treturn map;\n\t\t\t\t}, new Map()),\n\t\t\t);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (previousActiveSubWallet.current !== myContext.globalActiveWallet) {\n\t\t\tpopulateDashboard();\n\t\t\tgetActiveSubWalletOwnedTokens();\n\t\t\tpreviousActiveSubWallet.current = myContext.globalActiveWallet;\n\t\t}\n\t}, [myContext.globalActiveWallet]);\n\n\tif (!loading && tokens.length === 0 && account) {\n\t\treturn (\n\t\t\t<Background>\n\t\t\t\t<ScrollView showsVerticalScrollIndicator={false}>\n\t\t\t\t\t<SubPageHeader backButton={false}>Dashboard</SubPageHeader>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t// borderColor: theme.colors.border,\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\tbackgroundColor: theme.colors.black_one,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('../assets/icons/wallet_green.png')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 40,\n\t\t\t\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\t\t\t\tborderRadius: 100,\n\t\t\t\t\t\t\t\t\t\tmarginRight: 16,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t\t.Body_M_Bold,\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 16,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSend tokens to your wallet to get\n\t\t\t\t\t\t\t\t\t\tstarted\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t\t.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\t\t\tcolor: theme.colors.black_six,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tStart by copying your Wallet Address\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t\t.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\t\t\tcolor: theme.colors.black_six,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t{shortenPublicKey(\n\t\t\t\t\t\t\t\t\t\t\tsubWallets[\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSubWallet\n\t\t\t\t\t\t\t\t\t\t\t].publicKey.toString('hex'),\n\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t\t\t\t-8,\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderTopColor: theme.colors.black_six,\n\t\t\t\t\t\t\t\tborderTopWidth: 1,\n\t\t\t\t\t\t\t\tmarginVertical: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{ flexDirection: 'row' }}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tcopyToClipboard(\n\t\t\t\t\t\t\t\t\tsubWallets[\n\t\t\t\t\t\t\t\t\t\tactiveSubWallet\n\t\t\t\t\t\t\t\t\t].publicKey.toString('hex'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tonToggleSnackBar();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Bold,\n\t\t\t\t\t\t\t\t\tcolor: '#1a374d',\n\t\t\t\t\t\t\t\t\tmarginRight: 4,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCopy Wallet Address\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderTopColor: theme.colors.black_six,\n\t\t\t\t\t\t\tborderTopWidth: 1,\n\t\t\t\t\t\t\tmarginVertical: 16,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<View style={{ alignItems: 'center', padding: 24 }}>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsource={require('../assets/icons/chart_logo_small.png')}\n\t\t\t\t\t\t\tstyle={{ width: 40, height: 40, marginBottom: 16 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={{ color: theme.colors.black_four }}>\n\t\t\t\t\t\t\tNo tokens belong to this address.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\tmarginHorizontal: -8,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tvisible={snackIsVisible}\n\t\t\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\t\t\ttheme={{ colors: { accent: '#FFFFFF' } }}\n\t\t\t\t\t\taction={{\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tonPress: async () => {\n\t\t\t\t\t\t\t\tsetSnackIsVisible(false);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ticon: () => (\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('../assets/icons/close_white.png')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 14,\n\t\t\t\t\t\t\t\t\t\theight: 14,\n\t\t\t\t\t\t\t\t\t\tmarginRight: 4,\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 85,\n\t\t\t\t\t\t\t\t\t\tmarginVertical: 4,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\t\theight: 56,\n\t\t\t\t\t\t\talignSelf: 'stretch',\n\t\t\t\t\t\t\tbackgroundColor: '#1E2122',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: '#FFFFFF',\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Caption_M_SemiBold,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAddress Copied!\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t</View>\n\t\t\t</Background>\n\t\t);\n\t}\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<Background>\n\t\t\t\t<SubPageHeader backButton={false}>Dashboard</SubPageHeader>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tborderColor: theme.colors.border,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: 140,\n\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\tborderRadius: 4,\n\t\t\t\t\t\t\tbackgroundColor: theme.colors.black_seven,\n\t\t\t\t\t\t\tmarginBottom: 24,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: 70,\n\t\t\t\t\t\t\t\theight: 32,\n\t\t\t\t\t\t\t\tborderRadius: 4,\n\t\t\t\t\t\t\t\tbackgroundColor: theme.colors.black_seven,\n\t\t\t\t\t\t\t\tmarginRight: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: 85,\n\t\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\t\tborderRadius: 4,\n\t\t\t\t\t\t\t\tbackgroundColor: theme.colors.black_seven,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{ marginVertical: 48 }}>\n\t\t\t\t\t\t<ActivityIndicator />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ marginTop: 24, marginBottom: 8 }}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t...theme.fonts.Azeret_Mono.Body_M_SemiBold,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPortfolio\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<DashboardLoading />\n\t\t\t\t</View>\n\t\t\t</Background>\n\t\t);\n\t}\n\n\tconst SOL = getSOL(tokens);\n\n\treturn (\n\t\t<Background>\n\t\t\t<ScrollView showsVerticalScrollIndicator={false}>\n\t\t\t\t<SubPageHeader backButton={false}>Dashboard</SubPageHeader>\n\t\t\t\t{/* {SOL ? (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t// borderColor: theme.colors.border,\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\tbackgroundColor: theme.colors.black_one,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('Stake', SOL)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('../assets/icons/green_trophy.png')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 40,\n\t\t\t\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\t\t\t\tborderRadius: 100,\n\t\t\t\t\t\t\t\t\t\tmarginRight: 16,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t\t.Body_M_Bold,\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 16,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEarn interest on your SOL\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t\t.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\t\t\tcolor: theme.colors.black_six,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEarn 8% interest for holding\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tsource={require('../assets/icons/Chevron_Up_White.png')}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 24,\n\t\t\t\t\t\t\t\t\theight: 24,\n\t\t\t\t\t\t\t\t\tborderRadius: 100,\n\t\t\t\t\t\t\t\t\tmarginRight: 16,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t) : null} */}\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.border,\n\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginVertical: 8,\n\t\t\t\t\t\t\t...theme.fonts.Azeret_Mono.Body_M_SemiBold,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPortfolio Value\n\t\t\t\t\t</Text>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{ flexDirection: 'row', alignItems: 'flex-end' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Header_L_Semibold,\n\t\t\t\t\t\t\t\tmarginRight: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{populateDashboard().totalBalance}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t{populateDashboard().percentChange > 0 ? (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tmarginBottom: 2,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('../assets/icons/Upward_Big.jpg')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 24,\n\t\t\t\t\t\t\t\t\t\theight: 24,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: theme.colors.success_one,\n\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{populateDashboard().percentChange}% Today\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tmarginBottom: 2,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('../assets/icons/Downward_Big.jpg')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 24,\n\t\t\t\t\t\t\t\t\t\theight: 24,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: theme.colors.error_one,\n\t\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans\n\t\t\t\t\t\t\t\t\t\t\t.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{populateDashboard().percentChange}% Today\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</View>\n\t\t\t\t\t<AreaChart\n\t\t\t\t\t\tstyle={{ height: 200 }}\n\t\t\t\t\t\tdata={chartData}\n\t\t\t\t\t\t// data={[1, 2, 3, 4]}\n\t\t\t\t\t\tshowGrid={false}\n\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\tcontentInset={{ top: 30, bottom: 30 }}\n\t\t\t\t\t\tcurve={shape.curveNatural}\n\t\t\t\t\t\tsvg={{\n\t\t\t\t\t\t\tfill: 'url(#gradient)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Gradient />\n\t\t\t\t\t\t<Line />\n\t\t\t\t\t</AreaChart>\n\t\t\t\t</View>\n\t\t\t\t<View style={{}}>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Azeret_Mono.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginTop: 28,\n\t\t\t\t\t\t\t\tmarginBottom: 14,\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tpaddingTop: 4,\n\t\t\t\t\t\t\t\tpaddingBottom: 1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMy NFTs\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{ marginTop: 28, marginBottom: 14 }}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('NFT Wallet')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Bold,\n\t\t\t\t\t\t\t\t\tcolor: theme.colors.black_four,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSee All\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\thorizontal={true}\n\t\t\t\t\t\t\tdata={subWalletNftsArray}\n\t\t\t\t\t\t\trenderItem={(nft) => (\n\t\t\t\t\t\t\t\t<NFTcard\n\t\t\t\t\t\t\t\t\tnft={nft}\n\t\t\t\t\t\t\t\t\tfullCard={false}\n\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\tnavigation.navigate(\n\t\t\t\t\t\t\t\t\t\t\t'NFT Details',\n\t\t\t\t\t\t\t\t\t\t\tnft.index,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tkeyExtractor={(item) => item.address}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={{}}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...theme.fonts.Azeret_Mono.Body_M_SemiBold,\n\t\t\t\t\t\t\tmarginBottom: 14,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tMy Tokens\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t{tokens ? (\n\t\t\t\t\t\t<FlatList\n\t\t\t\t\t\t\tdata={sortedTokens}\n\t\t\t\t\t\t\trenderItem={(token) => (\n\t\t\t\t\t\t\t\t<TokenCard\n\t\t\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\tnavigation.navigate(\n\t\t\t\t\t\t\t\t\t\t\t'Token Details',\n\t\t\t\t\t\t\t\t\t\t\ttoken.item,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t// renderItem={TokenCard}\n\t\t\t\t\t\t\tkeyExtractor={(item) => item.address}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t</Background>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tloaderLabel: {\n\t\tfontFamily: 'AzeretMono_SemiBold',\n\t\tcolor: 'white',\n\t\tfontSize: 12,\n\t},\n});\n\nexport default memo(DashboardScreen2);\n"]},"metadata":{},"sourceType":"module"}