{"ast":null,"code":"import React, { memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    }\n  }, children);\n};\n\nvar Background = function Background(_ref2) {\n  var children = _ref2.children,\n      position = _ref2.position,\n      _ref2$blackBackground = _ref2.blackBackground,\n      blackBackground = _ref2$blackBackground === void 0 ? false : _ref2$blackBackground,\n      _ref2$dismissKeyboard = _ref2.dismissKeyboard,\n      dismissKeyboard = _ref2$dismissKeyboard === void 0 ? false : _ref2$dismissKeyboard,\n      _ref2$fullView = _ref2.fullView,\n      fullView = _ref2$fullView === void 0 ? false : _ref2$fullView;\n  return dismissKeyboard ? React.createElement(DismissKeyboard, null, React.createElement(View, {\n    style: [{\n      backgroundColor: 'white',\n      height: '100%',\n      flex: 1\n    }, blackBackground && {\n      backgroundColor: 'black'\n    }, {\n      paddingTop: 24\n    }]\n  }, fullView ? React.createElement(KeyboardAvoidingView, {\n    style: styles.containerNftDisplay\n  }, children) : React.createElement(KeyboardAvoidingView, {\n    style: styles.container\n  }, children))) : React.createElement(View, {\n    style: [{\n      backgroundColor: 'white',\n      height: '100%',\n      flex: 1\n    }, blackBackground && {\n      backgroundColor: 'black'\n    }, {\n      paddingTop: 24\n    }]\n  }, fullView ? React.createElement(KeyboardAvoidingView, {\n    style: styles.containerNftDisplay\n  }, children) : React.createElement(KeyboardAvoidingView, {\n    style: styles.container\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingBottom: 0,\n    width: '100%',\n    justifyContent: 'space-between'\n  },\n  containerNftDisplay: {\n    flex: 1,\n    padding: 0,\n    paddingBottom: 0,\n    width: '100%',\n    justifyContent: 'space-between'\n  },\n  bottom: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default memo(Background);","map":{"version":3,"sources":["/workspace/stream-pay/components/Background.tsx"],"names":["React","memo","DismissKeyboard","children","Keyboard","dismiss","Background","position","blackBackground","dismissKeyboard","fullView","backgroundColor","height","flex","paddingTop","styles","containerNftDisplay","container","StyleSheet","create","padding","paddingBottom","width","justifyContent","bottom"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;;;;;AAmBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACvB,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA;AAAnC,KACEF,QADF,CADuB;AAAA,CAAxB;;AAMA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MAClBH,QADkB,SAClBA,QADkB;AAAA,MAElBI,QAFkB,SAElBA,QAFkB;AAAA,oCAGlBC,eAHkB;AAAA,MAGlBA,eAHkB,sCAGA,KAHA;AAAA,oCAIlBC,eAJkB;AAAA,MAIlBA,eAJkB,sCAIA,KAJA;AAAA,6BAKlBC,QALkB;AAAA,MAKlBA,QALkB,+BAKP,KALO;AAAA,SAQlBD,eAAe,GACd,oBAAC,eAAD,QACC,oBAAC,IAAD;AACC,IAAA,KAAK,EAAE,CACN;AAAEE,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAE,MAApC;AAA4CC,MAAAA,IAAI,EAAE;AAAlD,KADM,EAENL,eAAe,IAAI;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAFb,EAGN;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAHM;AADR,KAOEJ,QAAQ,GACR,oBAAC,oBAAD;AACC,IAAA,KAAK,EAAEK,MAAM,CAACC;AADf,KAGEb,QAHF,CADQ,GAOR,oBAAC,oBAAD;AACC,IAAA,KAAK,EAAEY,MAAM,CAACE;AADf,KAGEd,QAHF,CAdF,CADD,CADc,GAyBd,oBAAC,IAAD;AACC,IAAA,KAAK,EAAE,CACN;AAAEQ,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAE,MAApC;AAA4CC,MAAAA,IAAI,EAAE;AAAlD,KADM,EAENL,eAAe,IAAI;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAFb,EAGN;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAHM;AADR,KAOEJ,QAAQ,GACR,oBAAC,oBAAD;AACC,IAAA,KAAK,EAAEK,MAAM,CAACC;AADf,KAGEb,QAHF,CADQ,GAOR,oBAAC,oBAAD;AACC,IAAA,KAAK,EAAEY,MAAM,CAACE;AADf,KAGEd,QAHF,CAdF,CAjCiB;AAAA,CAAnB;;AAwDA,IAAMY,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,SAAS,EAAE;AACVJ,IAAAA,IAAI,EAAE,CADI;AAEVO,IAAAA,OAAO,EAAE,EAFC;AAGVC,IAAAA,aAAa,EAAE,CAHL;AAKVC,IAAAA,KAAK,EAAE,MALG;AASVC,IAAAA,cAAc,EAAE;AATN,GADqB;AAahCP,EAAAA,mBAAmB,EAAE;AACpBH,IAAAA,IAAI,EAAE,CADc;AAEpBO,IAAAA,OAAO,EAAE,CAFW;AAGpBC,IAAAA,aAAa,EAAE,CAHK;AAKpBC,IAAAA,KAAK,EAAE,MALa;AASpBC,IAAAA,cAAc,EAAE;AATI,GAbW;AA0BhCC,EAAAA,MAAM,EAAE;AACPD,IAAAA,cAAc,EAAE;AADT;AA1BwB,CAAlB,CAAf;AA+BA,eAAetB,IAAI,CAACK,UAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport {\n\tImageBackground,\n\tStyleSheet,\n\tKeyboardAvoidingView,\n\tSafeAreaView,\n\tView,\n\tScrollView,\n\tTouchableWithoutFeedback,\n\tKeyboard,\n} from 'react-native';\n\ntype Props = {\n\tchildren: React.ReactNode;\n\tposition?: String;\n\tblackBackground: boolean;\n\tfullView: boolean;\n};\n\nconst DismissKeyboard = ({ children }) => (\n\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n\t\t{children}\n\t</TouchableWithoutFeedback>\n);\n\nconst Background = ({\n\tchildren,\n\tposition,\n\tblackBackground = false,\n\tdismissKeyboard = false,\n\tfullView = false,\n\n}: Props) =>\n\tdismissKeyboard ? (\n\t\t<DismissKeyboard>\n\t\t\t<View\n\t\t\t\tstyle={[\n\t\t\t\t\t{ backgroundColor: 'white', height: '100%', flex: 1 },\n\t\t\t\t\tblackBackground && { backgroundColor: 'black' },\n\t\t\t\t\t{ paddingTop: 24 },\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{fullView ? (\n\t\t\t\t\t<KeyboardAvoidingView\n\t\t\t\t\t\tstyle={styles.containerNftDisplay}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</KeyboardAvoidingView>\n\t\t\t\t): (\n\t\t\t\t\t<KeyboardAvoidingView\n\t\t\t\t\t\tstyle={styles.container}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</KeyboardAvoidingView>\n\t\t\t\t)}\t\n\t\t\t</View>\n\t\t</DismissKeyboard>\n\t) : (\n\t\t<View\n\t\t\tstyle={[\n\t\t\t\t{ backgroundColor: 'white', height: '100%', flex: 1 },\n\t\t\t\tblackBackground && { backgroundColor: 'black' },\n\t\t\t\t{ paddingTop: 24 },\n\t\t\t]}\n\t\t>\n\t\t\t{fullView ? (\n\t\t\t\t<KeyboardAvoidingView\n\t\t\t\t\tstyle={styles.containerNftDisplay}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</KeyboardAvoidingView>\n\t\t\t): (\n\t\t\t\t<KeyboardAvoidingView\n\t\t\t\t\tstyle={styles.container}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</KeyboardAvoidingView>\n\t\t\t)}\t\n\t\t</View>\n\t);\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 16,\n\t\tpaddingBottom: 0,\n\t\t// paddingBottom: 32,\n\t\twidth: '100%',\n\t\t// maxWidth: 340,\n\t\t// alignSelf: \"center\",\n\t\t// alignItems: \"center\",\n\t\tjustifyContent: 'space-between',\n\t\t// backgroundColor: 'white',\n\t},\n\tcontainerNftDisplay: {\n\t\tflex: 1,\n\t\tpadding: 0,\n\t\tpaddingBottom: 0,\n\t\t// paddingBottom: 32,\n\t\twidth: '100%',\n\t\t// maxWidth: 340,\n\t\t// alignSelf: \"center\",\n\t\t// alignItems: \"center\",\n\t\tjustifyContent: 'space-between',\n\t\t// backgroundColor: 'white',\n\t},\n\n\tbottom: {\n\t\tjustifyContent: 'flex-end',\n\t},\n});\n\nexport default memo(Background);\n"]},"metadata":{},"sourceType":"module"}