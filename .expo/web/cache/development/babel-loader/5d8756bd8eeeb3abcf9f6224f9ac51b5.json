{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useEffect } from 'react';\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport { Background } from \"../components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SubPageHeader } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport TokenCard from \"../components/TokenCard\";\nimport { useStoreState } from \"../hooks/storeHooks\";\n\nvar SearchTokensScreen = function SearchTokensScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  console.log('route.params', route.params);\n  var pair = route.params.pair;\n  var setPair = route.params.setPair;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var allTokens = useStoreState(function (state) {\n    return state.allTokens;\n  });\n  var ownedTokens = useStoreState(function (state) {\n    return state.ownedTokens;\n  });\n  var firstLoadedTokens = useStoreState(function (state) {\n    return state.firstLoadedTokens;\n  });\n  var activeSubWallet = useStoreState(function (state) {\n    return state.activeSubWallet;\n  });\n\n  var _useState3 = useState(ownedTokens),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredTokens = _useState4[0],\n      setFilteredTokens = _useState4[1];\n\n  var searchFilter = function searchFilter() {\n    if (activeSubWallet === 0) {\n      return firstLoadedTokens.filter(function (token) {\n        return token.symbol.toLowerCase().includes(search.toLowerCase()) || token.name.toLowerCase().includes(search.toLowerCase());\n      });\n    }\n\n    return ownedTokens[activeSubWallet].filter(function (token) {\n      return token.symbol.toLowerCase().includes(search.toLowerCase()) || token.name.toLowerCase().includes(search.toLowerCase());\n    });\n  };\n\n  function getDefaultPairToken() {\n    var hasUSDC, usdcToken, symbol1, symbol2, otherToken, otherToken2;\n    return _regeneratorRuntime.async(function getDefaultPairToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            hasUSDC = pair.to.pairs.find(function (pair) {\n              return pair.symbol === 'USDC';\n            });\n\n            if (!hasUSDC) {\n              _context.next = 6;\n              break;\n            }\n\n            usdcToken = allTokens.find(function (token) {\n              return token.symbol === 'USDC';\n            });\n            return _context.abrupt(\"return\", usdcToken);\n\n          case 6:\n            symbol1 = pair.to.pairs[0].symbol;\n            symbol2 = pair.to.pairs[1].symbol;\n            otherToken = allTokens.find(function (token) {\n              return token.symbol === symbol1;\n            });\n            otherToken2 = allTokens.find(function (token) {\n              return token.symbol === symbol2;\n            });\n\n            if (!otherToken) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", otherToken);\n\n          case 14:\n            return _context.abrupt(\"return\", otherToken2);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    setFilteredTokens(searchFilter());\n  }, [search]);\n  return React.createElement(Background, {\n    dismissKeyboard: true\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 24\n    }\n  }, React.createElement(SubPageHeader, {\n    backButton: true\n  }, \"Select From Token\"), React.createElement(View, {\n    style: {\n      height: 64,\n      borderWidth: 1,\n      borderColor: theme.colors.black_seven,\n      borderRadius: 18,\n      padding: 16,\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/icons/Search.png\"),\n    style: {\n      width: 24,\n      height: 24,\n      marginRight: 8\n    }\n  }), React.createElement(TextInputRN, {\n    style: _objectSpread({\n      borderColor: 'black',\n      borderWidth: 0\n    }, theme.fonts.Nunito_Sans.Body_M_Regular),\n    onChangeText: function onChangeText(text) {\n      return setSearch(text);\n    },\n    value: search,\n    placeholder: \"Search token name or symbol\",\n    keyboardType: \"default\"\n  }))), filteredTokens ? React.createElement(FlatList, {\n    data: filteredTokens,\n    renderItem: function renderItem(token) {\n      return React.createElement(TokenCard, {\n        token: token,\n        onPress: function onPress() {\n          if (pair.to.pairs.find(function (el) {\n            return el.symbol === token.item.symbol;\n          })) {\n            setPair(_objectSpread(_objectSpread({}, pair), {}, {\n              from: token.item\n            }));\n            return navigation.navigate('Trade', {\n              from: token.item,\n              to: pair.to\n            });\n          } else {\n            setPair(_objectSpread(_objectSpread({}, pair), {}, {\n              from: token.item,\n              to: getDefaultPairToken()\n            }));\n            return navigation.navigate('Trade', {\n              from: token.item,\n              to: pair.to\n            });\n          }\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.address;\n    }\n  }) : null);\n};\n\nexport default memo(SearchTokensScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/FromTokenScreen.tsx"],"names":["React","memo","useState","useEffect","Background","SubPageHeader","theme","TokenCard","useStoreState","SearchTokensScreen","navigation","route","console","log","params","pair","setPair","search","setSearch","allTokens","state","ownedTokens","firstLoadedTokens","activeSubWallet","filteredTokens","setFilteredTokens","searchFilter","filter","token","symbol","toLowerCase","includes","name","getDefaultPairToken","hasUSDC","to","pairs","find","usdcToken","symbol1","symbol2","otherToken","otherToken2","marginBottom","height","borderWidth","borderColor","colors","black_seven","borderRadius","padding","flexDirection","alignItems","require","width","marginRight","fonts","Nunito_Sans","Body_M_Regular","text","el","item","from","navigate","address"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport { Text, TouchableOpacity, TextInput as TextInputRN } from 'react-native';\nimport { Background, TextInput } from '../components';\nimport { Navigation } from '../types';\nimport { View, FlatList, Image } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { SubPageHeader } from '../components';\nimport { theme } from '../core/theme';\nimport TokenCard from '../components/TokenCard';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\n\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\nimport Colors from '../constants/Colors';\n\ntype Props = {\n\tnavigation: Navigation;\n\troute: Object;\n};\n\nconst SearchTokensScreen = ({ navigation, route }: Props) => {\n\tconsole.log('route.params', route.params);\n\tconst pair = route.params.pair;\n\tconst setPair = route.params.setPair;\n\tconst [search, setSearch] = useState('');\n\tconst allTokens = useStoreState((state) => state.allTokens);\n\tconst ownedTokens = useStoreState((state) => state.ownedTokens);\n\tconst firstLoadedTokens = useStoreState((state) => state.firstLoadedTokens);\n\tconst activeSubWallet = useStoreState((state) => state.activeSubWallet);\n\n\tconst [filteredTokens, setFilteredTokens] = useState(ownedTokens);\n\n\tconst searchFilter = () => {\n\t\tif (activeSubWallet === 0) {\n\t\t\treturn firstLoadedTokens.filter((token) => {\n\t\t\t\treturn (\n\t\t\t\t\ttoken.symbol.toLowerCase().includes(search.toLowerCase()) ||\n\t\t\t\t\ttoken.name.toLowerCase().includes(search.toLowerCase())\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn ownedTokens[activeSubWallet].filter((token) => {\n\t\t\treturn (\n\t\t\t\ttoken.symbol.toLowerCase().includes(search.toLowerCase()) ||\n\t\t\t\ttoken.name.toLowerCase().includes(search.toLowerCase())\n\t\t\t);\n\t\t});\n\t};\n\n\tasync function getDefaultPairToken() {\n\t\tconst hasUSDC = pair.to.pairs.find(\n\t\t\t(pair: object) => pair.symbol === 'USDC',\n\t\t);\n\t\tif (hasUSDC) {\n\t\t\tconst usdcToken = allTokens.find(\n\t\t\t\t(token: object) => token.symbol === 'USDC',\n\t\t\t);\n\t\t\treturn usdcToken;\n\t\t} else {\n\t\t\tconst symbol1 = pair.to.pairs[0].symbol;\n\t\t\tconst symbol2 = pair.to.pairs[1].symbol;\n\t\t\tconst otherToken = allTokens.find(\n\t\t\t\t(token: object) => token.symbol === symbol1,\n\t\t\t);\n\t\t\tconst otherToken2 = allTokens.find(\n\t\t\t\t(token: object) => token.symbol === symbol2,\n\t\t\t);\n\t\t\tif (otherToken) {\n\t\t\t\treturn otherToken;\n\t\t\t} else {\n\t\t\t\treturn otherToken2;\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetFilteredTokens(searchFilter());\n\t}, [search]);\n\n\treturn (\n\t\t<Background dismissKeyboard={true}>\n\t\t\t<View style={{ marginBottom: 24 }}>\n\t\t\t\t<SubPageHeader backButton={true}>\n\t\t\t\t\tSelect From Token\n\t\t\t\t</SubPageHeader>\n\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: 64,\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.black_seven,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsource={require('../assets/icons/Search.png')}\n\t\t\t\t\t\tstyle={{ width: 24, height: 24, marginRight: 8 }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<TextInputRN\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Regular,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChangeText={(text: string) => setSearch(text)}\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tplaceholder=\"Search token name or symbol\"\n\t\t\t\t\t\tkeyboardType=\"default\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t{filteredTokens ? (\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={filteredTokens}\n\t\t\t\t\trenderItem={(token) => (\n\t\t\t\t\t\t<TokenCard\n\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tpair.to.pairs.find(\n\t\t\t\t\t\t\t\t\t\t(el) => el.symbol === token.item.symbol,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tsetPair({\n\t\t\t\t\t\t\t\t\t\t...pair,\n\t\t\t\t\t\t\t\t\t\tfrom: token.item,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn navigation.navigate('Trade', {\n\t\t\t\t\t\t\t\t\t\tfrom: token.item,\n\t\t\t\t\t\t\t\t\t\tto: pair.to,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetPair({\n\t\t\t\t\t\t\t\t\t\t...pair,\n\t\t\t\t\t\t\t\t\t\tfrom: token.item,\n\t\t\t\t\t\t\t\t\t\tto: getDefaultPairToken(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn navigation.navigate('Trade', {\n\t\t\t\t\t\t\t\t\t\tfrom: token.item,\n\t\t\t\t\t\t\t\t\t\tto: pair.to,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tkeyExtractor={(item) => item.address}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</Background>\n\t);\n};\n\nexport default memo(SearchTokensScreen);\n"]},"metadata":{},"sourceType":"module"}