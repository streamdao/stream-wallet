{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState, useEffect } from 'react';\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport { Background } from \"../components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SubPageHeader } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport TokenCard from \"../components/TokenCard\";\nimport { useStoreState } from \"../hooks/storeHooks\";\n\nvar SearchTokensScreen = function SearchTokensScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var allTokens = useStoreState(function (state) {\n    return state.allTokens;\n  });\n  var ownedTokens = useStoreState(function (state) {\n    return state.ownedTokens;\n  });\n\n  var _useState3 = useState(allTokens),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredTokens = _useState4[0],\n      setFilteredTokens = _useState4[1];\n\n  var searchFilter = function searchFilter(allTokens) {\n    return allTokens.filter(function (token) {\n      return token.symbol.toLowerCase().includes(search.toLowerCase()) || token.name.toLowerCase().includes(search.toLowerCase());\n    });\n  };\n\n  useEffect(function () {\n    setFilteredTokens(searchFilter(allTokens));\n  }, [search]);\n  return React.createElement(Background, {\n    dismissKeyboard: true\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 24\n    }\n  }, React.createElement(SubPageHeader, {\n    backButton: true\n  }, \"Select To Token\"), React.createElement(View, {\n    style: {\n      height: 64,\n      borderWidth: 1,\n      borderColor: theme.colors.black_seven,\n      borderRadius: 18,\n      padding: 16,\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/icons/Search.png\"),\n    style: {\n      width: 24,\n      height: 24,\n      marginRight: 8\n    }\n  }), React.createElement(TextInputRN, {\n    style: _objectSpread({\n      borderColor: 'black',\n      borderWidth: 0\n    }, theme.fonts.Nunito_Sans.Body_M_Regular),\n    onChangeText: function onChangeText(text) {\n      return setSearch(text);\n    },\n    value: search,\n    placeholder: \"Search token name or symbol\",\n    keyboardType: \"default\"\n  }))), filteredTokens ? React.createElement(FlatList, {\n    data: filteredTokens,\n    renderItem: function renderItem(token) {\n      return React.createElement(TokenCard, {\n        token: token,\n        onPress: function onPress() {\n          route.params.setPair(_objectSpread(_objectSpread({}, route.params.pair), {}, {\n            to: token.item\n          }));\n          return navigation.navigate('Trade', {\n            from: route.params.pair.from,\n            to: token.item\n          });\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.address;\n    }\n  }) : null);\n};\n\nexport default memo(SearchTokensScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/ToTokenScreen.tsx"],"names":["React","memo","useState","useEffect","Background","SubPageHeader","theme","TokenCard","useStoreState","SearchTokensScreen","navigation","route","search","setSearch","allTokens","state","ownedTokens","filteredTokens","setFilteredTokens","searchFilter","filter","token","symbol","toLowerCase","includes","name","marginBottom","height","borderWidth","borderColor","colors","black_seven","borderRadius","padding","flexDirection","alignItems","require","width","marginRight","fonts","Nunito_Sans","Body_M_Regular","text","params","setPair","pair","to","item","navigate","from","address"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport { Text, TouchableOpacity, TextInput as TextInputRN } from 'react-native';\nimport { Background, TextInput } from '../components';\nimport { Navigation } from '../types';\nimport { View, FlatList, Image } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { SubPageHeader } from '../components';\nimport { theme } from '../core/theme';\nimport TokenCard from '../components/TokenCard';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\n\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\nimport Colors from '../constants/Colors';\n\ntype Props = {\n\tnavigation: Navigation;\n};\n\nconst SearchTokensScreen = ({ navigation, route }: Props) => {\n\tconst [search, setSearch] = useState('');\n\tconst allTokens = useStoreState((state) => state.allTokens);\n\tconst ownedTokens = useStoreState((state) => state.ownedTokens);\n\tconst [filteredTokens, setFilteredTokens] = useState(allTokens);\n\n\tconst searchFilter = (allTokens: Array<object>) => {\n\t\treturn allTokens.filter((token) => {\n\t\t\treturn (\n\t\t\t\ttoken.symbol.toLowerCase().includes(search.toLowerCase()) ||\n\t\t\t\ttoken.name.toLowerCase().includes(search.toLowerCase())\n\t\t\t);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tsetFilteredTokens(searchFilter(allTokens));\n\t}, [search]);\n\n\treturn (\n\t\t<Background dismissKeyboard={true}>\n\t\t\t<View style={{ marginBottom: 24 }}>\n\t\t\t\t<SubPageHeader backButton={true}>Select To Token</SubPageHeader>\n\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: 64,\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.black_seven,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsource={require('../assets/icons/Search.png')}\n\t\t\t\t\t\tstyle={{ width: 24, height: 24, marginRight: 8 }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<TextInputRN\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Regular,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChangeText={(text: string) => setSearch(text)}\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tplaceholder=\"Search token name or symbol\"\n\t\t\t\t\t\tkeyboardType=\"default\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t{filteredTokens ? (\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={filteredTokens}\n\t\t\t\t\trenderItem={(token) => (\n\t\t\t\t\t\t<TokenCard\n\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\troute.params.setPair({\n\t\t\t\t\t\t\t\t\t...route.params.pair,\n\t\t\t\t\t\t\t\t\tto: token.item,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn navigation.navigate('Trade', {\n\t\t\t\t\t\t\t\t\tfrom: route.params.pair.from,\n\t\t\t\t\t\t\t\t\tto: token.item,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tkeyExtractor={(item) => item.address}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</Background>\n\t);\n};\n\nexport default memo(SearchTokensScreen);\n"]},"metadata":{},"sourceType":"module"}