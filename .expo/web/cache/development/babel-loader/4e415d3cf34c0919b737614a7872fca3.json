{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useMemo, useRef, useCallback } from 'react';\nimport { Background, SubPageHeader, Callout, ThemeButton } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { BottomSheetModal, BottomSheetModalProvider } from '@gorhom/bottom-sheet';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Clipboard from 'expo-clipboard';\nimport * as SecureStore from 'expo-secure-store';\nimport { useStoreState } from \"../hooks/storeHooks\";\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return console.log('hello');\n    }\n  }, children);\n};\n\nvar ImportWalletScreen = function ImportWalletScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      secret = _useState4[0],\n      setSecret = _useState4[1];\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copiedText = _React$useState2[0],\n      setCopiedText = _React$useState2[1];\n\n  var passcode = useStoreState(function (state) {\n    return state.passcode;\n  });\n\n  function storePhraseAndContinue(passcode, phrase) {\n    return _regeneratorRuntime.async(function storePhraseAndContinue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(passcode, phrase));\n\n          case 2:\n            navigation.navigate('Main');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function wordCount(str) {\n    return str.split(' ').length;\n  }\n\n  var copyToClipboard = function copyToClipboard() {\n    Clipboard.setString('hello world');\n  };\n\n  var fetchCopiedText = function fetchCopiedText() {\n    var text;\n    return _regeneratorRuntime.async(function fetchCopiedText$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Clipboard.getStringAsync());\n\n          case 2:\n            text = _context2.sent;\n            setCopiedText(text);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var bottomSheetModalRef = useRef(null);\n  var snapPoints = useMemo(function () {\n    return ['25%', '50%'];\n  }, []);\n  var handlePresentModalPress = useCallback(function () {\n    var _bottomSheetModalRef$;\n\n    (_bottomSheetModalRef$ = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$.present();\n  }, []);\n  var handleSheetChanges = useCallback(function (index) {\n    console.log('handleSheetChanges', index);\n  }, []);\n  return React.createElement(Background, {\n    position: \"bottom\",\n    dismissKeyboard: true\n  }, React.createElement(View, null, React.createElement(SubPageHeader, {\n    backButton: true\n  }, \"Import Wallet\"), React.createElement(Text, {\n    style: _objectSpread({\n      marginVertical: 24\n    }, theme.fonts.Nunito_Sans.Body_L_Bold)\n  }, \"Add your secret phrase to import your wallet\"), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderColor: theme.colors.black_seven,\n      borderRadius: 18,\n      padding: 16,\n      marginBottom: 24\n    }\n  }, React.createElement(TextInputRN, {\n    style: _objectSpread({\n      borderColor: 'black',\n      borderWidth: 0\n    }, theme.fonts.Nunito_Sans.Body_M_Regular),\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return setSecret(text);\n    },\n    value: secret,\n    placeholder: 'Enter phrase with a space between words',\n    keyboardType: \"default\",\n    multiline: true,\n    minHeight: 100\n  })), React.createElement(Callout, {\n    text: \"Your secret phrase will be encrypted and never leave this device. \",\n    iconName: \"shield_small.png\"\n  }), React.createElement(View, {\n    style: {\n      height: 24\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var _bottomSheetModalRef$2;\n\n      return (_bottomSheetModalRef$2 = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$2.present();\n    }\n  }, React.createElement(Text, {\n    style: theme.fonts.Nunito_Sans.Body_M_Bold\n  }, \"What is a Secret Phrase?\"))), React.createElement(View, {\n    style: {\n      marginBottom: 40\n    }\n  }, React.createElement(ThemeButton, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return storePhraseAndContinue(passcode, secret);\n    }\n  }, \"Import Wallet\")), React.createElement(BottomSheetModalProvider, null, React.createElement(BottomSheetModal, {\n    ref: bottomSheetModalRef,\n    index: 1,\n    snapPoints: snapPoints,\n    onChange: handleSheetChanges,\n    style: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: 6\n      },\n      shadowOpacity: 0.37,\n      shadowRadius: 7.49,\n      elevation: 12\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'space-between',\n      margin: 16\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 24,\n      marginTop: 8\n    }\n  }, React.createElement(Text, {\n    style: theme.fonts.Azeret_Mono.Header_M_SemiBold\n  }, \"What is a Secret Phrase?\")), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n      marginBottom: 16\n    })\n  }, \"The secret phrase is like a password, but generated programmatically and more secure.\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n      marginBottom: 16\n    })\n  }, \"You should have received it from where you generated your wallet and it should be 12-20 words long.\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n      marginBottom: 16\n    })\n  }, \"Be sure to enter it in the exact word order you received it with a space between each word.\"), React.createElement(ThemeButton, {\n    onPress: function onPress() {\n      var _bottomSheetModalRef$3;\n\n      return (_bottomSheetModalRef$3 = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$3.dismiss();\n    }\n  }, ' ', \"I Understand\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center',\n    backgroundColor: 'grey'\n  },\n  contentContainer: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\nexport default memo(ImportWalletScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/ImportWalletScreen.tsx"],"names":["React","memo","useState","useMemo","useRef","useCallback","Background","SubPageHeader","Callout","ThemeButton","theme","BottomSheetModal","BottomSheetModalProvider","TouchableOpacity","Clipboard","SecureStore","useStoreState","DismissKeyboard","children","console","log","ImportWalletScreen","navigation","name","setName","secret","setSecret","copiedText","setCopiedText","passcode","state","storePhraseAndContinue","phrase","setItemAsync","navigate","wordCount","str","split","length","copyToClipboard","setString","fetchCopiedText","getStringAsync","text","bottomSheetModalRef","snapPoints","handlePresentModalPress","current","present","handleSheetChanges","index","marginVertical","fonts","Nunito_Sans","Body_L_Bold","borderWidth","borderColor","colors","black_seven","borderRadius","padding","marginBottom","Body_M_Regular","height","Body_M_Bold","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","justifyContent","margin","marginTop","Azeret_Mono","Header_M_SemiBold","Body_M_SemiBold","dismiss","styles","StyleSheet","create","container","flex","backgroundColor","contentContainer","alignItems"],"mappings":"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","sourcesContent":["import React, { memo, useState, useMemo, useRef, useCallback } from 'react';\nimport {\n\tBackground,\n\tButton,\n\tSubPageHeader,\n\tCallout,\n\tThemeButton,\n} from '../components';\nimport { Navigation } from '../types';\nimport { theme } from '../core/theme';\nimport {\n\tView,\n\tText,\n\tTextInput as TextInputRN,\n\tImage,\n\tStyleSheet,\n\tTouchableWithoutFeedback,\n} from 'react-native';\nimport {\n\tBottomSheetModal,\n\tBottomSheetModalProvider,\n} from '@gorhom/bottom-sheet';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Clipboard from 'expo-clipboard';\nimport * as SecureStore from 'expo-secure-store';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\n\ntype Props = {\n\tnavigation: Navigation;\n};\n\nconst DismissKeyboard = ({ children }) => (\n\t<TouchableWithoutFeedback onPress={() => console.log('hello')}>\n\t\t{children}\n\t</TouchableWithoutFeedback>\n);\n\nconst ImportWalletScreen = ({ navigation }: Props) => {\n\tconst [name, setName] = useState('');\n\tconst [secret, setSecret] = useState('');\n\tconst [copiedText, setCopiedText] = React.useState('');\n\tconst passcode = useStoreState((state) => state.passcode);\n\n\tasync function storePhraseAndContinue(passcode: string, phrase: string) {\n\t\tawait SecureStore.setItemAsync(passcode, phrase);\n\t\tnavigation.navigate('Main');\n\t}\n\n\tfunction wordCount(str: string) {\n\t\treturn str.split(' ').length;\n\t}\n\tconst copyToClipboard = () => {\n\t\tClipboard.setString('hello world');\n\t};\n\n\tconst fetchCopiedText = async () => {\n\t\tconst text = await Clipboard.getStringAsync();\n\t\tsetCopiedText(text);\n\t};\n\n\t// bottomsheet stuff\n\tconst bottomSheetModalRef = useRef<BottomSheetModal>(null);\n\tconst snapPoints = useMemo(() => ['25%', '50%'], []);\n\tconst handlePresentModalPress = useCallback(() => {\n\t\tbottomSheetModalRef.current?.present();\n\t}, []);\n\tconst handleSheetChanges = useCallback((index: number) => {\n\t\tconsole.log('handleSheetChanges', index);\n\t}, []);\n\n\treturn (\n\t\t<Background position=\"bottom\" dismissKeyboard={true}>\n\t\t\t<View>\n\t\t\t\t<SubPageHeader backButton={true}>Import Wallet</SubPageHeader>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginVertical: 24,\n\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_L_Bold,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAdd your secret phrase to import your wallet\n\t\t\t\t</Text>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.black_seven,\n\t\t\t\t\t\t// padding: 8,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\tmarginBottom: 24,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TextInputRN\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Regular,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\tonChangeText={(text) => setSecret(text)}\n\t\t\t\t\t\tvalue={secret}\n\t\t\t\t\t\tplaceholder={'Enter phrase with a space between words'}\n\t\t\t\t\t\t// placeholderTextColor: theme.colors.primary\n\t\t\t\t\t\tkeyboardType=\"default\"\n\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\tminHeight={100}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderBottomColor: theme.colors.black_seven,\n\t\t\t\t\t\t\tborderBottomWidth: 1,\n\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></View>\n\t\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tmarginRight: 8,\n\t\t\t\t\t\t\t\tpadding: 6,\n\t\t\t\t\t\t\t\tbackgroundColor: '#F1F4F9',\n\t\t\t\t\t\t\t\tborderRadius: 6,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tsource={require('../assets/icons/scan.jpg')}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 16,\n\t\t\t\t\t\t\t\t\theight: 16,\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\tmarginRight: 6,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\ttheme.fonts.Nunito_Sans.Caption_S_SemiBold\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tScan\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => fetchCopiedText()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tmarginRight: 8,\n\t\t\t\t\t\t\t\tpadding: 6,\n\t\t\t\t\t\t\t\tbackgroundColor: '#F1F4F9',\n\t\t\t\t\t\t\t\tborderRadius: 6,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tsource={require('../assets/icons/copy.jpg')}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 16,\n\t\t\t\t\t\t\t\t\theight: 16,\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\tmarginRight: 6,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\ttheme.fonts.Nunito_Sans.Caption_S_SemiBold\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tsport seek found\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View> */}\n\t\t\t\t</View>\n\t\t\t\t<Callout\n\t\t\t\t\ttext=\"Your secret phrase will be encrypted and never leave this device. \"\n\t\t\t\t\ticonName=\"shield_small.png\"\n\t\t\t\t/>\n\t\t\t\t<View style={{ height: 24 }} />\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => bottomSheetModalRef.current?.present()}\n\t\t\t\t>\n\t\t\t\t\t<Text style={theme.fonts.Nunito_Sans.Body_M_Bold}>\n\t\t\t\t\t\tWhat is a Secret Phrase?\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t<View style={{ marginBottom: 40 }}>\n\t\t\t\t<ThemeButton\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tonPress={() => storePhraseAndContinue(passcode, secret)}\n\t\t\t\t>\n\t\t\t\t\tImport Wallet\n\t\t\t\t</ThemeButton>\n\t\t\t</View>\n\t\t\t<BottomSheetModalProvider>\n\t\t\t\t<BottomSheetModal\n\t\t\t\t\tref={bottomSheetModalRef}\n\t\t\t\t\tindex={1}\n\t\t\t\t\tsnapPoints={snapPoints}\n\t\t\t\t\tonChange={handleSheetChanges}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// margin: 16,\n\t\t\t\t\t\tshadowColor: '#000',\n\t\t\t\t\t\tshadowOffset: {\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 6,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshadowOpacity: 0.37,\n\t\t\t\t\t\tshadowRadius: 7.49,\n\t\t\t\t\t\televation: 12,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\tmargin: 16,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginBottom: 24,\n\t\t\t\t\t\t\t\tmarginTop: 8,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\ttheme.fonts.Azeret_Mono.Header_M_SemiBold\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWhat is a Secret Phrase?\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tThe secret phrase is like a password, but generated\n\t\t\t\t\t\t\tprogrammatically and more secure.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tYou should have received it from where you generated\n\t\t\t\t\t\t\tyour wallet and it should be 12-20 words long.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBe sure to enter it in the exact word order you\n\t\t\t\t\t\t\treceived it with a space between each word.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<ThemeButton\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tbottomSheetModalRef.current?.dismiss()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tI Understand\n\t\t\t\t\t\t</ThemeButton>\n\t\t\t\t\t</View>\n\t\t\t\t</BottomSheetModal>\n\t\t\t</BottomSheetModalProvider>\n\t\t</Background>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 24,\n\t\tjustifyContent: 'center',\n\t\tbackgroundColor: 'grey',\n\t},\n\tcontentContainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t},\n});\n\nexport default memo(ImportWalletScreen);\n"]},"metadata":{},"sourceType":"module"}