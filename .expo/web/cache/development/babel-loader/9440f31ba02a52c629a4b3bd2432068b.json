{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, G, Text as SVGText } from 'react-native-svg';\nimport * as d3Scale from 'd3-scale';\nimport * as array from 'd3-array';\n\nvar YAxis = function (_PureComponent) {\n  _inherits(YAxis, _PureComponent);\n\n  var _super = _createSuper(YAxis);\n\n  function YAxis() {\n    var _this;\n\n    _classCallCheck(this, YAxis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0,\n      width: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(YAxis, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(domain) {\n      var _this$props = this.props,\n          scale = _this$props.scale,\n          spacingInner = _this$props.spacingInner,\n          spacingOuter = _this$props.spacingOuter,\n          _this$props$contentIn = _this$props.contentInset,\n          _this$props$contentIn2 = _this$props$contentIn.top,\n          top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n          _this$props$contentIn3 = _this$props$contentIn.bottom,\n          bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3;\n      var height = this.state.height;\n      var y = scale().domain(domain).range([height - bottom, top]);\n\n      if (scale === d3Scale.scaleBand) {\n        y.range([top, height - bottom]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n        return function (value) {\n          return y(value) + y.bandwidth() / 2;\n        };\n      }\n\n      return y;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          data = _this$props2.data,\n          scale = _this$props2.scale,\n          yAccessor = _this$props2.yAccessor,\n          numberOfTicks = _this$props2.numberOfTicks,\n          formatLabel = _this$props2.formatLabel,\n          svg = _this$props2.svg,\n          children = _this$props2.children;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n\n      var values = data.map(function (item, index) {\n        return yAccessor({\n          item: item,\n          index: index\n        });\n      });\n      var extent = array.extent(values);\n      var _this$props3 = this.props,\n          _this$props3$min = _this$props3.min,\n          min = _this$props3$min === void 0 ? extent[0] : _this$props3$min,\n          _this$props3$max = _this$props3.max,\n          max = _this$props3$max === void 0 ? extent[1] : _this$props3$max;\n      var domain = scale === d3Scale.scaleBand ? values : [min, max];\n      var y = this.getY(domain);\n      var ticks = scale === d3Scale.scaleBand ? values : y.ticks(numberOfTicks);\n      var longestValue = ticks.map(function (value, index) {\n        return formatLabel(value, index);\n      }).reduce(function (prev, curr) {\n        return prev.toString().length > curr.toString().length ? prev : curr;\n      }, 0);\n      var extraProps = {\n        y: y,\n        ticks: ticks,\n        width: width,\n        height: height,\n        formatLabel: formatLabel\n      };\n      return React.createElement(View, {\n        style: [style]\n      }, React.createElement(View, {\n        style: {\n          flexGrow: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, React.createElement(Text, {\n        style: {\n          opacity: 0,\n          fontSize: svg.fontSize,\n          fontFamily: svg.fontFamily,\n          fontWeight: svg.fontWeight\n        }\n      }, longestValue), height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: height,\n          width: width\n        }\n      }, React.createElement(G, null, React.Children.map(children, function (child) {\n        return React.cloneElement(child, extraProps);\n      }), height > 0 && ticks.map(function (value, index) {\n        return React.createElement(SVGText, _extends({\n          originY: y(value),\n          textAnchor: 'middle',\n          x: '50%',\n          alignmentBaseline: 'middle'\n        }, svg, {\n          key: y(value),\n          y: y(value)\n        }), formatLabel(value, index, ticks.length));\n      })))));\n    }\n  }]);\n\n  return YAxis;\n}(PureComponent);\n\nYAxis.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  svg: PropTypes.object,\n  style: PropTypes.any,\n  numberOfTicks: PropTypes.number,\n  formatLabel: PropTypes.func,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  min: PropTypes.number,\n  max: PropTypes.number,\n  yAccessor: PropTypes.func,\n  scale: PropTypes.func,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number\n};\nYAxis.defaultProps = {\n  numberOfTicks: 10,\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  contentInset: {},\n  svg: {},\n  scale: d3Scale.scaleLinear,\n  formatLabel: function formatLabel(value) {\n    return value && value.toString();\n  },\n  yAccessor: function yAccessor(_ref) {\n    var item = _ref.item;\n    return item;\n  }\n};\nexport default YAxis;","map":{"version":3,"sources":["y-axis.js"],"names":["Text","height","width","_onLayout","nativeEvent","layout","getY","contentInset","top","bottom","y","scale","d3Scale","value","render","children","data","style","values","yAccessor","item","index","extent","array","min","max","domain","ticks","longestValue","formatLabel","prev","curr","extraProps","flexGrow","event","opacity","fontSize","svg","fontFamily","fontWeight","position","left","child","React","YAxis","PropTypes","numberOfTicks","number","spacingInner","spacingOuter"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, View } from 'react-native'\nimport { Svg, G, Text as SVGText } from 'react-native-svg'\nimport * as d3Scale from 'd3-scale'\nimport * as array from 'd3-array'\n\nclass YAxis extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    getY(domain) {\n        const {\n            scale,\n            spacingInner,\n            spacingOuter,\n            contentInset: { top = 0, bottom = 0 },\n        } = this.props\n\n        const { height } = this.state\n\n        const y = scale()\n            .domain(domain)\n            .range([height - bottom, top])\n\n        if (scale === d3Scale.scaleBand) {\n            // use index as domain identifier instead of value since\n            // same value can occur at several places in dataPoints\n            y\n                // set range top to bottom - we are not sorting on values in scaleBand\n                .range([top, height - bottom])\n                .paddingInner([spacingInner])\n                .paddingOuter([spacingOuter])\n\n            //add half a bar to center label\n            return (value) => y(value) + y.bandwidth() / 2\n        }\n\n        return y\n    }\n\n    render() {\n        const { style, data, scale, yAccessor, numberOfTicks, formatLabel, svg, children } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const values = data.map((item, index) => yAccessor({ item, index }))\n\n        const extent = array.extent(values)\n\n        const { min = extent[0], max = extent[1] } = this.props\n\n        const domain = scale === d3Scale.scaleBand ? values : [min, max]\n\n        //invert range to support svg coordinate system\n        const y = this.getY(domain)\n\n        const ticks = scale === d3Scale.scaleBand ? values : y.ticks(numberOfTicks)\n\n        const longestValue = ticks\n            .map((value, index) => formatLabel(value, index))\n            .reduce((prev, curr) => (prev.toString().length > curr.toString().length ? prev : curr), 0)\n\n        const extraProps = {\n            y,\n            ticks,\n            width,\n            height,\n            formatLabel,\n        }\n\n        return (\n            <View style={[style]}>\n                <View style={{ flexGrow: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {/*invisible text to allow for parent resizing*/}\n                    <Text\n                        style={{\n                            opacity: 0,\n                            fontSize: svg.fontSize,\n                            fontFamily: svg.fontFamily,\n                            fontWeight: svg.fontWeight,\n                        }}\n                    >\n                        {longestValue}\n                    </Text>\n                    {height > 0 && width > 0 && (\n                        <Svg\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                height,\n                                width,\n                            }}\n                        >\n                            <G>\n                                {React.Children.map(children, (child) => {\n                                    return React.cloneElement(child, extraProps)\n                                })}\n                                {// don't render labels if width isn't measured yet,\n                                // causes rendering issues\n                                height > 0 &&\n                                    ticks.map((value, index) => {\n                                        return (\n                                            <SVGText\n                                                originY={y(value)}\n                                                textAnchor={'middle'}\n                                                x={'50%'}\n                                                alignmentBaseline={'middle'}\n                                                {...svg}\n                                                key={y(value)}\n                                                y={y(value)}\n                                            >\n                                                {formatLabel(value, index, ticks.length)}\n                                            </SVGText>\n                                        )\n                                    })}\n                            </G>\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nYAxis.propTypes = {\n    data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number)]).isRequired,\n    svg: PropTypes.object,\n    style: PropTypes.any,\n    numberOfTicks: PropTypes.number,\n    formatLabel: PropTypes.func,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    yAccessor: PropTypes.func,\n    scale: PropTypes.func,\n    spacingInner: PropTypes.number,\n    spacingOuter: PropTypes.number,\n}\n\nYAxis.defaultProps = {\n    numberOfTicks: 10,\n    spacingInner: 0.05,\n    spacingOuter: 0.05,\n    contentInset: {},\n    svg: {},\n    scale: d3Scale.scaleLinear,\n    formatLabel: (value) => value && value.toString(),\n    yAccessor: ({ item }) => item,\n}\n\nexport default YAxis\n"]},"metadata":{},"sourceType":"module"}