{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport { Background, SubPageHeader } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport { useStoreState } from \"../hooks/storeHooks\";\n\nvar EditWalletNameScreen = function EditWalletNameScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var selectedWallet = useStoreState(function (state) {\n    return state.selectedWallet;\n  });\n  var subWallets = useStoreState(function (state) {\n    return state.subWallets;\n  });\n\n  var walletNameHandler = function walletNameHandler(inputText) {\n    setName(inputText);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {};\n\n  return React.createElement(Background, {\n    dismissKeyboard: false\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 24\n    }\n  }, React.createElement(SubPageHeader, {\n    backButton: true\n  }, \"Edit Name\"), React.createElement(View, {\n    style: styles.textBoxContainer\n  }, React.createElement(TextInputRN, {\n    style: styles.textBox,\n    placeholder: subWallets[selectedWallet].subWalletName,\n    keyboardType: \"default\",\n    value: name,\n    onChangeText: walletNameHandler\n  }))), React.createElement(Text, null, name));\n};\n\nvar styles = StyleSheet.create({\n  textBoxContainer: {\n    height: 64,\n    borderWidth: 1,\n    borderColor: theme.colors.black_seven,\n    borderRadius: 18,\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  textBox: _objectSpread({\n    borderWidth: 0,\n    width: '100%'\n  }, theme.fonts.Nunito_Sans.Body_M_Regular)\n});\nexport default memo(EditWalletNameScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/EditWalletNameScreen.tsx"],"names":["React","memo","useState","Background","SubPageHeader","theme","useStoreState","EditWalletNameScreen","name","setName","selectedWallet","state","subWallets","walletNameHandler","inputText","confirmInputHandler","marginBottom","styles","textBoxContainer","textBox","subWalletName","StyleSheet","create","height","borderWidth","borderColor","colors","black_seven","borderRadius","padding","flexDirection","alignItems","width","fonts","Nunito_Sans","Body_M_Regular"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;;;;;AAGA,SAASC,UAAT,EAAqBC,aAArB;AAEA,SAASC,KAAT;AACA,SAASC,aAAT;;AAMA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAElC,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,cAAc,GAAGJ,aAAa,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACD,cAAjB;AAAA,GAAD,CAApC;AACA,MAAME,UAAU,GAAGN,aAAa,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,UAAjB;AAAA,GAAD,CAAhC;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,SAAS,EAAI;AACtCL,IAAAA,OAAO,CAACK,SAAD,CAAP;AACA,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM,CAEjC,CAFD;;AAGA,SACC,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAE;AAA7B,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAb,KACC,oBAAC,aAAD;AAAe,IAAA,UAAU;AAAzB,iBADD,EAGC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACC,oBAAC,WAAD;AACC,IAAA,KAAK,EAAED,MAAM,CAACE,OADf;AAEC,IAAA,WAAW,EAAEP,UAAU,CAACF,cAAD,CAAV,CAA2BU,aAFzC;AAGC,IAAA,YAAY,EAAC,SAHd;AAIC,IAAA,KAAK,EAAEZ,IAJR;AAKC,IAAA,YAAY,EAAEK;AALf,IADD,CAHD,CADD,EAcC,oBAAC,IAAD,QAAOL,IAAP,CAdD,CADD;AAkBA,CA/BD;;AAiCA,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,gBAAgB,EAAE;AACjBK,IAAAA,MAAM,EAAE,EADS;AAEjBC,IAAAA,WAAW,EAAE,CAFI;AAGjBC,IAAAA,WAAW,EAAEpB,KAAK,CAACqB,MAAN,CAAaC,WAHT;AAIjBC,IAAAA,YAAY,EAAE,EAJG;AAKjBC,IAAAA,OAAO,EAAE,EALQ;AAMjBC,IAAAA,aAAa,EAAE,KANE;AAOjBC,IAAAA,UAAU,EAAE;AAPK,GADc;AAUhCZ,EAAAA,OAAO;AACNK,IAAAA,WAAW,EAAE,CADP;AAENQ,IAAAA,KAAK,EAAE;AAFD,KAGH3B,KAAK,CAAC4B,KAAN,CAAYC,WAAZ,CAAwBC,cAHrB;AAVyB,CAAlB,CAAf;AAkBA,eAAelC,IAAI,CAACM,oBAAD,CAAnB","sourcesContent":["import React, { memo, useState } from 'react';\nimport { StyleSheet, Text, View, TextInput as TextInputRN } from 'react-native';\nimport TextInput from '../components/TextInput'\nimport { Background, SubPageHeader } from '../components';\nimport { Navigation } from '../types';\nimport { theme } from '../core/theme';\nimport { useStoreState } from '../hooks/storeHooks';\n\ntype Props = {\n\tnavigation: Navigation;\n};\n\nconst EditWalletNameScreen = () => {\n\n\tconst [name, setName] = useState('');\n\tconst selectedWallet = useStoreState((state) => state.selectedWallet);\n\tconst subWallets = useStoreState((state) => state.subWallets);\n\n\tconst walletNameHandler = inputText => {\n\t\tsetName(inputText);\n\t}\n\n\tconst confirmInputHandler = () => {\n\t\t\n\t}\n\treturn (\n\t\t<Background dismissKeyboard={false}>\n\t\t\t<View style={{ marginBottom: 24 }}>\n\t\t\t\t<SubPageHeader backButton>Edit Name</SubPageHeader>\n\n\t\t\t\t<View style={styles.textBoxContainer}>    \n\t\t\t\t\t<TextInputRN\n\t\t\t\t\t\tstyle={styles.textBox}\n\t\t\t\t\t\tplaceholder={subWallets[selectedWallet].subWalletName}\n\t\t\t\t\t\tkeyboardType=\"default\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChangeText={walletNameHandler}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<Text>{name}</Text>\n\t\t</Background>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\ttextBoxContainer: {\n\t\theight: 64,\n\t\tborderWidth: 1,\n\t\tborderColor: theme.colors.black_seven,\n\t\tborderRadius: 18,\n\t\tpadding: 16,\n\t\tflexDirection: 'row',\n\t\talignItems: 'center'\n\t},\n\ttextBox: {\n\t\tborderWidth: 0,\n\t\twidth: '100%',\n\t\t...theme.fonts.Nunito_Sans.Body_M_Regular,\t\n\t}\n\t\n});\n\nexport default memo(EditWalletNameScreen);\n"]},"metadata":{},"sourceType":"module"}