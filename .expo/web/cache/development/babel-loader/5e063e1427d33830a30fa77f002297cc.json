{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport Chart from \"./chart/chart\";\n\nvar AreaChart = function (_Chart) {\n  _inherits(AreaChart, _Chart);\n\n  var _super = _createSuper(AreaChart);\n\n  function AreaChart() {\n    _classCallCheck(this, AreaChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AreaChart, [{\n    key: \"createPaths\",\n    value: function createPaths(_ref) {\n      var data = _ref.data,\n          x = _ref.x,\n          y = _ref.y;\n      var _this$props = this.props,\n          curve = _this$props.curve,\n          start = _this$props.start;\n      var area = shape.area().x(function (d) {\n        return x(d.x);\n      }).y0(y(start)).y1(function (d) {\n        return y(d.y);\n      }).defined(function (item) {\n        return typeof item.y === 'number';\n      }).curve(curve)(data);\n      var line = shape.line().x(function (d) {\n        return x(d.x);\n      }).y(function (d) {\n        return y(d.y);\n      }).defined(function (item) {\n        return typeof item.y === 'number';\n      }).curve(curve)(data);\n      return {\n        path: area,\n        area: area,\n        line: line\n      };\n    }\n  }]);\n\n  return AreaChart;\n}(Chart);\n\nAreaChart.propTypes = _objectSpread({}, Chart.propTypes, {\n  start: PropTypes.number\n});\nAreaChart.defaultProps = _objectSpread({}, Chart.defaultProps, {\n  start: 0\n});\nexport default AreaChart;","map":{"version":3,"sources":["area-chart.js"],"names":["createPaths","y","start","area","shape","d","x","item","line","path","AreaChart","Chart","PropTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,UAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,KAAA;;IAEA,S;;;;;;;;;;;;;WACIA,2BAA4B;MAAA,IAAhB,IAAgB,QAAhB,IAAgB;MAAA,IAAhB,CAAgB,QAAhB,CAAgB;MAAA,IAALC,CAAK,QAALA,CAAK;MACxB,kBAAyB,KAAzB,KAAA;MAAA,IAAM,KAAN,eAAM,KAAN;MAAA,IAAeC,KAAf,eAAeA,KAAf;MAEA,IAAMC,IAAI,GAAGC,KAAK,CAALA,IAAAA,GAAAA,CAAAA,CAELC,UAAAA,CAAD;QAAA,OAAOC,CAAC,CAACD,CAAC,CAFJD,CAEE,CAAR;MAAA,CAFMA,EAAAA,EAAAA,CAGLH,CAAC,CAHIG,KAGJ,CAHIA,EAAAA,EAAAA,CAIJC,UAAAA,CAAD;QAAA,OAAOJ,CAAC,CAACI,CAAC,CAJLD,CAIG,CAAR;MAAA,CAJKA,EAAAA,OAAAA,CAKCG,UAAAA,IAAD;QAAA,OAAU,OAAOA,IAAI,CAAX,CAAA,KALVH,QAKA;MAAA,CALAA,EAAAA,KAAAA,CAAAA,KAAAA,EAAb,IAAaA,CAAb;MAQA,IAAMI,IAAI,GAAGJ,KAAK,CAALA,IAAAA,GAAAA,CAAAA,CAELC,UAAAA,CAAD;QAAA,OAAOC,CAAC,CAACD,CAAC,CAFJD,CAEE,CAAR;MAAA,CAFMA,EAAAA,CAAAA,CAGLC,UAAAA,CAAD;QAAA,OAAOJ,CAAC,CAACI,CAAC,CAHJD,CAGE,CAAR;MAAA,CAHMA,EAAAA,OAAAA,CAICG,UAAAA,IAAD;QAAA,OAAU,OAAOA,IAAI,CAAX,CAAA,KAJVH,QAIA;MAAA,CAJAA,EAAAA,KAAAA,CAAAA,KAAAA,EAAb,IAAaA,CAAb;MAOA,OAAO;QACHK,IAAI,EADD,IAAA;QAEHN,IAFG,EAEHA,IAFG;QAGHK,IAAAA,EAAAA;MAHG,CAAP;IAKH;;;;EAxBL,K;;AA2BAE,SAAS,CAATA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACOC,KAAK,CADZD,SAAAA,EAAAA;EAEIR,KAAK,EAAEU,SAAS,CAACC;AAFrBH,CAAAA,CAAAA;AAKAA,SAAS,CAATA,YAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACOC,KAAK,CADZD,YAAAA,EAAAA;EAEIR,KAAK,EAAE;AAFXQ,CAAAA,CAAAA;AAKA,eAAA,SAAA","sourcesContent":["import * as shape from 'd3-shape'\nimport PropTypes from 'prop-types'\nimport Chart from './chart/chart'\n\nclass AreaChart extends Chart {\n    createPaths({ data, x, y }) {\n        const { curve, start } = this.props\n\n        const area = shape\n            .area()\n            .x((d) => x(d.x))\n            .y0(y(start))\n            .y1((d) => y(d.y))\n            .defined((item) => typeof item.y === 'number')\n            .curve(curve)(data)\n\n        const line = shape\n            .line()\n            .x((d) => x(d.x))\n            .y((d) => y(d.y))\n            .defined((item) => typeof item.y === 'number')\n            .curve(curve)(data)\n\n        return {\n            path: area,\n            area,\n            line,\n        }\n    }\n}\n\nAreaChart.propTypes = {\n    ...Chart.propTypes,\n    start: PropTypes.number,\n}\n\nAreaChart.defaultProps = {\n    ...Chart.defaultProps,\n    start: 0,\n}\n\nexport default AreaChart\n"]},"metadata":{},"sourceType":"module"}