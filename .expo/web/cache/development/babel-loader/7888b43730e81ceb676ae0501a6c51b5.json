{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useEffect } from 'react';\nimport { Background, SubPageHeader } from \"../components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Video } from 'expo-av';\nimport { useStoreState } from \"../hooks/storeHooks\";\n\nvar NFTdisplayScreen = function NFTdisplayScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var nftIndex = route.params;\n  var video = React.useRef(null);\n  var subWalletNftsArray = useStoreState(function (state) {\n    return state.subWalletNftsArray;\n  });\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  function getNft() {\n    var result = subWalletNftsArray[nftIndex];\n    console.log('result: ', result);\n    return result;\n  }\n\n  function getCategory() {\n    var category = subWalletNftsArray[nftIndex].Properties.category;\n\n    if (category === 'video') {\n      return React.createElement(Video, {\n        ref: video,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        },\n        source: {\n          uri: subWalletNftsArray[nftIndex].Properties.animation_url\n        },\n        useNativeControls: true,\n        resizeMode: \"contain\",\n        isLooping: true,\n        onPlaybackStatusUpdate: function onPlaybackStatusUpdate(status) {\n          return setStatus(function () {\n            return status;\n          });\n        }\n      });\n    } else if (category === 'image') {\n      return React.createElement(Image, {\n        style: {\n          flex: 1,\n          height: undefined,\n          width: undefined,\n          resizeMode: 'contain'\n        },\n        source: {\n          uri: subWalletNftsArray[nftIndex].Preview_URL\n        }\n      });\n    }\n  }\n\n  useEffect(function () {\n    getNft();\n  }, []);\n  return React.createElement(Background, {\n    blackBackground: true,\n    fullView: true\n  }, React.createElement(SubPageHeader, {\n    backButton: true,\n    whiteBackButton: true,\n    fullScreen: true\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, getCategory()));\n};\n\nexport default memo(NFTdisplayScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/NFTdisplayScreen.tsx"],"names":["React","memo","useEffect","Background","SubPageHeader","Video","useStoreState","NFTdisplayScreen","navigation","route","nftIndex","params","video","useRef","subWalletNftsArray","state","useState","status","setStatus","getNft","result","console","log","getCategory","category","Properties","position","top","left","bottom","right","uri","animation_url","flex","height","undefined","width","resizeMode","Preview_URL"],"mappings":";AAAA,OAAOA,KAAP,IACCC,IADD,EAMCC,SAND,QAOO,OAPP;AASA,SACCC,UADD,EAGCC,aAHD;;;AASA,SAASC,KAAT,QAAwC,SAAxC;AAEA,SAASC,aAAT;;AAYA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAC1D,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAvB;AACA,MAAMC,KAAK,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAd;AACA,MAAMC,kBAAkB,GAAGR,aAAa,CACvC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACD,kBAAjB;AAAA,GADuC,CAAxC;;AAGA,wBAA4Bd,KAAK,CAACgB,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,WAASC,MAAT,GAAkB;AACjB,QAAMC,MAAM,GAAGN,kBAAkB,CAACJ,QAAD,CAAjC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,WAAOA,MAAP;AACA;;AAED,WAASG,WAAT,GAAuB;AACtB,QAAMC,QAAQ,GAAGV,kBAAkB,CAACJ,QAAD,CAAlB,CAA6Be,UAA7B,CAAwCD,QAAzD;;AACA,QAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACzB,aACC,oBAAC,KAAD;AACC,QAAA,GAAG,EAAEZ,KADN;AAEC,QAAA,KAAK,EAAE;AACNc,UAAAA,QAAQ,EAAE,UADJ;AAENC,UAAAA,GAAG,EAAE,CAFC;AAGNC,UAAAA,IAAI,EAAE,CAHA;AAINC,UAAAA,MAAM,EAAE,CAJF;AAKNC,UAAAA,KAAK,EAAE;AALD,SAFR;AASC,QAAA,MAAM,EAAE;AACPC,UAAAA,GAAG,EAAEjB,kBAAkB,CAACJ,QAAD,CAAlB,CAA6Be,UAA7B,CACHO;AAFK,SATT;AAaC,QAAA,iBAAiB,MAblB;AAcC,QAAA,UAAU,EAAC,SAdZ;AAeC,QAAA,SAAS,MAfV;AAgBC,QAAA,sBAAsB,EAAE,gCAACf,MAAD;AAAA,iBAAYC,SAAS,CAAC;AAAA,mBAAMD,MAAN;AAAA,WAAD,CAArB;AAAA;AAhBzB,QADD;AAoBA,KArBD,MAqBO,IAAIO,QAAQ,KAAK,OAAjB,EAA0B;AAChC,aACC,oBAAC,KAAD;AACC,QAAA,KAAK,EAAE;AACNS,UAAAA,IAAI,EAAE,CADA;AAENC,UAAAA,MAAM,EAAEC,SAFF;AAGNC,UAAAA,KAAK,EAAED,SAHD;AAINE,UAAAA,UAAU,EAAE;AAJN,SADR;AAOC,QAAA,MAAM,EAAE;AACPN,UAAAA,GAAG,EAAEjB,kBAAkB,CAACJ,QAAD,CAAlB,CAA6B4B;AAD3B;AAPT,QADD;AAaA;AAED;;AAEDpC,EAAAA,SAAS,CAAC,YAAM;AACfiB,IAAAA,MAAM;AACN,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAE,IAA7B;AAAmC,IAAA,QAAQ,EAAE;AAA7C,KACC,oBAAC,aAAD;AACC,IAAA,UAAU,EAAE,IADb;AAEC,IAAA,eAAe,EAAE,IAFlB;AAGC,IAAA,UAAU,EAAE;AAHb,IADD,EAMC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEc,MAAAA,IAAI,EAAE;AAAR;AAAb,KAA2BV,WAAW,EAAtC,CAND,CADD;AAUA,CArED;;AAuEA,eAAetB,IAAI,CAACM,gBAAD,CAAnB","sourcesContent":["import React, {\n\tmemo,\n\tuseState,\n\tuseMemo,\n\tuseRef,\n\tuseCallback,\n\tuseEffect,\n} from 'react';\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport {\n\tBackground,\n\tThemeButton,\n\tSubPageHeader,\n\tRedButton,\n} from '../components';\nimport { Navigation } from '../types';\nimport { View, Image, ScrollView } from 'react-native';\n//import Video from 'react-native-video';\nimport { Video, AVPlaybackStatus } from 'expo-av';\nimport { theme } from '../core/theme';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\nimport { BottomSheetModal } from '@gorhom/bottom-sheet';\nimport { shortenPublicKey, copyToClipboard } from '../utils';\n\nimport { useContext } from 'react';\nimport AppContext from '../components/AppContext';\n\ntype Props = {\n\tnavigation: Navigation;\n\troute: Object;\n};\n\nconst NFTdisplayScreen = ({ navigation, route }: Props) => {\n\tconst nftIndex = route.params;\n\tconst video = React.useRef(null);\n\tconst subWalletNftsArray = useStoreState(\n\t\t(state) => state.subWalletNftsArray,\n\t);\n\tconst [status, setStatus] = React.useState({});\n\n\tfunction getNft() {\n\t\tconst result = subWalletNftsArray[nftIndex];\n\t\tconsole.log('result: ', result);\n\t\treturn result;\n\t}\n\n\tfunction getCategory() {\n\t\tconst category = subWalletNftsArray[nftIndex].Properties.category;\n\t\tif (category === 'video') {\n\t\t\treturn (\n\t\t\t\t<Video\n\t\t\t\t\tref={video}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t}}\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi: subWalletNftsArray[nftIndex].Properties\n\t\t\t\t\t\t\t.animation_url,\n\t\t\t\t\t}}\n\t\t\t\t\tuseNativeControls\n\t\t\t\t\tresizeMode=\"contain\"\n\t\t\t\t\tisLooping\n\t\t\t\t\tonPlaybackStatusUpdate={(status) => setStatus(() => status)}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (category === 'image') {\n\t\t\treturn (\n\t\t\t\t<Image\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\theight: undefined,\n\t\t\t\t\t\twidth: undefined,\n\t\t\t\t\t\tresizeMode: 'contain',\n\t\t\t\t\t}}\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi: subWalletNftsArray[nftIndex].Preview_URL,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\t// console.log('category: ', category);\n\t}\n\n\tuseEffect(() => {\n\t\tgetNft();\n\t}, []);\n\n\treturn (\n\t\t<Background blackBackground={true} fullView={true}>\n\t\t\t<SubPageHeader\n\t\t\t\tbackButton={true}\n\t\t\t\twhiteBackButton={true}\n\t\t\t\tfullScreen={true}\n\t\t\t></SubPageHeader>\n\t\t\t<View style={{ flex: 1 }}>{getCategory()}</View>\n\t\t</Background>\n\t);\n};\n\nexport default memo(NFTdisplayScreen);\n"]},"metadata":{},"sourceType":"module"}