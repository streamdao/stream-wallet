{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useMemo, useRef, useCallback, useEffect } from 'react';\nimport { Background, ThemeButton, SubPageHeader } from \"../components\";\nimport { theme } from \"../core/theme\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInputRN from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { BottomSheetModal, BottomSheetModalProvider } from '@gorhom/bottom-sheet';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as SecureStore from 'expo-secure-store';\nimport { generateMnemonic, mnemonicToSeed, copyToClipboard, getAccountFromSeed, DERIVATION_PATH } from \"../utils/index\";\nimport { useStoreState, useStoreActions } from \"../hooks/storeHooks\";\nimport Storage from \"../storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateWalletScreen = function CreateWalletScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      secret = _useState4[0],\n      setSecret = _useState4[1];\n\n  var passcode = useStoreState(function (state) {\n    return state.passcode;\n  });\n  var setSubWallets = useStoreActions(function (actions) {\n    return actions.setSubWallets;\n  });\n\n  function storePhraseAndContinue(passcode, phrase) {\n    return _regeneratorRuntime.async(function storePhraseAndContinue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(passcode, phrase));\n\n          case 2:\n            navigation.navigate('Main');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function setWallet(mnemonic) {\n    var seed, newAccount, publicKey, walletKey;\n    return _regeneratorRuntime.async(function setWallet$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(mnemonicToSeed(mnemonic));\n\n          case 2:\n            seed = _context2.sent;\n            newAccount = getAccountFromSeed(seed, 0, DERIVATION_PATH.bip44Change);\n            publicKey = newAccount.publicKey;\n            walletKey = publicKey.toString('hex');\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(Storage.setItem('firstWalletKey', walletKey));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function generatePhrase() {\n    var mnemonic;\n    return _regeneratorRuntime.async(function generatePhrase$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(generateMnemonic());\n\n          case 2:\n            mnemonic = _context3.sent;\n            setWallet(mnemonic);\n            setSecret(mnemonic);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    generatePhrase();\n  }, []);\n  var bottomSheetModalRef = useRef(null);\n  var snapPoints = useMemo(function () {\n    return ['25%', '50%'];\n  }, []);\n  var handlePresentModalPress = useCallback(function () {\n    var _bottomSheetModalRef$;\n\n    (_bottomSheetModalRef$ = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$.present();\n  }, []);\n  var handleSheetChanges = useCallback(function (index) {\n    console.log('handleSheetChanges', index);\n  }, []);\n  return _jsxs(Background, {\n    position: \"bottom\",\n    dismissKeyboard: true,\n    children: [_jsxs(View, {\n      children: [_jsx(SubPageHeader, {\n        backButton: true,\n        children: \"Create Wallet\"\n      }), _jsx(Text, {\n        style: _objectSpread({\n          marginVertical: 24\n        }, theme.fonts.Nunito_Sans.Body_L_Bold),\n        children: \"Copy the secret phrase (password) below and store it somewhere safe.\"\n      }), _jsxs(View, {\n        style: {\n          borderWidth: 1,\n          borderColor: theme.colors.black_seven,\n          borderRadius: 18,\n          padding: 16,\n          marginBottom: 24\n        },\n        children: [_jsx(TextInputRN, {\n          style: _objectSpread(_objectSpread({\n            borderColor: 'black',\n            borderWidth: 0\n          }, theme.fonts.Nunito_Sans.Body_M_Regular), {}, {\n            marginBottom: 8\n          }),\n          editable: false,\n          onChangeText: function onChangeText(text) {\n            return setSecret(text);\n          },\n          value: secret,\n          placeholder: \"Enter your secret phrase\",\n          keyboardType: \"default\",\n          multiline: true\n        }), _jsx(View, {\n          style: {\n            borderBottomColor: theme.colors.black_seven,\n            borderBottomWidth: 1,\n            marginBottom: 8\n          }\n        }), _jsx(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: _jsxs(TouchableOpacity, {\n            style: {\n              flexDirection: 'row',\n              marginRight: 8,\n              padding: 6,\n              backgroundColor: '#F1F4F9',\n              borderRadius: 6\n            },\n            onPress: function onPress() {\n              return copyToClipboard(secret, 'Secret Phrase');\n            },\n            children: [_jsx(Image, {\n              source: require(\"../assets/icons/Copy_2.png\"),\n              style: {\n                width: 16,\n                height: 16,\n                alignSelf: 'center',\n                marginRight: 6\n              }\n            }), _jsx(Text, {\n              style: theme.fonts.Nunito_Sans.Caption_S_SemiBold,\n              children: \"Copy\"\n            })]\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var _bottomSheetModalRef$2;\n\n          return (_bottomSheetModalRef$2 = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$2.present();\n        },\n        children: _jsx(Text, {\n          style: theme.fonts.Nunito_Sans.Body_M_Bold,\n          children: \"What is a Secret Phrase?\"\n        })\n      })]\n    }), _jsx(View, {\n      style: {\n        marginBottom: 40\n      },\n      children: _jsx(ThemeButton, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return storePhraseAndContinue(passcode, secret);\n        },\n        children: \"Save & Continue\"\n      })\n    }), _jsx(BottomSheetModalProvider, {\n      children: _jsx(BottomSheetModal, {\n        ref: bottomSheetModalRef,\n        index: 1,\n        snapPoints: snapPoints,\n        onChange: handleSheetChanges,\n        style: {\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 6\n          },\n          shadowOpacity: 0.37,\n          shadowRadius: 7.49,\n          elevation: 12\n        },\n        children: _jsxs(View, {\n          style: {\n            justifyContent: 'space-between',\n            margin: 16\n          },\n          children: [_jsx(View, {\n            style: {\n              marginBottom: 24,\n              marginTop: 8\n            },\n            children: _jsx(Text, {\n              style: theme.fonts.Azeret_Mono.Header_M_SemiBold,\n              children: \"What is a Secret Phrase?\"\n            })\n          }), _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n              marginBottom: 16\n            }),\n            children: \"The secret phrase is like a password, but generated programmatically and more secure.\"\n          }), _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n              marginBottom: 16\n            }),\n            children: \"You should have received it from where you generated your wallet and it should be 12-20 words long.\"\n          }), _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, theme.fonts.Nunito_Sans.Body_M_SemiBold), {}, {\n              marginBottom: 16\n            }),\n            children: \"Be sure to enter it in the exact word order you received it with a space between each word.\"\n          }), _jsxs(ThemeButton, {\n            onPress: function onPress() {\n              var _bottomSheetModalRef$3;\n\n              return (_bottomSheetModalRef$3 = bottomSheetModalRef.current) == null ? void 0 : _bottomSheetModalRef$3.dismiss();\n            },\n            children: [' ', \"I Understand\"]\n          })]\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center',\n    backgroundColor: 'grey'\n  },\n  contentContainer: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\nexport default memo(CreateWalletScreen);","map":{"version":3,"names":["React","memo","useState","useMemo","useRef","useCallback","useEffect","Background","ThemeButton","SubPageHeader","theme","BottomSheetModal","BottomSheetModalProvider","TouchableOpacity","SecureStore","generateMnemonic","mnemonicToSeed","copyToClipboard","getAccountFromSeed","DERIVATION_PATH","useStoreState","useStoreActions","Storage","CreateWalletScreen","navigation","name","setName","secret","setSecret","passcode","state","setSubWallets","actions","storePhraseAndContinue","phrase","setItemAsync","navigate","setWallet","mnemonic","seed","newAccount","bip44Change","publicKey","walletKey","toString","setItem","generatePhrase","bottomSheetModalRef","snapPoints","handlePresentModalPress","current","present","handleSheetChanges","index","console","log","marginVertical","fonts","Nunito_Sans","Body_L_Bold","borderWidth","borderColor","colors","black_seven","borderRadius","padding","marginBottom","Body_M_Regular","text","borderBottomColor","borderBottomWidth","flexDirection","marginRight","backgroundColor","require","width","height","alignSelf","Caption_S_SemiBold","Body_M_Bold","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","justifyContent","margin","marginTop","Azeret_Mono","Header_M_SemiBold","Body_M_SemiBold","dismiss","styles","StyleSheet","create","container","flex","contentContainer","alignItems"],"sources":["/workspace/stream-wallet/screens/CreateWalletScreen.tsx"],"sourcesContent":["import React, {\n\tmemo,\n\tuseState,\n\tuseMemo,\n\tuseRef,\n\tuseCallback,\n\tuseEffect,\n} from 'react';\nimport { Background, ThemeButton, SubPageHeader } from '../components';\nimport { Navigation } from '../types';\nimport { theme } from '../core/theme';\nimport {\n\tView,\n\tText,\n\tTextInput as TextInputRN,\n\tImage,\n\tStyleSheet,\n\tTouchableWithoutFeedback,\n\tAlert,\n} from 'react-native';\nimport {\n\tBottomSheetModal,\n\tBottomSheetModalProvider,\n} from '@gorhom/bottom-sheet';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Clipboard from 'expo-clipboard';\nimport * as SecureStore from 'expo-secure-store';\nimport {\n\tgenerateMnemonic,\n\tmnemonicToSeed,\n\tcopyToClipboard,\n\tgetAccountFromSeed,\n\tDERIVATION_PATH,\n} from '../utils/index';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\nimport Storage from '../storage';\n\ntype Props = {\n\tnavigation: Navigation;\n};\n\nconst CreateWalletScreen = ({ navigation }: Props) => {\n\tconst [name, setName] = useState('');\n\tconst [secret, setSecret] = useState('');\n\tconst passcode = useStoreState((state) => state.passcode);\n\tconst setSubWallets = useStoreActions((actions) => actions.setSubWallets);\n\n\tasync function storePhraseAndContinue(passcode: string, phrase: string) {\n\t\tawait SecureStore.setItemAsync(passcode, phrase);\n\t\tnavigation.navigate('Main');\n\t}\n\n\tasync function setWallet(mnemonic: string) {\n\t\tconst seed = await mnemonicToSeed(mnemonic);\n\t\tconst newAccount = getAccountFromSeed(\n\t\t\tseed,\n\t\t\t0,\n\t\t\tDERIVATION_PATH.bip44Change,\n\t\t);\n\t\tconst { publicKey } = newAccount;\n\t\tconst walletKey = publicKey.toString('hex');\n\n\t\tawait Storage.setItem('firstWalletKey', walletKey);\n\t}\n\n\tasync function generatePhrase() {\n\t\tconst mnemonic = await generateMnemonic();\n\t\tsetWallet(mnemonic);\n\t\tsetSecret(mnemonic);\n\t}\n\n\tuseEffect(() => {\n\t\tgeneratePhrase();\n\t}, []);\n\n\t// bottomsheet stuff\n\tconst bottomSheetModalRef = useRef<BottomSheetModal>(null);\n\tconst snapPoints = useMemo(() => ['25%', '50%'], []);\n\tconst handlePresentModalPress = useCallback(() => {\n\t\tbottomSheetModalRef.current?.present();\n\t}, []);\n\tconst handleSheetChanges = useCallback((index: number) => {\n\t\tconsole.log('handleSheetChanges', index);\n\t}, []);\n\n\treturn (\n\t\t<Background position=\"bottom\" dismissKeyboard={true}>\n\t\t\t<View>\n\t\t\t\t<SubPageHeader backButton={true}>Create Wallet</SubPageHeader>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginVertical: 24,\n\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_L_Bold,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCopy the secret phrase (password) below and store it\n\t\t\t\t\tsomewhere safe.\n\t\t\t\t</Text>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.black_seven,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\tmarginBottom: 24,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TextInputRN\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_Regular,\n\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditable={false}\n\t\t\t\t\t\tonChangeText={(text) => setSecret(text)}\n\t\t\t\t\t\tvalue={secret}\n\t\t\t\t\t\tplaceholder=\"Enter your secret phrase\"\n\t\t\t\t\t\t// placeholderTextColor: theme.colors.primary\n\t\t\t\t\t\tkeyboardType=\"default\"\n\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t// minHeight={150}\n\t\t\t\t\t/>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderBottomColor: theme.colors.black_seven,\n\t\t\t\t\t\t\tborderBottomWidth: 1,\n\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></View>\n\t\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tmarginRight: 8,\n\t\t\t\t\t\t\t\tpadding: 6,\n\t\t\t\t\t\t\t\tbackgroundColor: '#F1F4F9',\n\t\t\t\t\t\t\t\tborderRadius: 6,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tcopyToClipboard(secret, 'Secret Phrase')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tsource={require('../assets/icons/Copy_2.png')}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 16,\n\t\t\t\t\t\t\t\t\theight: 16,\n\t\t\t\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\t\t\t\tmarginRight: 6,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\ttheme.fonts.Nunito_Sans.Caption_S_SemiBold\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCopy\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t{/* <Button\n\t\t\t\tonPress={handlePresentModalPress}\n\t\t\t\ttitle=\"Present Modal\"\n\t\t\t\tmode=\"contained\"\n\t\t\t\t// color=\"black\"\n\t\t\t/> */}\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => bottomSheetModalRef.current?.present()}\n\t\t\t\t>\n\t\t\t\t\t<Text style={theme.fonts.Nunito_Sans.Body_M_Bold}>\n\t\t\t\t\t\tWhat is a Secret Phrase?\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t{/* <View style={{ height: 250 }}></View> */}\n\t\t\t</View>\n\t\t\t<View style={{ marginBottom: 40 }}>\n\t\t\t\t<ThemeButton\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tonPress={() => storePhraseAndContinue(passcode, secret)}\n\t\t\t\t>\n\t\t\t\t\tSave & Continue\n\t\t\t\t</ThemeButton>\n\t\t\t</View>\n\t\t\t<BottomSheetModalProvider>\n\t\t\t\t<BottomSheetModal\n\t\t\t\t\tref={bottomSheetModalRef}\n\t\t\t\t\tindex={1}\n\t\t\t\t\tsnapPoints={snapPoints}\n\t\t\t\t\tonChange={handleSheetChanges}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// margin: 16,\n\t\t\t\t\t\tshadowColor: '#000',\n\t\t\t\t\t\tshadowOffset: {\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 6,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshadowOpacity: 0.37,\n\t\t\t\t\t\tshadowRadius: 7.49,\n\t\t\t\t\t\televation: 12,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\tmargin: 16,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginBottom: 24,\n\t\t\t\t\t\t\t\tmarginTop: 8,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\ttheme.fonts.Azeret_Mono.Header_M_SemiBold\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWhat is a Secret Phrase?\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tThe secret phrase is like a password, but generated\n\t\t\t\t\t\t\tprogrammatically and more secure.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tYou should have received it from where you generated\n\t\t\t\t\t\t\tyour wallet and it should be 12-20 words long.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...theme.fonts.Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBe sure to enter it in the exact word order you\n\t\t\t\t\t\t\treceived it with a space between each word.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<ThemeButton\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tbottomSheetModalRef.current?.dismiss()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tI Understand\n\t\t\t\t\t\t</ThemeButton>\n\t\t\t\t\t</View>\n\t\t\t\t</BottomSheetModal>\n\t\t\t</BottomSheetModalProvider>\n\t\t</Background>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 24,\n\t\tjustifyContent: 'center',\n\t\tbackgroundColor: 'grey',\n\t},\n\tcontentContainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t},\n});\n\nexport default memo(CreateWalletScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}