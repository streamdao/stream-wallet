{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Background, ThemeButton } from \"../components\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { theme } from \"../core/theme\";\nimport Modal from 'react-native-modal';\nvar colors = theme.colors,\n    _theme$fonts = theme.fonts,\n    Azeret_Mono = _theme$fonts.Azeret_Mono,\n    Nunito_Sans = _theme$fonts.Nunito_Sans;\nimport { SubPageHeader } from \"../components\";\nimport { useStoreState } from \"../hooks/storeHooks\";\nimport * as SecureStore from 'expo-secure-store';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { normalizeNumber, mnemonicToSeed, accountFromSeed } from \"../utils\";\nimport * as Haptics from 'expo-haptics';\nimport { Jupiter, TOKEN_LIST_URL } from '@jup-ag/core';\n\nvar TradePreviewScreen = function TradePreviewScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      outputDollarPrice = _useState6[0],\n      setOutputDollarPrice = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayPrice = _useState8[0],\n      setDisplayPrice = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      size = _useState10[0],\n      setSize = _useState10[1];\n\n  var _useState11 = useState('sell'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      side = _useState12[0],\n      setSide = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      marketAddress = _useState14[0],\n      setMarketAddress = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fees = _useState16[0],\n      setFees = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      outAmount = _useState18[0],\n      setOutAmount = _useState18[1];\n\n  var tradeAmount = route.params.tradeAmount;\n  var fromTo = route.params.pair;\n  var passcode = useStoreState(function (state) {\n    return state.passcode;\n  });\n  var ownedTokens = useStoreState(function (state) {\n    return state.ownedTokens;\n  });\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      bestRoute2 = _useState20[0],\n      setBestRoute2 = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      jupiterObject = _useState22[0],\n      setJupiterObject = _useState22[1];\n\n  var getPossiblePairsTokenInfo = function getPossiblePairsTokenInfo(_ref2) {\n    var tokens = _ref2.tokens,\n        routeMap = _ref2.routeMap,\n        inputToken = _ref2.inputToken;\n\n    try {\n      if (!inputToken) {\n        return {};\n      }\n\n      var possiblePairs = inputToken ? routeMap.get(inputToken.address) || [] : [];\n      var possiblePairsTokenInfo = {};\n      possiblePairs.forEach(function (address) {\n        possiblePairsTokenInfo[address] = tokens.find(function (t) {\n          return t.address == address;\n        });\n      });\n      return possiblePairsTokenInfo;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  var getRoutes = function getRoutes(_ref3) {\n    var jupiter, inputToken, outputToken, inputAmount, slippage, inputAmountLamports, routes;\n    return _regeneratorRuntime.async(function getRoutes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            jupiter = _ref3.jupiter, inputToken = _ref3.inputToken, outputToken = _ref3.outputToken, inputAmount = _ref3.inputAmount, slippage = _ref3.slippage;\n            _context.prev = 1;\n\n            if (!(!inputToken || !outputToken)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 4:\n            console.log('Getting routes');\n            inputAmountLamports = inputToken ? Math.round(inputAmount * Math.pow(10, inputToken.decimals)) : 0;\n\n            if (!(inputToken && outputToken)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(jupiter.computeRoutes(new PublicKey(inputToken.address), new PublicKey(outputToken.address), inputAmountLamports, slippage, true));\n\n          case 9:\n            _context.t0 = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 12:\n            _context.t0 = null;\n\n          case 13:\n            routes = _context.t0;\n\n            if (!(routes && routes.routesInfos)) {\n              _context.next = 20;\n              break;\n            }\n\n            console.log('Possible number of routes:', routes.routesInfos.length);\n            console.log('Best quote: ', routes.routesInfos[0].outAmount);\n            return _context.abrupt(\"return\", routes);\n\n          case 20:\n            return _context.abrupt(\"return\", null);\n\n          case 21:\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t1 = _context[\"catch\"](1);\n            throw _context.t1;\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 23]], Promise);\n  };\n\n  var executeSwap = function executeSwap(_ref4) {\n    var jupiter, route, _await$jupiter$exchan, execute, swapResult;\n\n    return _regeneratorRuntime.async(function executeSwap$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            jupiter = _ref4.jupiter, route = _ref4.route;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(jupiter.exchange({\n              route: route\n            }));\n\n          case 4:\n            _await$jupiter$exchan = _context2.sent;\n            execute = _await$jupiter$exchan.execute;\n            console.log('execute: ', execute);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(execute().catch(function (err) {\n              return console.log('error with trade', err);\n            }));\n\n          case 9:\n            swapResult = _context2.sent;\n            console.log('swapResult: ', swapResult);\n\n            if (swapResult.error) {\n              console.log(swapResult.error);\n            } else {\n              console.log(\"https://explorer.solana.com/tx/\" + swapResult.txid);\n              console.log(\"inputAddress=\" + swapResult.inputAddress.toString() + \" outputAddress=\" + swapResult.outputAddress.toString());\n              console.log(\"inputAmount=\" + swapResult.inputAmount + \" outputAmount=\" + swapResult.outputAmount);\n            }\n\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw _context2.t0;\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 14]], Promise);\n  };\n\n  function getJupObject() {\n    var connection, mnemonic, seed, fromWallet, jupiter;\n    return _regeneratorRuntime.async(function getJupObject$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            connection = new Connection('https://solana-api.projectserum.com');\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(passcode));\n\n          case 3:\n            mnemonic = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(mnemonicToSeed(mnemonic));\n\n          case 6:\n            seed = _context3.sent;\n            fromWallet = accountFromSeed(seed, 0, 'bip44', 0);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(Jupiter.load({\n              connection: connection,\n              cluster: 'mainnet-beta',\n              user: fromWallet\n            }));\n\n          case 10:\n            jupiter = _context3.sent;\n            return _context3.abrupt(\"return\", jupiter);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getTokens() {\n    var tokens;\n    return _regeneratorRuntime.async(function getTokens$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.t0 = _regeneratorRuntime;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(TOKEN_LIST_URL['mainnet-beta']));\n\n          case 3:\n            _context4.t1 = _context4.sent.json();\n            _context4.next = 6;\n            return _context4.t0.awrap.call(_context4.t0, _context4.t1);\n\n          case 6:\n            tokens = _context4.sent;\n            return _context4.abrupt(\"return\", tokens);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function addDecimals(number, decimals) {\n    var stringNumber = number.toString();\n    var length = stringNumber.length;\n\n    if (decimals > length) {\n      var difference = decimals - length;\n\n      for (var i = 0; i < difference; i++) {\n        stringNumber = '0' + stringNumber;\n      }\n    }\n\n    var index = stringNumber.length - decimals;\n\n    if (index > 0) {\n      stringNumber = stringNumber.substring(0, index) + '.' + stringNumber.substr(index);\n    } else {\n      stringNumber = '.' + stringNumber;\n    }\n\n    var floatNumber = parseFloat(stringNumber);\n    return floatNumber;\n  }\n\n  function getPrice(inputMint, outPutMint, size) {\n    var _usdcRoutes$routesInf, _usdcRoutes2$routesIn;\n\n    var jupiter, tokens, inputToken, outputToken, outPutDecimals, usdcToken, usdcRoutes, dollarPrice, tradeSize, usdcRoutes2, dollarPrice2, routes, bestRoute, ratio;\n    return _regeneratorRuntime.async(function getPrice$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(getJupObject());\n\n          case 2:\n            jupiter = _context5.sent;\n            setJupiterObject(jupiter);\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(getTokens());\n\n          case 6:\n            tokens = _context5.sent;\n            inputToken = tokens.find(function (t) {\n              return t.address == inputMint;\n            });\n            outputToken = tokens.find(function (t) {\n              var outPutMintAddress = outPutMint;\n\n              if (outPutMintAddress === 'G79qAryn3Urn4pyJyTSiX6XNz3Zk1epwJbsnLA5Yntz5') {\n                outPutMintAddress = 'So11111111111111111111111111111111111111112';\n              }\n\n              return t.address == outPutMintAddress;\n            });\n            outPutDecimals = outputToken == null ? void 0 : outputToken.decimals;\n            usdcToken = tokens.find(function (t) {\n              return t.address == 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v';\n            });\n            _context5.next = 13;\n            return _regeneratorRuntime.awrap(getRoutes({\n              jupiter: jupiter,\n              inputToken: inputToken,\n              outputToken: usdcToken,\n              inputAmount: 1,\n              slippage: 1\n            }));\n\n          case 13:\n            usdcRoutes = _context5.sent;\n            dollarPrice = (usdcRoutes == null ? void 0 : (_usdcRoutes$routesInf = usdcRoutes.routesInfos[0]) == null ? void 0 : _usdcRoutes$routesInf.outAmount) / 1000000;\n            setPrice(dollarPrice);\n            tradeSize = parseFloat(tradeAmount) / dollarPrice;\n            setSize(tradeSize);\n            _context5.next = 20;\n            return _regeneratorRuntime.awrap(getRoutes({\n              jupiter: jupiter,\n              inputToken: outputToken,\n              outputToken: usdcToken,\n              inputAmount: 1,\n              slippage: 1\n            }));\n\n          case 20:\n            usdcRoutes2 = _context5.sent;\n            dollarPrice2 = (usdcRoutes2 == null ? void 0 : (_usdcRoutes2$routesIn = usdcRoutes2.routesInfos[0]) == null ? void 0 : _usdcRoutes2$routesIn.outAmount) / 1000000;\n            console.log('dollarPrice2: ', dollarPrice2);\n            setOutputDollarPrice(dollarPrice2);\n            _context5.next = 26;\n            return _regeneratorRuntime.awrap(getRoutes({\n              jupiter: jupiter,\n              inputToken: inputToken,\n              outputToken: outputToken,\n              inputAmount: tradeSize,\n              slippage: 1\n            }));\n\n          case 26:\n            routes = _context5.sent;\n            console.log('routes: ', routes);\n            bestRoute = routes == null ? void 0 : routes.routesInfos[0];\n            setBestRoute2(bestRoute);\n            console.log('bestRoute: ', bestRoute);\n            bestRoute == null ? void 0 : bestRoute.getDepositAndFee().then(function (r) {\n              console.log('deposit and fees', r);\n              setFees(r);\n            });\n            console.log('bestRoute.outAmount: ', bestRoute == null ? void 0 : bestRoute.outAmount);\n            setOutAmount(addDecimals(bestRoute == null ? void 0 : bestRoute.outAmount, outPutDecimals));\n            ratio = (bestRoute == null ? void 0 : bestRoute.outAmount) / (bestRoute == null ? void 0 : bestRoute.inAmount);\n            setDisplayPrice(ratio);\n\n          case 36:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var submitJupTrade = function submitJupTrade() {\n    return _regeneratorRuntime.async(function submitJupTrade$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log('best route', bestRoute2);\n            console.log('jupiter object', jupiterObject);\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(executeSwap({\n              jupiter: jupiterObject,\n              route: bestRoute2\n            }).catch(function (err) {\n              return console.log('eroror', err);\n            }));\n\n          case 4:\n            setModalVisible(false);\n            navigation.navigate('Trade Success', {\n              tradeAmount: tradeAmount,\n              fromTo: fromTo\n            });\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPrice(fromTo.from.mint, fromTo.to.mint, size);\n  }, [fromTo.from.mint, fromTo.to.mint]);\n  return React.createElement(Background, null, React.createElement(View, null, React.createElement(SubPageHeader, {\n    backButton: true\n  }, \"Trade Preview\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.bigNumber), {}, {\n      alignSelf: 'center',\n      marginVertical: 32\n    })\n  }, \"$\", tradeAmount), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 18,\n      marginBottom: 16\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 16\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginVertical: 16\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Caption_M_SemiBold), {}, {\n      color: colors.black_five\n    })\n  }, \"Pay\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Body_M_SemiBold), {}, {\n      color: colors.black_one\n    })\n  }, normalizeNumber(size), \" \", fromTo.from.symbol, \" ($\", tradeAmount, \")\")), React.createElement(View, {\n    style: {\n      height: 1,\n      backgroundColor: colors.border\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginVertical: 16\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Caption_M_SemiBold), {}, {\n      color: colors.black_five\n    })\n  }, \"Fees\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Body_M_SemiBold), {}, {\n      color: colors.black_one\n    })\n  }, outAmount ? \"$\" + normalizeNumber(parseFloat(tradeAmount) - outAmount * outputDollarPrice) : 'loading...')), React.createElement(View, {\n    style: {\n      height: 1,\n      backgroundColor: theme.colors.border\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginVertical: 16\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Caption_M_SemiBold), {}, {\n      color: colors.black_five\n    })\n  }, \"Receive\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, Nunito_Sans.Body_M_SemiBold), {}, {\n      color: colors.black_one\n    })\n  }, outAmount ? normalizeNumber(outAmount) + \" \" + fromTo.to.symbol + \" ($\" + normalizeNumber(outAmount * outputDollarPrice) + \")\" : 'loading...'))))), React.createElement(View, {\n    style: {\n      marginBottom: 40\n    },\n    opacity: jupiterObject && bestRoute2 ? 1 : 0.65\n  }, React.createElement(ThemeButton, {\n    onPress: function onPress() {\n      if (jupiterObject && bestRoute2) {\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n        setModalVisible(true);\n        submitJupTrade();\n      }\n    }\n  }, \"Submit Trade\")), React.createElement(Modal, {\n    isVisible: modalVisible,\n    backdropColor: colors.black_two,\n    backdropOpacity: 0.35\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(false);\n    },\n    style: {\n      paddingHorizontal: 32,\n      paddingBottom: 32,\n      paddingTop: 8,\n      backgroundColor: '#111111',\n      borderRadius: 32,\n      width: 194,\n      alignItems: 'center',\n      alignSelf: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/logo_loader.png\"),\n    style: {\n      width: 110,\n      height: 114,\n      marginBottom: 2\n    }\n  }), React.createElement(Text, {\n    style: styles.loaderLabel\n  }, \"Submitting...\"))));\n};\n\nvar styles = StyleSheet.create({\n  loaderLabel: {\n    fontFamily: 'AzeretMono_SemiBold',\n    color: 'white',\n    fontSize: 12\n  },\n  tableData: {\n    fontSize: 17,\n    color: colors.primary\n  },\n  bigNumber: {\n    fontSize: 84,\n    fontFamily: 'Nunito Sans',\n    fontWeight: '400',\n    color: colors.black_two\n  },\n  mediumNumber: {\n    fontSize: 48,\n    fontFamily: 'Nunito Sans',\n    fontWeight: '400',\n    color: colors.black_one\n  },\n  numberContainer: {\n    width: 56,\n    height: 66,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  toFrom: _objectSpread(_objectSpread({}, Nunito_Sans.Caption_M_Regular), {}, {\n    color: colors.black_five,\n    marginBottom: 4\n  }),\n  swapTokens: _objectSpread(_objectSpread({}, Nunito_Sans.Body_M_Regular), {}, {\n    color: colors.black_two\n  }),\n  swapContainer: {\n    borderColor: colors.border,\n    borderWidth: 1,\n    borderRadius: 18,\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  numRow: {\n    flexDirection: 'row',\n    alignSelf: 'stretch',\n    justifyContent: 'space-between',\n    marginHorizontal: 16,\n    marginBottom: 16\n  }\n});\nexport default memo(TradePreviewScreen);","map":{"version":3,"sources":["/workspace/stream-pay/screens/TradePreviewScreen.tsx"],"names":["React","memo","useState","useEffect","Background","ThemeButton","theme","Modal","colors","fonts","Azeret_Mono","Nunito_Sans","SubPageHeader","useStoreState","SecureStore","Connection","PublicKey","normalizeNumber","mnemonicToSeed","accountFromSeed","Haptics","Jupiter","TOKEN_LIST_URL","TradePreviewScreen","navigation","route","modalVisible","setModalVisible","price","setPrice","outputDollarPrice","setOutputDollarPrice","displayPrice","setDisplayPrice","size","setSize","side","setSide","marketAddress","setMarketAddress","fees","setFees","outAmount","setOutAmount","tradeAmount","params","fromTo","pair","passcode","state","ownedTokens","bestRoute2","setBestRoute2","jupiterObject","setJupiterObject","getPossiblePairsTokenInfo","tokens","routeMap","inputToken","possiblePairs","get","address","possiblePairsTokenInfo","forEach","find","t","error","getRoutes","jupiter","outputToken","inputAmount","slippage","console","log","inputAmountLamports","Math","round","decimals","computeRoutes","routes","routesInfos","length","executeSwap","exchange","execute","catch","err","swapResult","txid","inputAddress","toString","outputAddress","outputAmount","getJupObject","connection","getItemAsync","mnemonic","seed","fromWallet","load","cluster","user","getTokens","fetch","json","addDecimals","number","stringNumber","difference","i","index","substring","substr","floatNumber","parseFloat","getPrice","inputMint","outPutMint","outPutMintAddress","outPutDecimals","usdcToken","usdcRoutes","dollarPrice","tradeSize","usdcRoutes2","dollarPrice2","bestRoute","getDepositAndFee","then","r","ratio","inAmount","submitJupTrade","navigate","from","mint","to","styles","bigNumber","alignSelf","marginVertical","borderWidth","borderColor","border","borderRadius","marginBottom","margin","flexDirection","justifyContent","Caption_M_SemiBold","color","black_five","Body_M_SemiBold","black_one","symbol","height","backgroundColor","impactAsync","ImpactFeedbackStyle","Medium","black_two","paddingHorizontal","paddingBottom","paddingTop","width","alignItems","require","loaderLabel","StyleSheet","create","fontFamily","fontSize","tableData","primary","fontWeight","mediumNumber","numberContainer","toFrom","Caption_M_Regular","swapTokens","Body_M_Regular","swapContainer","numRow","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport { Text } from 'react-native';\nimport { Background, ThemeButton } from '../components';\nimport { Navigation } from '../types';\nimport { View, Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport { theme } from '../core/theme';\nimport Modal from 'react-native-modal';\nconst {\n\tcolors,\n\tfonts: { Azeret_Mono, Nunito_Sans },\n} = theme;\nimport { SubPageHeader } from '../components';\nimport { useStoreState, useStoreActions } from '../hooks/storeHooks';\nimport * as SecureStore from 'expo-secure-store';\nimport {\n\tfindAssociatedTokenAddress,\n\tgetAccountFromSeed,\n\tDERIVATION_PATH,\n} from '../utils';\nimport { Account, Connection, PublicKey, Keypair } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { Market } from '@project-serum/serum';\nimport { normalizeNumber, mnemonicToSeed, accountFromSeed } from '../utils';\nimport * as Haptics from 'expo-haptics';\nimport { Jupiter, RouteInfo, TOKEN_LIST_URL } from '@jup-ag/core';\n\ntype Props = {\n\tnavigation: Navigation;\n\troute: Object;\n};\n\ninterface Token {\n\tchainId: number; // 101,\n\taddress: string; // 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n\tsymbol: string; // 'USDC',\n\tname: string; // 'Wrapped USDC',\n\tdecimals: number; // 6,\n\tlogoURI: string; // 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW/logo.png',\n\ttags: string[]; // [ 'stablecoin' ]\n}\n\nconst TradePreviewScreen = ({ navigation, route }: Props) => {\n\tconst [modalVisible, setModalVisible] = useState(false);\n\tconst [price, setPrice] = useState('');\n\tconst [outputDollarPrice, setOutputDollarPrice] = useState(0);\n\tconst [displayPrice, setDisplayPrice] = useState('');\n\tconst [size, setSize] = useState('');\n\tconst [side, setSide] = useState('sell');\n\tconst [marketAddress, setMarketAddress] = useState('');\n\tconst [fees, setFees] = useState({});\n\tconst [outAmount, setOutAmount] = useState('');\n\tconst tradeAmount = route.params.tradeAmount;\n\tconst fromTo = route.params.pair;\n\tconst passcode = useStoreState((state) => state.passcode);\n\tconst ownedTokens = useStoreState((state) => state.ownedTokens);\n\tconst [bestRoute2, setBestRoute2] = useState(null);\n\tconst [jupiterObject, setJupiterObject] = useState(null);\n\n\tconst getPossiblePairsTokenInfo = ({\n\t\ttokens,\n\t\trouteMap,\n\t\tinputToken,\n\t}: {\n\t\ttokens: Token[];\n\t\trouteMap: Map<string, string[]>;\n\t\tinputToken?: Token;\n\t}) => {\n\t\ttry {\n\t\t\tif (!inputToken) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\tconst possiblePairs = inputToken\n\t\t\t\t? routeMap.get(inputToken.address) || []\n\t\t\t\t: []; // return an array of token mints that can be swapped with SOL\n\t\t\tconst possiblePairsTokenInfo: { [key: string]: Token | undefined } =\n\t\t\t\t{};\n\t\t\tpossiblePairs.forEach((address) => {\n\t\t\t\tpossiblePairsTokenInfo[address] = tokens.find((t) => {\n\t\t\t\t\treturn t.address == address;\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Perform your conditionals here to use other outputToken\n\t\t\t// const alternativeOutputToken = possiblePairsTokenInfo[USDT_MINT_ADDRESS]\n\t\t\treturn possiblePairsTokenInfo;\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t};\n\n\tconst getRoutes = async ({\n\t\tjupiter,\n\t\tinputToken,\n\t\toutputToken,\n\t\tinputAmount,\n\t\tslippage,\n\t}: {\n\t\tjupiter: Jupiter;\n\t\tinputToken?: Token;\n\t\toutputToken?: Token;\n\t\tinputAmount: number;\n\t\tslippage: number;\n\t}) => {\n\t\ttry {\n\t\t\tif (!inputToken || !outputToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsole.log('Getting routes');\n\t\t\tconst inputAmountLamports = inputToken\n\t\t\t\t? Math.round(inputAmount * 10 ** inputToken.decimals)\n\t\t\t\t: 0; // Lamports based on token decimals\n\t\t\tconst routes =\n\t\t\t\tinputToken && outputToken\n\t\t\t\t\t? await jupiter.computeRoutes(\n\t\t\t\t\t\t\tnew PublicKey(inputToken.address),\n\t\t\t\t\t\t\tnew PublicKey(outputToken.address),\n\t\t\t\t\t\t\tinputAmountLamports,\n\t\t\t\t\t\t\tslippage,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t  )\n\t\t\t\t\t: null;\n\n\t\t\tif (routes && routes.routesInfos) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'Possible number of routes:',\n\t\t\t\t\troutes.routesInfos.length,\n\t\t\t\t);\n\t\t\t\tconsole.log('Best quote: ', routes.routesInfos[0].outAmount);\n\t\t\t\treturn routes;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t};\n\n\tconst executeSwap = async ({\n\t\tjupiter,\n\t\troute,\n\t}: {\n\t\tjupiter: Jupiter;\n\t\troute: RouteInfo;\n\t}) => {\n\t\ttry {\n\t\t\t// Prepare execute exchange\n\t\t\tconst { execute } = await jupiter.exchange({\n\t\t\t\troute,\n\t\t\t});\n\t\t\tconsole.log('execute: ', execute);\n\t\t\t// Execute swap\n\t\t\tconst swapResult: any = await execute().catch((err) =>\n\t\t\t\tconsole.log('error with trade', err),\n\t\t\t); // Force any to ignore TS misidentifying SwapResult type\n\t\t\tconsole.log('swapResult: ', swapResult);\n\n\t\t\tif (swapResult.error) {\n\t\t\t\tconsole.log(swapResult.error);\n\t\t\t} else {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`https://explorer.solana.com/tx/${swapResult.txid}`,\n\t\t\t\t);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`inputAddress=${swapResult.inputAddress.toString()} outputAddress=${swapResult.outputAddress.toString()}`,\n\t\t\t\t);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`inputAmount=${swapResult.inputAmount} outputAmount=${swapResult.outputAmount}`,\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t};\n\n\tasync function getJupObject() {\n\t\t// const connection = new Connection(\n\t\t// \t'https://solana--mainnet.datahub.figment.io/apikey/5d2d7ea54a347197ccc56fd24ecc2ac5',\n\t\t// );\n\t\tconst connection = new Connection(\n\t\t\t'https://solana-api.projectserum.com',\n\t\t);\n\n\t\tlet mnemonic = await SecureStore.getItemAsync(passcode);\n\t\tconst seed = await mnemonicToSeed(mnemonic);\n\t\tconst fromWallet = accountFromSeed(seed, 0, 'bip44', 0);\n\n\t\tconst jupiter = await Jupiter.load({\n\t\t\tconnection,\n\t\t\tcluster: 'mainnet-beta',\n\t\t\tuser: fromWallet, // or public key\n\t\t});\n\n\t\treturn jupiter;\n\t}\n\n\tasync function getTokens() {\n\t\tconst tokens: Token[] = await (\n\t\t\tawait fetch(TOKEN_LIST_URL['mainnet-beta'])\n\t\t).json();\n\t\treturn tokens;\n\t}\n\n\tfunction addDecimals(number, decimals) {\n\t\tlet stringNumber = number.toString();\n\t\tconst length = stringNumber.length;\n\t\tif (decimals > length) {\n\t\t\tconst difference = decimals - length;\n\t\t\tfor (let i = 0; i < difference; i++) {\n\t\t\t\tstringNumber = '0' + stringNumber;\n\t\t\t}\n\t\t}\n\n\t\tconst index = stringNumber.length - decimals;\n\n\t\tif (index > 0) {\n\t\t\tstringNumber =\n\t\t\t\tstringNumber.substring(0, index) +\n\t\t\t\t'.' +\n\t\t\t\tstringNumber.substr(index);\n\t\t} else {\n\t\t\tstringNumber = '.' + stringNumber;\n\t\t}\n\n\t\tconst floatNumber = parseFloat(stringNumber);\n\t\treturn floatNumber;\n\t}\n\n\tasync function getPrice(inputMint: string, outPutMint: string, size) {\n\t\tconst jupiter = await getJupObject();\n\t\tsetJupiterObject(jupiter);\n\t\tconst tokens = await getTokens();\n\n\t\tconst inputToken = tokens.find((t) => t.address == inputMint);\n\t\tlet outputToken = tokens.find((t) => {\n\t\t\tlet outPutMintAddress = outPutMint;\n\t\t\tif (\n\t\t\t\toutPutMintAddress ===\n\t\t\t\t'G79qAryn3Urn4pyJyTSiX6XNz3Zk1epwJbsnLA5Yntz5'\n\t\t\t) {\n\t\t\t\toutPutMintAddress =\n\t\t\t\t\t'So11111111111111111111111111111111111111112';\n\t\t\t}\n\t\t\treturn t.address == outPutMintAddress;\n\t\t});\n\t\tconst outPutDecimals = outputToken?.decimals;\n\n\t\t//usdc token\n\t\tconst usdcToken = tokens.find(\n\t\t\t(t) => t.address == 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n\t\t);\n\n\t\t//get usdc price\n\t\tconst usdcRoutes = await getRoutes({\n\t\t\tjupiter,\n\t\t\tinputToken,\n\t\t\toutputToken: usdcToken,\n\t\t\tinputAmount: 1, // 1 unit in UI\n\t\t\tslippage: 1, // 1% slippage\n\t\t});\n\n\t\t//get dollar price and convert it to dollars instead of lamports\n\t\tconst dollarPrice = usdcRoutes?.routesInfos[0]?.outAmount / 1000000;\n\t\tsetPrice(dollarPrice);\n\t\tconst tradeSize = parseFloat(tradeAmount) / dollarPrice;\n\t\tsetSize(tradeSize);\n\n\t\t//get usdc price of the output token\n\t\tconst usdcRoutes2 = await getRoutes({\n\t\t\tjupiter,\n\t\t\tinputToken: outputToken,\n\t\t\toutputToken: usdcToken,\n\t\t\tinputAmount: 1, // 1 unit in UI\n\t\t\tslippage: 1, // 1% slippage\n\t\t});\n\n\t\t//get dollar price of output token and convert it to dollars instead of lamports\n\t\tconst dollarPrice2 = usdcRoutes2?.routesInfos[0]?.outAmount / 1000000;\n\t\tconsole.log('dollarPrice2: ', dollarPrice2);\n\t\tsetOutputDollarPrice(dollarPrice2);\n\n\t\t//get conversion price between tokens\n\t\tconst routes = await getRoutes({\n\t\t\tjupiter,\n\t\t\tinputToken,\n\t\t\toutputToken,\n\t\t\tinputAmount: tradeSize, // 1 unit in UI\n\t\t\tslippage: 1, // 1% slippage\n\t\t});\n\t\tconsole.log('routes: ', routes);\n\n\t\tconst bestRoute = routes?.routesInfos[0];\n\t\tsetBestRoute2(bestRoute);\n\t\tconsole.log('bestRoute: ', bestRoute);\n\t\tbestRoute?.getDepositAndFee().then((r) => {\n\t\t\tconsole.log('deposit and fees', r);\n\t\t\tsetFees(r);\n\t\t});\n\t\tconsole.log('bestRoute.outAmount: ', bestRoute?.outAmount);\n\t\tsetOutAmount(addDecimals(bestRoute?.outAmount, outPutDecimals));\n\t\tconst ratio = bestRoute?.outAmount / bestRoute?.inAmount;\n\t\tsetDisplayPrice(ratio);\n\t}\n\n\tconst submitJupTrade = async () => {\n\t\tconsole.log('best route', bestRoute2);\n\t\tconsole.log('jupiter object', jupiterObject);\n\t\tawait executeSwap({ jupiter: jupiterObject, route: bestRoute2 }).catch(\n\t\t\t(err) => console.log('eroror', err),\n\t\t);\n\t\tsetModalVisible(false);\n\t\tnavigation.navigate('Trade Success', { tradeAmount, fromTo });\n\t};\n\n\tuseEffect(() => {\n\t\tgetPrice(fromTo.from.mint, fromTo.to.mint, size);\n\t}, [fromTo.from.mint, fromTo.to.mint]);\n\n\t// useEffect(() => {\n\t// \tconst originalPair = fromTo.to.pairs.filter((pair) =>\n\t// \t\tpair.pair.includes(fromTo.from.symbol),\n\t// \t)[0].pair;\n\n\t// \tconst pairIsNotOriginal =\n\t// \t\tfromTo.from.symbol + '/' + fromTo.to.symbol !== originalPair;\n\n\t// \tlet marketName;\n\t// \tif (pairIsNotOriginal) {\n\t// \t\tmarketName = fromTo.to.symbol + fromTo.from.symbol;\n\t// \t\tsetSide('buy');\n\t// \t} else {\n\t// \t\tmarketName = fromTo.from.symbol + fromTo.to.symbol;\n\t// \t}\n\n\t// \tconsole.log('marketName: ', marketName);\n\n\t// \tfetch(`https://serum-api.bonfida.com/trades/${marketName}`)\n\t// \t\t.then((res) => res.json())\n\t// \t\t.then((resp) => {\n\t// \t\t\tconsole.log('marketname', marketName);\n\n\t// \t\t\tconsole.log(resp);\n\t// \t\t\tconst recentPrice = resp.data[0].price;\n\t// \t\t\tconst newPrice = recentPrice * 1.005;\n\t// \t\t\tconsole.log('newprice', newPrice);\n\t// \t\t\tpairIsNotOriginal\n\t// \t\t\t\t? setDisplayPrice(1 / newPrice)\n\t// \t\t\t\t: setDisplayPrice(newPrice);\n\t// \t\t\tsetSize(parseFloat(tradeAmount) / newPrice);\n\t// \t\t\tsetPrice(newPrice);\n\t// \t\t\tsetMarketAddress(resp.data[0].marketAddress);\n\t// \t\t})\n\t// \t\t.catch((err) => console.log('error ', err));\n\t// }, []);\n\n\treturn (\n\t\t<Background>\n\t\t\t<View>\n\t\t\t\t<SubPageHeader backButton>Trade Preview</SubPageHeader>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...styles.bigNumber,\n\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\tmarginVertical: 32,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t${tradeAmount}\n\t\t\t\t</Text>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tborderColor: theme.colors.border,\n\t\t\t\t\t\tborderRadius: 18,\n\t\t\t\t\t\tmarginBottom: 16,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View style={{ margin: 16 }}>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t\tmarginVertical: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_five,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPay\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_one,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{normalizeNumber(size)} {fromTo.from.symbol} ($\n\t\t\t\t\t\t\t\t{tradeAmount})\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\t\t\tbackgroundColor: colors.border,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t\tmarginVertical: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_five,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFees\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_one,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{outAmount\n\t\t\t\t\t\t\t\t\t? `$${normalizeNumber(\n\t\t\t\t\t\t\t\t\t\t\tparseFloat(tradeAmount) -\n\t\t\t\t\t\t\t\t\t\t\t\toutAmount * outputDollarPrice,\n\t\t\t\t\t\t\t\t\t  )}`\n\t\t\t\t\t\t\t\t\t: 'loading...'}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\t\t\tbackgroundColor: theme.colors.border,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t\tmarginVertical: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Caption_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_five,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReceive\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...Nunito_Sans.Body_M_SemiBold,\n\t\t\t\t\t\t\t\t\tcolor: colors.black_one,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{outAmount\n\t\t\t\t\t\t\t\t\t? `${normalizeNumber(outAmount)} ${\n\t\t\t\t\t\t\t\t\t\t\tfromTo.to.symbol\n\t\t\t\t\t\t\t\t\t  } ($${normalizeNumber(\n\t\t\t\t\t\t\t\t\t\t\toutAmount * outputDollarPrice,\n\t\t\t\t\t\t\t\t\t  )})`\n\t\t\t\t\t\t\t\t\t: 'loading...'}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<View\n\t\t\t\tstyle={{ marginBottom: 40 }}\n\t\t\t\topacity={jupiterObject && bestRoute2 ? 1 : 0.65}\n\t\t\t>\n\t\t\t\t<ThemeButton\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tif (jupiterObject && bestRoute2) {\n\t\t\t\t\t\t\tHaptics.impactAsync(\n\t\t\t\t\t\t\t\tHaptics.ImpactFeedbackStyle.Medium,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetModalVisible(true);\n\t\t\t\t\t\t\tsubmitJupTrade();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSubmit Trade\n\t\t\t\t</ThemeButton>\n\t\t\t</View>\n\t\t\t<Modal\n\t\t\t\tisVisible={modalVisible}\n\t\t\t\tbackdropColor={colors.black_two}\n\t\t\t\tbackdropOpacity={0.35}\n\t\t\t\t// onBackdropPress={() => setModalVisible(false)}\n\t\t\t>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetModalVisible(false);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpaddingHorizontal: 32,\n\t\t\t\t\t\tpaddingBottom: 32,\n\t\t\t\t\t\tpaddingTop: 8,\n\t\t\t\t\t\tbackgroundColor: '#111111',\n\t\t\t\t\t\tborderRadius: 32,\n\t\t\t\t\t\twidth: 194,\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsource={require('../assets/images/logo_loader.png')}\n\t\t\t\t\t\tstyle={{ width: 110, height: 114, marginBottom: 2 }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Text style={styles.loaderLabel}>Submitting...</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</Modal>\n\t\t</Background>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tloaderLabel: {\n\t\tfontFamily: 'AzeretMono_SemiBold',\n\t\tcolor: 'white',\n\t\tfontSize: 12,\n\t},\n\ttableData: {\n\t\tfontSize: 17,\n\t\tcolor: colors.primary,\n\t},\n\tbigNumber: {\n\t\tfontSize: 84,\n\t\tfontFamily: 'Nunito Sans',\n\t\tfontWeight: '400',\n\t\tcolor: colors.black_two,\n\t},\n\tmediumNumber: {\n\t\tfontSize: 48,\n\t\tfontFamily: 'Nunito Sans',\n\t\tfontWeight: '400',\n\t\tcolor: colors.black_one,\n\t},\n\tnumberContainer: {\n\t\twidth: 56,\n\t\theight: 66,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\ttoFrom: {\n\t\t...Nunito_Sans.Caption_M_Regular,\n\t\tcolor: colors.black_five,\n\t\tmarginBottom: 4,\n\t},\n\tswapTokens: {\n\t\t...Nunito_Sans.Body_M_Regular,\n\t\tcolor: colors.black_two,\n\t},\n\tswapContainer: {\n\t\tborderColor: colors.border,\n\t\tborderWidth: 1,\n\t\tborderRadius: 18,\n\t\twidth: 40,\n\t\theight: 40,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tnumRow: {\n\t\tflexDirection: 'row',\n\t\talignSelf: 'stretch',\n\t\tjustifyContent: 'space-between',\n\t\tmarginHorizontal: 16,\n\t\tmarginBottom: 16,\n\t},\n});\n\nexport default memo(TradePreviewScreen);\n"]},"metadata":{},"sourceType":"module"}