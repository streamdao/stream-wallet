{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo } from \"react\";\nimport { FAB, Portal, Provider } from \"react-native-paper\";\nimport { useTheme } from \"react-native-paper\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\n\nvar Background2 = function Background2(_ref) {\n  var navigation = _ref.navigation,\n      children = _ref.children,\n      position = _ref.position,\n      noMenu = _ref.noMenu,\n      skipHeader = _ref.skipHeader;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState({\n    open: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var onStateChange = function onStateChange(_ref2) {\n    var open = _ref2.open;\n    return setState({\n      open: open\n    });\n  };\n\n  var open = state.open;\n  return React.createElement(ImageBackground, {\n    source: require(\"../assets/images/background2.jpg\"),\n    resizeMode: \"cover\",\n    style: styles.background\n  }, React.createElement(KeyboardAvoidingView, {\n    style: [styles.container, position === \"bottom\" ? styles.bottom : undefined, skipHeader ? styles.skipHeader : undefined],\n    keyboardVerticalOffset: 200,\n    behavior: \"padding\"\n  }, children), !noMenu && React.createElement(Provider, null, React.createElement(Portal, null, React.createElement(FAB.Group, {\n    open: open,\n    icon: open ? \"close\" : \"plus\",\n    fabStyle: {\n      backgroundColor: colors.primary\n    },\n    actions: [{\n      icon: \"arrow-collapse-down\",\n      label: \"Receive\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Receive\");\n      }\n    }, {\n      icon: \"arrow-expand-up\",\n      label: \"Send\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Send\");\n      }\n    }, {\n      icon: \"cached\",\n      label: \"Swap\",\n      onPress: function onPress() {\n        return console.log(\"Pressed notifications\");\n      }\n    }, {\n      icon: \"cog\",\n      label: \"Settings\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Settings\");\n      },\n      small: true\n    }],\n    onStateChange: onStateChange,\n    onPress: function onPress() {\n      if (open) {}\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: \"100%\"\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  skipHeader: {\n    paddingTop: 300\n  },\n  bottom: {\n    justifyContent: \"flex-end\"\n  }\n});\nexport default memo(Background2);","map":{"version":3,"sources":["/workspace/stream-pay/components/Background2.tsx"],"names":["React","memo","FAB","Portal","Provider","useTheme","Background2","navigation","children","position","noMenu","skipHeader","colors","useState","open","state","setState","onStateChange","require","styles","background","container","bottom","undefined","backgroundColor","primary","icon","label","onPress","navigate","console","log","small","StyleSheet","create","flex","width","padding","maxWidth","alignSelf","alignItems","justifyContent","paddingTop"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport { FAB, Portal, Provider } from \"react-native-paper\";\nimport { useTheme } from \"react-native-paper\";\nimport {\n  ImageBackground,\n  StyleSheet,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nimport { Navigation } from \"../types\";\n\ntype Props = {\n  navigation?: Navigation;\n  children: React.ReactNode;\n  position?: string;\n  noMenu?: boolean;\n  skipHeader?: boolean;\n};\n\nconst Background2 = ({\n  navigation,\n  children,\n  position,\n  noMenu,\n  skipHeader,\n}: Props) => {\n  const { colors } = useTheme();\n\n  const [state, setState] = React.useState({ open: false });\n  const onStateChange = ({ open }) => setState({ open });\n  const { open } = state;\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/images/background2.jpg\")}\n      resizeMode=\"cover\"\n      style={styles.background}\n    >\n      <KeyboardAvoidingView\n        style={[\n          styles.container,\n          position === \"bottom\" ? styles.bottom : undefined,\n          skipHeader ? styles.skipHeader : undefined,\n        ]}\n        keyboardVerticalOffset={200}\n        behavior=\"padding\"\n      >\n        {children}\n      </KeyboardAvoidingView>\n      {!noMenu && (\n        <Provider>\n          <Portal>\n            <FAB.Group\n              open={open}\n              icon={open ? \"close\" : \"plus\"}\n              fabStyle={{ backgroundColor: colors.primary }}\n              actions={[\n                {\n                  icon: \"arrow-collapse-down\",\n                  label: \"Receive\",\n                  onPress: () => navigation.navigate(\"Receive\"),\n                },\n                {\n                  icon: \"arrow-expand-up\",\n                  label: \"Send\",\n                  onPress: () => navigation.navigate(\"Send\"),\n                },\n                {\n                  icon: \"cached\",\n                  label: \"Swap\",\n                  onPress: () => console.log(\"Pressed notifications\"),\n                },\n                {\n                  icon: \"cog\",\n                  label: \"Settings\",\n                  onPress: () => navigation.navigate(\"Settings\"),\n                  small: true,\n                },\n              ]}\n              onStateChange={onStateChange}\n              onPress={() => {\n                if (open) {\n                  // do something if the speed dial is open\n                }\n              }}\n            />\n          </Portal>\n        </Provider>\n      )}\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: \"100%\",\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  skipHeader: { paddingTop: 300 },\n\n  bottom: {\n    justifyContent: \"flex-end\",\n  },\n});\n\nexport default memo(Background2);\n"]},"metadata":{},"sourceType":"module"}