{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg from 'react-native-svg';\nimport Path from \"../animated-path\";\n\nvar Chart = function (_PureComponent) {\n  _inherits(Chart, _PureComponent);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: 0,\n      height: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"createPaths\",\n    value: function createPaths() {\n      throw 'Extending \"Chart\" requires you to override \"createPaths';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          xAccessor = _this$props.xAccessor,\n          yAccessor = _this$props.yAccessor,\n          yScale = _this$props.yScale,\n          xScale = _this$props.xScale,\n          style = _this$props.style,\n          animate = _this$props.animate,\n          animationDuration = _this$props.animationDuration,\n          numberOfTicks = _this$props.numberOfTicks,\n          _this$props$contentIn = _this$props.contentInset,\n          _this$props$contentIn2 = _this$props$contentIn.top,\n          top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n          _this$props$contentIn3 = _this$props$contentIn.bottom,\n          bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3,\n          _this$props$contentIn4 = _this$props$contentIn.left,\n          left = _this$props$contentIn4 === void 0 ? 0 : _this$props$contentIn4,\n          _this$props$contentIn5 = _this$props$contentIn.right,\n          right = _this$props$contentIn5 === void 0 ? 0 : _this$props$contentIn5,\n          gridMax = _this$props.gridMax,\n          gridMin = _this$props.gridMin,\n          clampX = _this$props.clampX,\n          clampY = _this$props.clampY,\n          svg = _this$props.svg,\n          children = _this$props.children;\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n\n      var mappedData = data.map(function (item, index) {\n        return {\n          y: yAccessor({\n            item: item,\n            index: index\n          }),\n          x: xAccessor({\n            item: item,\n            index: index\n          })\n        };\n      });\n      var yValues = mappedData.map(function (item) {\n        return item.y;\n      });\n      var xValues = mappedData.map(function (item) {\n        return item.x;\n      });\n      var yExtent = array.extent([].concat(_toConsumableArray(yValues), [gridMin, gridMax]));\n      var xExtent = array.extent(_toConsumableArray(xValues));\n      var _this$props2 = this.props,\n          _this$props2$yMin = _this$props2.yMin,\n          yMin = _this$props2$yMin === void 0 ? yExtent[0] : _this$props2$yMin,\n          _this$props2$yMax = _this$props2.yMax,\n          yMax = _this$props2$yMax === void 0 ? yExtent[1] : _this$props2$yMax,\n          _this$props2$xMin = _this$props2.xMin,\n          xMin = _this$props2$xMin === void 0 ? xExtent[0] : _this$props2$xMin,\n          _this$props2$xMax = _this$props2.xMax,\n          xMax = _this$props2$xMax === void 0 ? xExtent[1] : _this$props2$xMax;\n      var y = yScale().domain([yMin, yMax]).range([height - bottom, top]).clamp(clampY);\n      var x = xScale().domain([xMin, xMax]).range([left, width - right]).clamp(clampX);\n      var paths = this.createPaths({\n        data: mappedData,\n        x: x,\n        y: y\n      });\n      var ticks = y.ticks(numberOfTicks);\n\n      var extraProps = _objectSpread({\n        x: x,\n        y: y,\n        data: data,\n        ticks: ticks,\n        width: width,\n        height: height\n      }, paths);\n\n      return React.createElement(View, {\n        style: style\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }), React.createElement(Path, _extends({\n        fill: 'none'\n      }, svg, {\n        d: paths.path,\n        animate: animate,\n        animationDuration: animationDuration\n      })), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }))));\n    }\n  }]);\n\n  return Chart;\n}(PureComponent);\n\nChart.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.array)]).isRequired,\n  svg: PropTypes.object,\n  style: PropTypes.any,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  curve: PropTypes.func,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  numberOfTicks: PropTypes.number,\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  xMin: PropTypes.any,\n  xMax: PropTypes.any,\n  clampX: PropTypes.bool,\n  clampY: PropTypes.bool,\n  xScale: PropTypes.func,\n  yScale: PropTypes.func,\n  xAccessor: PropTypes.func,\n  yAccessor: PropTypes.func\n};\nChart.defaultProps = {\n  svg: {},\n  width: 100,\n  height: 100,\n  curve: shape.curveLinear,\n  contentInset: {},\n  numberOfTicks: 10,\n  xScale: scale.scaleLinear,\n  yScale: scale.scaleLinear,\n  xAccessor: function xAccessor(_ref) {\n    var index = _ref.index;\n    return index;\n  },\n  yAccessor: function yAccessor(_ref2) {\n    var item = _ref2.item;\n    return item;\n  }\n};\nexport default Chart;","map":{"version":3,"sources":["chart.js"],"names":["width","height","_onLayout","nativeEvent","layout","createPaths","render","contentInset","top","bottom","left","right","children","data","style","mappedData","y","yAccessor","item","index","x","xAccessor","yValues","xValues","yExtent","array","xExtent","yMin","yMax","xMin","xMax","yScale","xScale","paths","ticks","extraProps","flex","event","child","React","animationDuration","Chart","PropTypes","svg","animate","curve","number","numberOfTicks","gridMin","gridMax","clampX","clampY","func","shape","scale"],"mappings":"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","sourcesContent":["import * as array from 'd3-array'\nimport * as scale from 'd3-scale'\nimport * as shape from 'd3-shape'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport Svg from 'react-native-svg'\nimport Path from '../animated-path'\n\nclass Chart extends PureComponent {\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    createPaths() {\n        throw 'Extending \"Chart\" requires you to override \"createPaths'\n    }\n\n    render() {\n        const {\n            data,\n            xAccessor,\n            yAccessor,\n            yScale,\n            xScale,\n            style,\n            animate,\n            animationDuration,\n            numberOfTicks,\n            contentInset: { top = 0, bottom = 0, left = 0, right = 0 },\n            gridMax,\n            gridMin,\n            clampX,\n            clampY,\n            svg,\n            children,\n        } = this.props\n\n        const { width, height } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const mappedData = data.map((item, index) => ({\n            y: yAccessor({ item, index }),\n            x: xAccessor({ item, index }),\n        }))\n\n        const yValues = mappedData.map((item) => item.y)\n        const xValues = mappedData.map((item) => item.x)\n\n        const yExtent = array.extent([...yValues, gridMin, gridMax])\n        const xExtent = array.extent([...xValues])\n\n        const { yMin = yExtent[0], yMax = yExtent[1], xMin = xExtent[0], xMax = xExtent[1] } = this.props\n\n        //invert range to support svg coordinate system\n        const y = yScale()\n            .domain([yMin, yMax])\n            .range([height - bottom, top])\n            .clamp(clampY)\n\n        const x = xScale()\n            .domain([xMin, xMax])\n            .range([left, width - right])\n            .clamp(clampX)\n\n        const paths = this.createPaths({\n            data: mappedData,\n            x,\n            y,\n        })\n\n        const ticks = y.ticks(numberOfTicks)\n\n        const extraProps = {\n            x,\n            y,\n            data,\n            ticks,\n            width,\n            height,\n            ...paths,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            <Path\n                                fill={'none'}\n                                {...svg}\n                                d={paths.path}\n                                animate={animate}\n                                animationDuration={animationDuration}\n                            />\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nChart.propTypes = {\n    data: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.object),\n        PropTypes.arrayOf(PropTypes.number),\n        PropTypes.arrayOf(PropTypes.array),\n    ]).isRequired,\n    svg: PropTypes.object,\n\n    style: PropTypes.any,\n\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n\n    curve: PropTypes.func,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    numberOfTicks: PropTypes.number,\n\n    gridMin: PropTypes.number,\n    gridMax: PropTypes.number,\n\n    yMin: PropTypes.any,\n    yMax: PropTypes.any,\n    xMin: PropTypes.any,\n    xMax: PropTypes.any,\n    clampX: PropTypes.bool,\n    clampY: PropTypes.bool,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n\n    xAccessor: PropTypes.func,\n    yAccessor: PropTypes.func,\n}\n\nChart.defaultProps = {\n    svg: {},\n    width: 100,\n    height: 100,\n    curve: shape.curveLinear,\n    contentInset: {},\n    numberOfTicks: 10,\n    xScale: scale.scaleLinear,\n    yScale: scale.scaleLinear,\n    xAccessor: ({ index }) => index,\n    yAccessor: ({ item }) => item,\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}