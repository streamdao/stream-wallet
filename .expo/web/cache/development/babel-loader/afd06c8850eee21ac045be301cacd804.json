{"ast":null,"code":"import { createStore, action } from 'easy-peasy';\nvar store = createStore({\n  account: '',\n  passcode: '',\n  updatePasscode: action(function (state, payload) {\n    state.passcode = payload;\n  }),\n  updateAccount: action(function (state, payload) {\n    state.account = payload;\n  }),\n  ownedTokens: '',\n  allTokens: '',\n  setOwnedTokens: action(function (state, payload) {\n    state.ownedTokens = payload;\n  }),\n  setAllTokens: action(function (state, payload) {\n    state.allTokens = payload;\n  }),\n  selectedWallet: 0,\n  setSelectedWallet: action(function (state, payload) {\n    state.selectedWallet = payload;\n  }),\n  activeSubWallet: 0,\n  setActiveSubWallet: action(function (state, payload) {\n    state.activeSubWallet = payload;\n  }),\n  subWallets: '',\n  setSubWallets: action(function (state, payload) {\n    state.subWallets = payload;\n  }),\n  subWalletTokensArray: '',\n  setSubWalletTokensArray: action(function (state, payload) {\n    state.subWalletTokensArray = payload;\n  }),\n  finalSubWallets: '',\n  setFinalSubWallets: action(function (state, payload) {\n    state.finalSubWallets = payload;\n  }),\n  tokenMap: '',\n  setTokenMap: action(function (state, payload) {\n    state.tokenMap = payload;\n  }),\n  tokenPairs: '',\n  setTokenPairs: action(function (state, payload) {\n    state.tokenPairs = payload;\n  }),\n  web3Connection: '',\n  setWeb3Connection: action(function (state, payload) {\n    state.web3Connection = payload;\n  }),\n  firstLoadedTokens: '',\n  setFirstLoadedTokens: action(function (state, payload) {\n    state.firstLoadedTokens = payload;\n  }),\n  subWalletNftsArray: '',\n  setSubWalletNftsArray: action(function (state, payload) {\n    state.subWalletNftsArray = payload;\n  })\n});\nexport default store;","map":{"version":3,"sources":["/workspace/stream-pay/store/index.ts"],"names":["createStore","action","store","account","passcode","updatePasscode","state","payload","updateAccount","ownedTokens","allTokens","setOwnedTokens","setAllTokens","selectedWallet","setSelectedWallet","activeSubWallet","setActiveSubWallet","subWallets","setSubWallets","subWalletTokensArray","setSubWalletTokensArray","finalSubWallets","setFinalSubWallets","tokenMap","setTokenMap","tokenPairs","setTokenPairs","web3Connection","setWeb3Connection","firstLoadedTokens","setFirstLoadedTokens","subWalletNftsArray","setSubWalletNftsArray"],"mappings":"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","sourcesContent":["import {\n\tGeneric,\n\tgeneric,\n\tComputed,\n\tcomputed,\n\tcreateStore,\n\taction,\n\tAction,\n\tpersist,\n} from 'easy-peasy';\nimport storage from '../storage';\n\nconst store = createStore({\n\taccount: '',\n\tpasscode: '',\n\tupdatePasscode: action((state, payload) => {\n\t\tstate.passcode = payload;\n\t}),\n\tupdateAccount: action((state, payload) => {\n\t\tstate.account = payload;\n\t}),\n\townedTokens: '',\n\tallTokens: '',\n\tsetOwnedTokens: action((state, payload) => {\n\t\tstate.ownedTokens = payload;\n\t}),\n\tsetAllTokens: action((state, payload) => {\n\t\tstate.allTokens = payload;\n\t}),\n\tselectedWallet: 0,\n\tsetSelectedWallet: action((state, payload) => {\n\t\tstate.selectedWallet = payload;\n\t}),\n\tactiveSubWallet: 0,\n\tsetActiveSubWallet: action((state, payload) => {\n\t\tstate.activeSubWallet = payload;\n\t}),\n\tsubWallets: '',\n\tsetSubWallets: action((state, payload) => {\n\t\tstate.subWallets = payload;\n\t}),\n\tsubWalletTokensArray: '',\n\tsetSubWalletTokensArray: action((state, payload) => {\n\t\tstate.subWalletTokensArray = payload;\n\t}),\n\tfinalSubWallets: '',\n\tsetFinalSubWallets: action((state, payload) => {\n\t\tstate.finalSubWallets = payload;\n\t}),\n\ttokenMap: '',\n\tsetTokenMap: action((state, payload) => {\n\t\tstate.tokenMap = payload;\n\t}),\n\ttokenPairs: '',\n\tsetTokenPairs: action((state, payload) => {\n\t\tstate.tokenPairs = payload;\n\t}),\n\tweb3Connection: '',\n\tsetWeb3Connection: action((state, payload) => {\n\t\tstate.web3Connection = payload;\n\t}),\n\tfirstLoadedTokens: '',\n\tsetFirstLoadedTokens: action((state, payload) => {\n\t\tstate.firstLoadedTokens = payload;\n\t}),\n\tsubWalletNftsArray: '',\n\tsetSubWalletNftsArray: action((state, payload) => {\n\t\tstate.subWalletNftsArray = payload;\n\t}),\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}