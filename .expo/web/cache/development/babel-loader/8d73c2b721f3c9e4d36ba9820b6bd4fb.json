{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nexport default function useCachedResources() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHideAsync();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                NunitoSans_Regular: require(\"../assets/fonts/NunitoSans-Regular.ttf\"),\n                NunitoSans_Regular_Italic: require(\"../assets/fonts/NunitoSans-Italic.ttf\"),\n                NunitoSans_SemiBold: require(\"../assets/fonts/NunitoSans-SemiBold.ttf\"),\n                NunitoSans_SemiBold_Italic: require(\"../assets/fonts/NunitoSans-SemiBoldItalic.ttf\"),\n                NunitoSans_Bold: require(\"../assets/fonts/NunitoSans-Bold.ttf\"),\n                NunitoSans_Bold_Italic: require(\"../assets/fonts/NunitoSans-BoldItalic.ttf\"),\n                NunitoSans_ExtraBold: require(\"../assets/fonts/AzeretMono-ExtraBold.ttf\"),\n                NunitoSans_ExtraBold_Italic: require(\"../assets/fonts/NunitoSans-ExtraBoldItalic.ttf\"),\n                AzeretMono_Bold: require(\"../assets/fonts/AzeretMono-Bold.ttf\"),\n                AzeretMono_ExtraBold: require(\"../assets/fonts/AzeretMono-ExtraBold.ttf\"),\n                AzeretMono_SemiBold: require(\"../assets/fonts/AzeretMono-SemiBold.ttf\")\n              }));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 9:\n              _context.prev = 9;\n              setLoadingComplete(true);\n              SplashScreen.hideAsync();\n              return _context.finish(9);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6, 9, 13]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"sources":["/workspace/stream-pay/hooks/useCachedResources.ts"],"names":["Font","SplashScreen","React","useCachedResources","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","preventAutoHideAsync","loadAsync","NunitoSans_Regular","require","NunitoSans_Regular_Italic","NunitoSans_SemiBold","NunitoSans_SemiBold_Italic","NunitoSans_Bold","NunitoSans_Bold_Italic","NunitoSans_ExtraBold","NunitoSans_ExtraBold_Italic","AzeretMono_Bold","AzeretMono_ExtraBold","AzeretMono_SemiBold","console","warn","hideAsync"],"mappings":";;AAAA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAaA,eAAe,SAASC,kBAAT,GAA8B;AAC5C,wBAAgDD,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,kBAA1B;;AAGAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,YAAM;AACrB,aAAeC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEP,cAAAA,YAAY,CAACQ,oBAAb;AAFF;AAAA,+CAKQT,IAAI,CAACU,SAAL,CAAe;AACpBC,gBAAAA,kBAAkB,EAAEC,OAAO,0CADP;AAEpBC,gBAAAA,yBAAyB,EAAED,OAAO,yCAFd;AAGpBE,gBAAAA,mBAAmB,EAAEF,OAAO,2CAHR;AAIpBG,gBAAAA,0BAA0B,EAAEH,OAAO,iDAJf;AAKpBI,gBAAAA,eAAe,EAAEJ,OAAO,uCALJ;AAMpBK,gBAAAA,sBAAsB,EAAEL,OAAO,6CANX;AAOpBM,gBAAAA,oBAAoB,EAAEN,OAAO,4CAPT;AAQpBO,gBAAAA,2BAA2B,EAAEP,OAAO,kDARhB;AASpBQ,gBAAAA,eAAe,EAAER,OAAO,uCATJ;AAUpBS,gBAAAA,oBAAoB,EAAET,OAAO,4CAVT;AAWpBU,gBAAAA,mBAAmB,EAAEV,OAAO;AAXR,eAAf,CALR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBEW,cAAAA,OAAO,CAACC,IAAR;;AApBF;AAAA;AAsBElB,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAL,cAAAA,YAAY,CAACwB,SAAb;AAvBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BAjB,IAAAA,yBAAyB;AACzB,GA7BD,EA6BG,EA7BH;AA+BA,SAAOH,iBAAP;AACA","sourcesContent":["import * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport {\n\tuseFonts,\n\tNunitoSans_400Regular,\n\tNunitoSans_400Regular_Italic,\n\tNunitoSans_600SemiBold,\n\tNunitoSans_600SemiBold_Italic,\n\tNunitoSans_700Bold,\n\tNunitoSans_700Bold_Italic,\n\tNunitoSans_800ExtraBold,\n\tNunitoSans_800ExtraBold_Italic,\n} from '@expo-google-fonts/nunito-sans';\n\nexport default function useCachedResources() {\n\tconst [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n\t// Load any resources or data that we need prior to rendering the app\n\tReact.useEffect(() => {\n\t\tasync function loadResourcesAndDataAsync() {\n\t\t\ttry {\n\t\t\t\tSplashScreen.preventAutoHideAsync();\n\n\t\t\t\t// Load fonts\n\t\t\t\tawait Font.loadAsync({\n\t\t\t\t\tNunitoSans_Regular: require('../assets/fonts/NunitoSans-Regular.ttf'),\n\t\t\t\t\tNunitoSans_Regular_Italic: require('../assets/fonts/NunitoSans-Italic.ttf'),\n\t\t\t\t\tNunitoSans_SemiBold: require('../assets/fonts/NunitoSans-SemiBold.ttf'),\n\t\t\t\t\tNunitoSans_SemiBold_Italic: require('../assets/fonts/NunitoSans-SemiBoldItalic.ttf'),\n\t\t\t\t\tNunitoSans_Bold: require('../assets/fonts/NunitoSans-Bold.ttf'),\n\t\t\t\t\tNunitoSans_Bold_Italic: require('../assets/fonts/NunitoSans-BoldItalic.ttf'),\n\t\t\t\t\tNunitoSans_ExtraBold: require('../assets/fonts/AzeretMono-ExtraBold.ttf'),\n\t\t\t\t\tNunitoSans_ExtraBold_Italic: require('../assets/fonts/NunitoSans-ExtraBoldItalic.ttf'),\n\t\t\t\t\tAzeretMono_Bold: require('../assets/fonts/AzeretMono-Bold.ttf'),\n\t\t\t\t\tAzeretMono_ExtraBold: require('../assets/fonts/AzeretMono-ExtraBold.ttf'),\n\t\t\t\t\tAzeretMono_SemiBold: require('../assets/fonts/AzeretMono-SemiBold.ttf'),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\t// We might want to provide this error information to an error reporting service\n\t\t\t\tconsole.warn(e);\n\t\t\t} finally {\n\t\t\t\tsetLoadingComplete(true);\n\t\t\t\tSplashScreen.hideAsync();\n\t\t\t}\n\t\t}\n\n\t\tloadResourcesAndDataAsync();\n\t}, []);\n\n\treturn isLoadingComplete;\n}\n"]},"metadata":{},"sourceType":"module"}