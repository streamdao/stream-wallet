{"ast":null,"code":"'use strict';\n\nvar GUIID = 1;\nvar clearedImmediates = new Set();\n\nfunction setImmediate(callback) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError('setImmediate must be called with at least one argument (a function to call)');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new TypeError('The first argument to setImmediate must be a function.');\n  }\n\n  var id = GUIID++;\n\n  if (clearedImmediates.has(id)) {\n    clearedImmediates.delete(id);\n  }\n\n  global.queueMicrotask(function () {\n    if (!clearedImmediates.has(id)) {\n      callback.apply(undefined, args);\n    } else {\n      clearedImmediates.delete(id);\n    }\n  });\n  return id;\n}\n\nfunction clearImmediate(immediateID) {\n  clearedImmediates.add(immediateID);\n}\n\nvar immediateShim = {\n  setImmediate: setImmediate,\n  clearImmediate: clearImmediate\n};\nmodule.exports = immediateShim;","map":{"version":3,"sources":["/workspace/stream-pay/node_modules/react-native/Libraries/Core/Timers/immediateShim.js"],"names":["GUIID","clearedImmediates","Set","setImmediate","callback","args","arguments","length","TypeError","id","has","delete","global","queueMicrotask","apply","undefined","clearImmediate","immediateID","add","immediateShim","module","exports"],"mappings":"AAUA;;AAGA,IAAIA,KAAK,GAAG,CAAZ;AAGA,IAAMC,iBAA8B,GAAG,IAAIC,GAAJ,EAAvC;;AAOA,SAASC,YAAT,CAAsBC,QAAtB,EAAgE;AAAA,oCAAnBC,IAAmB;AAAnBA,IAAAA,IAAmB;AAAA;;AAC9D,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CACJ,6EADI,CAAN;AAGD;;AACD,MAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAII,SAAJ,CACJ,wDADI,CAAN;AAGD;;AAED,MAAMC,EAAE,GAAGT,KAAK,EAAhB;;AAGA,MAAIC,iBAAiB,CAACS,GAAlB,CAAsBD,EAAtB,CAAJ,EAA+B;AAC7BR,IAAAA,iBAAiB,CAACU,MAAlB,CAAyBF,EAAzB;AACD;;AAEDG,EAAAA,MAAM,CAACC,cAAP,CAAsB,YAAM;AAC1B,QAAI,CAACZ,iBAAiB,CAACS,GAAlB,CAAsBD,EAAtB,CAAL,EAAgC;AAC9BL,MAAAA,QAAQ,CAACU,KAAT,CAAeC,SAAf,EAA0BV,IAA1B;AACD,KAFD,MAEO;AAELJ,MAAAA,iBAAiB,CAACU,MAAlB,CAAyBF,EAAzB;AACD;AACF,GAPD;AASA,SAAOA,EAAP;AACD;;AAKD,SAASO,cAAT,CAAwBC,WAAxB,EAA6C;AAC3ChB,EAAAA,iBAAiB,CAACiB,GAAlB,CAAsBD,WAAtB;AACD;;AAED,IAAME,aAAa,GAAG;AACpBhB,EAAAA,YAAY,EAAEA,YADM;AAEpBa,EAAAA,cAAc,EAAEA;AAFI,CAAtB;AAKAI,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n// Globally Unique Immediate ID.\nlet GUIID = 1;\n\n// A global set of the currently cleared immediates.\nconst clearedImmediates: Set<number> = new Set();\n\n/**\n * Shim the setImmediate API on top of queueMicrotask.\n * @param {function} func Callback to be invoked before the end of the\n * current JavaScript execution loop.\n */\nfunction setImmediate(callback: Function, ...args: any): number {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      'setImmediate must be called with at least one argument (a function to call)',\n    );\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(\n      'The first argument to setImmediate must be a function.',\n    );\n  }\n\n  const id = GUIID++;\n  // This is an edgey case in which the sequentially assigned ID has been\n  // \"guessed\" and \"cleared\" ahead of time, so we need to clear it up first.\n  if (clearedImmediates.has(id)) {\n    clearedImmediates.delete(id);\n  }\n\n  global.queueMicrotask(() => {\n    if (!clearedImmediates.has(id)) {\n      callback.apply(undefined, args);\n    } else {\n      // Free up the Set entry.\n      clearedImmediates.delete(id);\n    }\n  });\n\n  return id;\n}\n\n/**\n * @param {number} immediateID The ID of the immediate to be clearred.\n */\nfunction clearImmediate(immediateID: number) {\n  clearedImmediates.add(immediateID);\n}\n\nconst immediateShim = {\n  setImmediate: setImmediate,\n  clearImmediate: clearImmediate,\n};\n\nmodule.exports = immediateShim;\n"]},"metadata":{},"sourceType":"script"}